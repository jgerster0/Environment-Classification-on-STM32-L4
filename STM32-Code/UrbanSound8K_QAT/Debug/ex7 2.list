
ex7.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00015dd0  08010000  08010000  00010000  2**16
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00050e2c  08025de0  08025de0  00025de0  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08076c0c  08076c0c  00078f80  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08076c0c  08076c0c  00076c0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08076c14  08076c14  00078f80  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08076c14  08076c14  00076c14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08076c18  08076c18  00076c18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00001f80  20000000  08076c1c  00077000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000404  20001f80  08078b9c  00078f80  2**2
                  ALLOC
 10 ._user_heap_stack 00006004  20002384  08078b9c  00079384  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00078f80  2**0
                  CONTENTS, READONLY
 12 .debug_info   00017088  00000000  00000000  00078fb0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003562  00000000  00000000  00090038  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loclists 00006a27  00000000  00000000  0009359a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000af8  00000000  00000000  00099fc8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000b6e  00000000  00000000  0009aac0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00029470  00000000  00000000  0009b62e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00012b10  00000000  00000000  000c4a9e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000ffd69  00000000  00000000  000d75ae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000086  00000000  00000000  001d7317  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00002cd4  00000000  00000000  001d73a0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000065  00000000  00000000  001da074  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08010000 <__do_global_dtors_aux>:
 8010000:	b510      	push	{r4, lr}
 8010002:	4c05      	ldr	r4, [pc, #20]	@ (8010018 <__do_global_dtors_aux+0x18>)
 8010004:	7823      	ldrb	r3, [r4, #0]
 8010006:	b933      	cbnz	r3, 8010016 <__do_global_dtors_aux+0x16>
 8010008:	4b04      	ldr	r3, [pc, #16]	@ (801001c <__do_global_dtors_aux+0x1c>)
 801000a:	b113      	cbz	r3, 8010012 <__do_global_dtors_aux+0x12>
 801000c:	4804      	ldr	r0, [pc, #16]	@ (8010020 <__do_global_dtors_aux+0x20>)
 801000e:	f3af 8000 	nop.w
 8010012:	2301      	movs	r3, #1
 8010014:	7023      	strb	r3, [r4, #0]
 8010016:	bd10      	pop	{r4, pc}
 8010018:	20001f80 	.word	0x20001f80
 801001c:	00000000 	.word	0x00000000
 8010020:	08025db8 	.word	0x08025db8

08010024 <frame_dummy>:
 8010024:	b508      	push	{r3, lr}
 8010026:	4b03      	ldr	r3, [pc, #12]	@ (8010034 <frame_dummy+0x10>)
 8010028:	b11b      	cbz	r3, 8010032 <frame_dummy+0xe>
 801002a:	4903      	ldr	r1, [pc, #12]	@ (8010038 <frame_dummy+0x14>)
 801002c:	4803      	ldr	r0, [pc, #12]	@ (801003c <frame_dummy+0x18>)
 801002e:	f3af 8000 	nop.w
 8010032:	bd08      	pop	{r3, pc}
 8010034:	00000000 	.word	0x00000000
 8010038:	20001f84 	.word	0x20001f84
 801003c:	08025db8 	.word	0x08025db8

08010040 <memchr>:
 8010040:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8010044:	2a10      	cmp	r2, #16
 8010046:	db2b      	blt.n	80100a0 <memchr+0x60>
 8010048:	f010 0f07 	tst.w	r0, #7
 801004c:	d008      	beq.n	8010060 <memchr+0x20>
 801004e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8010052:	3a01      	subs	r2, #1
 8010054:	428b      	cmp	r3, r1
 8010056:	d02d      	beq.n	80100b4 <memchr+0x74>
 8010058:	f010 0f07 	tst.w	r0, #7
 801005c:	b342      	cbz	r2, 80100b0 <memchr+0x70>
 801005e:	d1f6      	bne.n	801004e <memchr+0xe>
 8010060:	b4f0      	push	{r4, r5, r6, r7}
 8010062:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8010066:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 801006a:	f022 0407 	bic.w	r4, r2, #7
 801006e:	f07f 0700 	mvns.w	r7, #0
 8010072:	2300      	movs	r3, #0
 8010074:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8010078:	3c08      	subs	r4, #8
 801007a:	ea85 0501 	eor.w	r5, r5, r1
 801007e:	ea86 0601 	eor.w	r6, r6, r1
 8010082:	fa85 f547 	uadd8	r5, r5, r7
 8010086:	faa3 f587 	sel	r5, r3, r7
 801008a:	fa86 f647 	uadd8	r6, r6, r7
 801008e:	faa5 f687 	sel	r6, r5, r7
 8010092:	b98e      	cbnz	r6, 80100b8 <memchr+0x78>
 8010094:	d1ee      	bne.n	8010074 <memchr+0x34>
 8010096:	bcf0      	pop	{r4, r5, r6, r7}
 8010098:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 801009c:	f002 0207 	and.w	r2, r2, #7
 80100a0:	b132      	cbz	r2, 80100b0 <memchr+0x70>
 80100a2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80100a6:	3a01      	subs	r2, #1
 80100a8:	ea83 0301 	eor.w	r3, r3, r1
 80100ac:	b113      	cbz	r3, 80100b4 <memchr+0x74>
 80100ae:	d1f8      	bne.n	80100a2 <memchr+0x62>
 80100b0:	2000      	movs	r0, #0
 80100b2:	4770      	bx	lr
 80100b4:	3801      	subs	r0, #1
 80100b6:	4770      	bx	lr
 80100b8:	2d00      	cmp	r5, #0
 80100ba:	bf06      	itte	eq
 80100bc:	4635      	moveq	r5, r6
 80100be:	3803      	subeq	r0, #3
 80100c0:	3807      	subne	r0, #7
 80100c2:	f015 0f01 	tst.w	r5, #1
 80100c6:	d107      	bne.n	80100d8 <memchr+0x98>
 80100c8:	3001      	adds	r0, #1
 80100ca:	f415 7f80 	tst.w	r5, #256	@ 0x100
 80100ce:	bf02      	ittt	eq
 80100d0:	3001      	addeq	r0, #1
 80100d2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80100d6:	3001      	addeq	r0, #1
 80100d8:	bcf0      	pop	{r4, r5, r6, r7}
 80100da:	3801      	subs	r0, #1
 80100dc:	4770      	bx	lr
 80100de:	bf00      	nop

080100e0 <strlen>:
 80100e0:	4603      	mov	r3, r0
 80100e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80100e6:	2a00      	cmp	r2, #0
 80100e8:	d1fb      	bne.n	80100e2 <strlen+0x2>
 80100ea:	1a18      	subs	r0, r3, r0
 80100ec:	3801      	subs	r0, #1
 80100ee:	4770      	bx	lr

080100f0 <__aeabi_drsub>:
 80100f0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80100f4:	e002      	b.n	80100fc <__adddf3>
 80100f6:	bf00      	nop

080100f8 <__aeabi_dsub>:
 80100f8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080100fc <__adddf3>:
 80100fc:	b530      	push	{r4, r5, lr}
 80100fe:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8010102:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8010106:	ea94 0f05 	teq	r4, r5
 801010a:	bf08      	it	eq
 801010c:	ea90 0f02 	teqeq	r0, r2
 8010110:	bf1f      	itttt	ne
 8010112:	ea54 0c00 	orrsne.w	ip, r4, r0
 8010116:	ea55 0c02 	orrsne.w	ip, r5, r2
 801011a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 801011e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8010122:	f000 80e2 	beq.w	80102ea <__adddf3+0x1ee>
 8010126:	ea4f 5454 	mov.w	r4, r4, lsr #21
 801012a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 801012e:	bfb8      	it	lt
 8010130:	426d      	neglt	r5, r5
 8010132:	dd0c      	ble.n	801014e <__adddf3+0x52>
 8010134:	442c      	add	r4, r5
 8010136:	ea80 0202 	eor.w	r2, r0, r2
 801013a:	ea81 0303 	eor.w	r3, r1, r3
 801013e:	ea82 0000 	eor.w	r0, r2, r0
 8010142:	ea83 0101 	eor.w	r1, r3, r1
 8010146:	ea80 0202 	eor.w	r2, r0, r2
 801014a:	ea81 0303 	eor.w	r3, r1, r3
 801014e:	2d36      	cmp	r5, #54	@ 0x36
 8010150:	bf88      	it	hi
 8010152:	bd30      	pophi	{r4, r5, pc}
 8010154:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8010158:	ea4f 3101 	mov.w	r1, r1, lsl #12
 801015c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8010160:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8010164:	d002      	beq.n	801016c <__adddf3+0x70>
 8010166:	4240      	negs	r0, r0
 8010168:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 801016c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8010170:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8010174:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8010178:	d002      	beq.n	8010180 <__adddf3+0x84>
 801017a:	4252      	negs	r2, r2
 801017c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8010180:	ea94 0f05 	teq	r4, r5
 8010184:	f000 80a7 	beq.w	80102d6 <__adddf3+0x1da>
 8010188:	f1a4 0401 	sub.w	r4, r4, #1
 801018c:	f1d5 0e20 	rsbs	lr, r5, #32
 8010190:	db0d      	blt.n	80101ae <__adddf3+0xb2>
 8010192:	fa02 fc0e 	lsl.w	ip, r2, lr
 8010196:	fa22 f205 	lsr.w	r2, r2, r5
 801019a:	1880      	adds	r0, r0, r2
 801019c:	f141 0100 	adc.w	r1, r1, #0
 80101a0:	fa03 f20e 	lsl.w	r2, r3, lr
 80101a4:	1880      	adds	r0, r0, r2
 80101a6:	fa43 f305 	asr.w	r3, r3, r5
 80101aa:	4159      	adcs	r1, r3
 80101ac:	e00e      	b.n	80101cc <__adddf3+0xd0>
 80101ae:	f1a5 0520 	sub.w	r5, r5, #32
 80101b2:	f10e 0e20 	add.w	lr, lr, #32
 80101b6:	2a01      	cmp	r2, #1
 80101b8:	fa03 fc0e 	lsl.w	ip, r3, lr
 80101bc:	bf28      	it	cs
 80101be:	f04c 0c02 	orrcs.w	ip, ip, #2
 80101c2:	fa43 f305 	asr.w	r3, r3, r5
 80101c6:	18c0      	adds	r0, r0, r3
 80101c8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80101cc:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80101d0:	d507      	bpl.n	80101e2 <__adddf3+0xe6>
 80101d2:	f04f 0e00 	mov.w	lr, #0
 80101d6:	f1dc 0c00 	rsbs	ip, ip, #0
 80101da:	eb7e 0000 	sbcs.w	r0, lr, r0
 80101de:	eb6e 0101 	sbc.w	r1, lr, r1
 80101e2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80101e6:	d31b      	bcc.n	8010220 <__adddf3+0x124>
 80101e8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80101ec:	d30c      	bcc.n	8010208 <__adddf3+0x10c>
 80101ee:	0849      	lsrs	r1, r1, #1
 80101f0:	ea5f 0030 	movs.w	r0, r0, rrx
 80101f4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80101f8:	f104 0401 	add.w	r4, r4, #1
 80101fc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8010200:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8010204:	f080 809a 	bcs.w	801033c <__adddf3+0x240>
 8010208:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 801020c:	bf08      	it	eq
 801020e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8010212:	f150 0000 	adcs.w	r0, r0, #0
 8010216:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 801021a:	ea41 0105 	orr.w	r1, r1, r5
 801021e:	bd30      	pop	{r4, r5, pc}
 8010220:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8010224:	4140      	adcs	r0, r0
 8010226:	eb41 0101 	adc.w	r1, r1, r1
 801022a:	3c01      	subs	r4, #1
 801022c:	bf28      	it	cs
 801022e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8010232:	d2e9      	bcs.n	8010208 <__adddf3+0x10c>
 8010234:	f091 0f00 	teq	r1, #0
 8010238:	bf04      	itt	eq
 801023a:	4601      	moveq	r1, r0
 801023c:	2000      	moveq	r0, #0
 801023e:	fab1 f381 	clz	r3, r1
 8010242:	bf08      	it	eq
 8010244:	3320      	addeq	r3, #32
 8010246:	f1a3 030b 	sub.w	r3, r3, #11
 801024a:	f1b3 0220 	subs.w	r2, r3, #32
 801024e:	da0c      	bge.n	801026a <__adddf3+0x16e>
 8010250:	320c      	adds	r2, #12
 8010252:	dd08      	ble.n	8010266 <__adddf3+0x16a>
 8010254:	f102 0c14 	add.w	ip, r2, #20
 8010258:	f1c2 020c 	rsb	r2, r2, #12
 801025c:	fa01 f00c 	lsl.w	r0, r1, ip
 8010260:	fa21 f102 	lsr.w	r1, r1, r2
 8010264:	e00c      	b.n	8010280 <__adddf3+0x184>
 8010266:	f102 0214 	add.w	r2, r2, #20
 801026a:	bfd8      	it	le
 801026c:	f1c2 0c20 	rsble	ip, r2, #32
 8010270:	fa01 f102 	lsl.w	r1, r1, r2
 8010274:	fa20 fc0c 	lsr.w	ip, r0, ip
 8010278:	bfdc      	itt	le
 801027a:	ea41 010c 	orrle.w	r1, r1, ip
 801027e:	4090      	lslle	r0, r2
 8010280:	1ae4      	subs	r4, r4, r3
 8010282:	bfa2      	ittt	ge
 8010284:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8010288:	4329      	orrge	r1, r5
 801028a:	bd30      	popge	{r4, r5, pc}
 801028c:	ea6f 0404 	mvn.w	r4, r4
 8010290:	3c1f      	subs	r4, #31
 8010292:	da1c      	bge.n	80102ce <__adddf3+0x1d2>
 8010294:	340c      	adds	r4, #12
 8010296:	dc0e      	bgt.n	80102b6 <__adddf3+0x1ba>
 8010298:	f104 0414 	add.w	r4, r4, #20
 801029c:	f1c4 0220 	rsb	r2, r4, #32
 80102a0:	fa20 f004 	lsr.w	r0, r0, r4
 80102a4:	fa01 f302 	lsl.w	r3, r1, r2
 80102a8:	ea40 0003 	orr.w	r0, r0, r3
 80102ac:	fa21 f304 	lsr.w	r3, r1, r4
 80102b0:	ea45 0103 	orr.w	r1, r5, r3
 80102b4:	bd30      	pop	{r4, r5, pc}
 80102b6:	f1c4 040c 	rsb	r4, r4, #12
 80102ba:	f1c4 0220 	rsb	r2, r4, #32
 80102be:	fa20 f002 	lsr.w	r0, r0, r2
 80102c2:	fa01 f304 	lsl.w	r3, r1, r4
 80102c6:	ea40 0003 	orr.w	r0, r0, r3
 80102ca:	4629      	mov	r1, r5
 80102cc:	bd30      	pop	{r4, r5, pc}
 80102ce:	fa21 f004 	lsr.w	r0, r1, r4
 80102d2:	4629      	mov	r1, r5
 80102d4:	bd30      	pop	{r4, r5, pc}
 80102d6:	f094 0f00 	teq	r4, #0
 80102da:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80102de:	bf06      	itte	eq
 80102e0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80102e4:	3401      	addeq	r4, #1
 80102e6:	3d01      	subne	r5, #1
 80102e8:	e74e      	b.n	8010188 <__adddf3+0x8c>
 80102ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80102ee:	bf18      	it	ne
 80102f0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80102f4:	d029      	beq.n	801034a <__adddf3+0x24e>
 80102f6:	ea94 0f05 	teq	r4, r5
 80102fa:	bf08      	it	eq
 80102fc:	ea90 0f02 	teqeq	r0, r2
 8010300:	d005      	beq.n	801030e <__adddf3+0x212>
 8010302:	ea54 0c00 	orrs.w	ip, r4, r0
 8010306:	bf04      	itt	eq
 8010308:	4619      	moveq	r1, r3
 801030a:	4610      	moveq	r0, r2
 801030c:	bd30      	pop	{r4, r5, pc}
 801030e:	ea91 0f03 	teq	r1, r3
 8010312:	bf1e      	ittt	ne
 8010314:	2100      	movne	r1, #0
 8010316:	2000      	movne	r0, #0
 8010318:	bd30      	popne	{r4, r5, pc}
 801031a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 801031e:	d105      	bne.n	801032c <__adddf3+0x230>
 8010320:	0040      	lsls	r0, r0, #1
 8010322:	4149      	adcs	r1, r1
 8010324:	bf28      	it	cs
 8010326:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 801032a:	bd30      	pop	{r4, r5, pc}
 801032c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8010330:	bf3c      	itt	cc
 8010332:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8010336:	bd30      	popcc	{r4, r5, pc}
 8010338:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 801033c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8010340:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8010344:	f04f 0000 	mov.w	r0, #0
 8010348:	bd30      	pop	{r4, r5, pc}
 801034a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 801034e:	bf1a      	itte	ne
 8010350:	4619      	movne	r1, r3
 8010352:	4610      	movne	r0, r2
 8010354:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8010358:	bf1c      	itt	ne
 801035a:	460b      	movne	r3, r1
 801035c:	4602      	movne	r2, r0
 801035e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8010362:	bf06      	itte	eq
 8010364:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8010368:	ea91 0f03 	teqeq	r1, r3
 801036c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8010370:	bd30      	pop	{r4, r5, pc}
 8010372:	bf00      	nop

08010374 <__aeabi_ui2d>:
 8010374:	f090 0f00 	teq	r0, #0
 8010378:	bf04      	itt	eq
 801037a:	2100      	moveq	r1, #0
 801037c:	4770      	bxeq	lr
 801037e:	b530      	push	{r4, r5, lr}
 8010380:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8010384:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8010388:	f04f 0500 	mov.w	r5, #0
 801038c:	f04f 0100 	mov.w	r1, #0
 8010390:	e750      	b.n	8010234 <__adddf3+0x138>
 8010392:	bf00      	nop

08010394 <__aeabi_i2d>:
 8010394:	f090 0f00 	teq	r0, #0
 8010398:	bf04      	itt	eq
 801039a:	2100      	moveq	r1, #0
 801039c:	4770      	bxeq	lr
 801039e:	b530      	push	{r4, r5, lr}
 80103a0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80103a4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80103a8:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 80103ac:	bf48      	it	mi
 80103ae:	4240      	negmi	r0, r0
 80103b0:	f04f 0100 	mov.w	r1, #0
 80103b4:	e73e      	b.n	8010234 <__adddf3+0x138>
 80103b6:	bf00      	nop

080103b8 <__aeabi_f2d>:
 80103b8:	0042      	lsls	r2, r0, #1
 80103ba:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80103be:	ea4f 0131 	mov.w	r1, r1, rrx
 80103c2:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80103c6:	bf1f      	itttt	ne
 80103c8:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80103cc:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80103d0:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80103d4:	4770      	bxne	lr
 80103d6:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80103da:	bf08      	it	eq
 80103dc:	4770      	bxeq	lr
 80103de:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80103e2:	bf04      	itt	eq
 80103e4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80103e8:	4770      	bxeq	lr
 80103ea:	b530      	push	{r4, r5, lr}
 80103ec:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80103f0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80103f4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80103f8:	e71c      	b.n	8010234 <__adddf3+0x138>
 80103fa:	bf00      	nop

080103fc <__aeabi_ul2d>:
 80103fc:	ea50 0201 	orrs.w	r2, r0, r1
 8010400:	bf08      	it	eq
 8010402:	4770      	bxeq	lr
 8010404:	b530      	push	{r4, r5, lr}
 8010406:	f04f 0500 	mov.w	r5, #0
 801040a:	e00a      	b.n	8010422 <__aeabi_l2d+0x16>

0801040c <__aeabi_l2d>:
 801040c:	ea50 0201 	orrs.w	r2, r0, r1
 8010410:	bf08      	it	eq
 8010412:	4770      	bxeq	lr
 8010414:	b530      	push	{r4, r5, lr}
 8010416:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 801041a:	d502      	bpl.n	8010422 <__aeabi_l2d+0x16>
 801041c:	4240      	negs	r0, r0
 801041e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8010422:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8010426:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 801042a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 801042e:	f43f aed8 	beq.w	80101e2 <__adddf3+0xe6>
 8010432:	f04f 0203 	mov.w	r2, #3
 8010436:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 801043a:	bf18      	it	ne
 801043c:	3203      	addne	r2, #3
 801043e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8010442:	bf18      	it	ne
 8010444:	3203      	addne	r2, #3
 8010446:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 801044a:	f1c2 0320 	rsb	r3, r2, #32
 801044e:	fa00 fc03 	lsl.w	ip, r0, r3
 8010452:	fa20 f002 	lsr.w	r0, r0, r2
 8010456:	fa01 fe03 	lsl.w	lr, r1, r3
 801045a:	ea40 000e 	orr.w	r0, r0, lr
 801045e:	fa21 f102 	lsr.w	r1, r1, r2
 8010462:	4414      	add	r4, r2
 8010464:	e6bd      	b.n	80101e2 <__adddf3+0xe6>
 8010466:	bf00      	nop

08010468 <__aeabi_dmul>:
 8010468:	b570      	push	{r4, r5, r6, lr}
 801046a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 801046e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8010472:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8010476:	bf1d      	ittte	ne
 8010478:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 801047c:	ea94 0f0c 	teqne	r4, ip
 8010480:	ea95 0f0c 	teqne	r5, ip
 8010484:	f000 f8de 	bleq	8010644 <__aeabi_dmul+0x1dc>
 8010488:	442c      	add	r4, r5
 801048a:	ea81 0603 	eor.w	r6, r1, r3
 801048e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8010492:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8010496:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 801049a:	bf18      	it	ne
 801049c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80104a0:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80104a4:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80104a8:	d038      	beq.n	801051c <__aeabi_dmul+0xb4>
 80104aa:	fba0 ce02 	umull	ip, lr, r0, r2
 80104ae:	f04f 0500 	mov.w	r5, #0
 80104b2:	fbe1 e502 	umlal	lr, r5, r1, r2
 80104b6:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 80104ba:	fbe0 e503 	umlal	lr, r5, r0, r3
 80104be:	f04f 0600 	mov.w	r6, #0
 80104c2:	fbe1 5603 	umlal	r5, r6, r1, r3
 80104c6:	f09c 0f00 	teq	ip, #0
 80104ca:	bf18      	it	ne
 80104cc:	f04e 0e01 	orrne.w	lr, lr, #1
 80104d0:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80104d4:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80104d8:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80104dc:	d204      	bcs.n	80104e8 <__aeabi_dmul+0x80>
 80104de:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80104e2:	416d      	adcs	r5, r5
 80104e4:	eb46 0606 	adc.w	r6, r6, r6
 80104e8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80104ec:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80104f0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80104f4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80104f8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80104fc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8010500:	bf88      	it	hi
 8010502:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8010506:	d81e      	bhi.n	8010546 <__aeabi_dmul+0xde>
 8010508:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 801050c:	bf08      	it	eq
 801050e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8010512:	f150 0000 	adcs.w	r0, r0, #0
 8010516:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 801051a:	bd70      	pop	{r4, r5, r6, pc}
 801051c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8010520:	ea46 0101 	orr.w	r1, r6, r1
 8010524:	ea40 0002 	orr.w	r0, r0, r2
 8010528:	ea81 0103 	eor.w	r1, r1, r3
 801052c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8010530:	bfc2      	ittt	gt
 8010532:	ebd4 050c 	rsbsgt	r5, r4, ip
 8010536:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 801053a:	bd70      	popgt	{r4, r5, r6, pc}
 801053c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8010540:	f04f 0e00 	mov.w	lr, #0
 8010544:	3c01      	subs	r4, #1
 8010546:	f300 80ab 	bgt.w	80106a0 <__aeabi_dmul+0x238>
 801054a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 801054e:	bfde      	ittt	le
 8010550:	2000      	movle	r0, #0
 8010552:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8010556:	bd70      	pople	{r4, r5, r6, pc}
 8010558:	f1c4 0400 	rsb	r4, r4, #0
 801055c:	3c20      	subs	r4, #32
 801055e:	da35      	bge.n	80105cc <__aeabi_dmul+0x164>
 8010560:	340c      	adds	r4, #12
 8010562:	dc1b      	bgt.n	801059c <__aeabi_dmul+0x134>
 8010564:	f104 0414 	add.w	r4, r4, #20
 8010568:	f1c4 0520 	rsb	r5, r4, #32
 801056c:	fa00 f305 	lsl.w	r3, r0, r5
 8010570:	fa20 f004 	lsr.w	r0, r0, r4
 8010574:	fa01 f205 	lsl.w	r2, r1, r5
 8010578:	ea40 0002 	orr.w	r0, r0, r2
 801057c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8010580:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8010584:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8010588:	fa21 f604 	lsr.w	r6, r1, r4
 801058c:	eb42 0106 	adc.w	r1, r2, r6
 8010590:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8010594:	bf08      	it	eq
 8010596:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 801059a:	bd70      	pop	{r4, r5, r6, pc}
 801059c:	f1c4 040c 	rsb	r4, r4, #12
 80105a0:	f1c4 0520 	rsb	r5, r4, #32
 80105a4:	fa00 f304 	lsl.w	r3, r0, r4
 80105a8:	fa20 f005 	lsr.w	r0, r0, r5
 80105ac:	fa01 f204 	lsl.w	r2, r1, r4
 80105b0:	ea40 0002 	orr.w	r0, r0, r2
 80105b4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80105b8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80105bc:	f141 0100 	adc.w	r1, r1, #0
 80105c0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80105c4:	bf08      	it	eq
 80105c6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80105ca:	bd70      	pop	{r4, r5, r6, pc}
 80105cc:	f1c4 0520 	rsb	r5, r4, #32
 80105d0:	fa00 f205 	lsl.w	r2, r0, r5
 80105d4:	ea4e 0e02 	orr.w	lr, lr, r2
 80105d8:	fa20 f304 	lsr.w	r3, r0, r4
 80105dc:	fa01 f205 	lsl.w	r2, r1, r5
 80105e0:	ea43 0302 	orr.w	r3, r3, r2
 80105e4:	fa21 f004 	lsr.w	r0, r1, r4
 80105e8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80105ec:	fa21 f204 	lsr.w	r2, r1, r4
 80105f0:	ea20 0002 	bic.w	r0, r0, r2
 80105f4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80105f8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80105fc:	bf08      	it	eq
 80105fe:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8010602:	bd70      	pop	{r4, r5, r6, pc}
 8010604:	f094 0f00 	teq	r4, #0
 8010608:	d10f      	bne.n	801062a <__aeabi_dmul+0x1c2>
 801060a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 801060e:	0040      	lsls	r0, r0, #1
 8010610:	eb41 0101 	adc.w	r1, r1, r1
 8010614:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8010618:	bf08      	it	eq
 801061a:	3c01      	subeq	r4, #1
 801061c:	d0f7      	beq.n	801060e <__aeabi_dmul+0x1a6>
 801061e:	ea41 0106 	orr.w	r1, r1, r6
 8010622:	f095 0f00 	teq	r5, #0
 8010626:	bf18      	it	ne
 8010628:	4770      	bxne	lr
 801062a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 801062e:	0052      	lsls	r2, r2, #1
 8010630:	eb43 0303 	adc.w	r3, r3, r3
 8010634:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8010638:	bf08      	it	eq
 801063a:	3d01      	subeq	r5, #1
 801063c:	d0f7      	beq.n	801062e <__aeabi_dmul+0x1c6>
 801063e:	ea43 0306 	orr.w	r3, r3, r6
 8010642:	4770      	bx	lr
 8010644:	ea94 0f0c 	teq	r4, ip
 8010648:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 801064c:	bf18      	it	ne
 801064e:	ea95 0f0c 	teqne	r5, ip
 8010652:	d00c      	beq.n	801066e <__aeabi_dmul+0x206>
 8010654:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8010658:	bf18      	it	ne
 801065a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 801065e:	d1d1      	bne.n	8010604 <__aeabi_dmul+0x19c>
 8010660:	ea81 0103 	eor.w	r1, r1, r3
 8010664:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8010668:	f04f 0000 	mov.w	r0, #0
 801066c:	bd70      	pop	{r4, r5, r6, pc}
 801066e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8010672:	bf06      	itte	eq
 8010674:	4610      	moveq	r0, r2
 8010676:	4619      	moveq	r1, r3
 8010678:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 801067c:	d019      	beq.n	80106b2 <__aeabi_dmul+0x24a>
 801067e:	ea94 0f0c 	teq	r4, ip
 8010682:	d102      	bne.n	801068a <__aeabi_dmul+0x222>
 8010684:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8010688:	d113      	bne.n	80106b2 <__aeabi_dmul+0x24a>
 801068a:	ea95 0f0c 	teq	r5, ip
 801068e:	d105      	bne.n	801069c <__aeabi_dmul+0x234>
 8010690:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8010694:	bf1c      	itt	ne
 8010696:	4610      	movne	r0, r2
 8010698:	4619      	movne	r1, r3
 801069a:	d10a      	bne.n	80106b2 <__aeabi_dmul+0x24a>
 801069c:	ea81 0103 	eor.w	r1, r1, r3
 80106a0:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80106a4:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80106a8:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80106ac:	f04f 0000 	mov.w	r0, #0
 80106b0:	bd70      	pop	{r4, r5, r6, pc}
 80106b2:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80106b6:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 80106ba:	bd70      	pop	{r4, r5, r6, pc}

080106bc <__aeabi_ddiv>:
 80106bc:	b570      	push	{r4, r5, r6, lr}
 80106be:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80106c2:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80106c6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80106ca:	bf1d      	ittte	ne
 80106cc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80106d0:	ea94 0f0c 	teqne	r4, ip
 80106d4:	ea95 0f0c 	teqne	r5, ip
 80106d8:	f000 f8a7 	bleq	801082a <__aeabi_ddiv+0x16e>
 80106dc:	eba4 0405 	sub.w	r4, r4, r5
 80106e0:	ea81 0e03 	eor.w	lr, r1, r3
 80106e4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80106e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80106ec:	f000 8088 	beq.w	8010800 <__aeabi_ddiv+0x144>
 80106f0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80106f4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80106f8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80106fc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8010700:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8010704:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8010708:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 801070c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8010710:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8010714:	429d      	cmp	r5, r3
 8010716:	bf08      	it	eq
 8010718:	4296      	cmpeq	r6, r2
 801071a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 801071e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8010722:	d202      	bcs.n	801072a <__aeabi_ddiv+0x6e>
 8010724:	085b      	lsrs	r3, r3, #1
 8010726:	ea4f 0232 	mov.w	r2, r2, rrx
 801072a:	1ab6      	subs	r6, r6, r2
 801072c:	eb65 0503 	sbc.w	r5, r5, r3
 8010730:	085b      	lsrs	r3, r3, #1
 8010732:	ea4f 0232 	mov.w	r2, r2, rrx
 8010736:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 801073a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 801073e:	ebb6 0e02 	subs.w	lr, r6, r2
 8010742:	eb75 0e03 	sbcs.w	lr, r5, r3
 8010746:	bf22      	ittt	cs
 8010748:	1ab6      	subcs	r6, r6, r2
 801074a:	4675      	movcs	r5, lr
 801074c:	ea40 000c 	orrcs.w	r0, r0, ip
 8010750:	085b      	lsrs	r3, r3, #1
 8010752:	ea4f 0232 	mov.w	r2, r2, rrx
 8010756:	ebb6 0e02 	subs.w	lr, r6, r2
 801075a:	eb75 0e03 	sbcs.w	lr, r5, r3
 801075e:	bf22      	ittt	cs
 8010760:	1ab6      	subcs	r6, r6, r2
 8010762:	4675      	movcs	r5, lr
 8010764:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8010768:	085b      	lsrs	r3, r3, #1
 801076a:	ea4f 0232 	mov.w	r2, r2, rrx
 801076e:	ebb6 0e02 	subs.w	lr, r6, r2
 8010772:	eb75 0e03 	sbcs.w	lr, r5, r3
 8010776:	bf22      	ittt	cs
 8010778:	1ab6      	subcs	r6, r6, r2
 801077a:	4675      	movcs	r5, lr
 801077c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8010780:	085b      	lsrs	r3, r3, #1
 8010782:	ea4f 0232 	mov.w	r2, r2, rrx
 8010786:	ebb6 0e02 	subs.w	lr, r6, r2
 801078a:	eb75 0e03 	sbcs.w	lr, r5, r3
 801078e:	bf22      	ittt	cs
 8010790:	1ab6      	subcs	r6, r6, r2
 8010792:	4675      	movcs	r5, lr
 8010794:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8010798:	ea55 0e06 	orrs.w	lr, r5, r6
 801079c:	d018      	beq.n	80107d0 <__aeabi_ddiv+0x114>
 801079e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80107a2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80107a6:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80107aa:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80107ae:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80107b2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80107b6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80107ba:	d1c0      	bne.n	801073e <__aeabi_ddiv+0x82>
 80107bc:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80107c0:	d10b      	bne.n	80107da <__aeabi_ddiv+0x11e>
 80107c2:	ea41 0100 	orr.w	r1, r1, r0
 80107c6:	f04f 0000 	mov.w	r0, #0
 80107ca:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 80107ce:	e7b6      	b.n	801073e <__aeabi_ddiv+0x82>
 80107d0:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80107d4:	bf04      	itt	eq
 80107d6:	4301      	orreq	r1, r0
 80107d8:	2000      	moveq	r0, #0
 80107da:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80107de:	bf88      	it	hi
 80107e0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80107e4:	f63f aeaf 	bhi.w	8010546 <__aeabi_dmul+0xde>
 80107e8:	ebb5 0c03 	subs.w	ip, r5, r3
 80107ec:	bf04      	itt	eq
 80107ee:	ebb6 0c02 	subseq.w	ip, r6, r2
 80107f2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80107f6:	f150 0000 	adcs.w	r0, r0, #0
 80107fa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80107fe:	bd70      	pop	{r4, r5, r6, pc}
 8010800:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8010804:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8010808:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 801080c:	bfc2      	ittt	gt
 801080e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8010812:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8010816:	bd70      	popgt	{r4, r5, r6, pc}
 8010818:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 801081c:	f04f 0e00 	mov.w	lr, #0
 8010820:	3c01      	subs	r4, #1
 8010822:	e690      	b.n	8010546 <__aeabi_dmul+0xde>
 8010824:	ea45 0e06 	orr.w	lr, r5, r6
 8010828:	e68d      	b.n	8010546 <__aeabi_dmul+0xde>
 801082a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 801082e:	ea94 0f0c 	teq	r4, ip
 8010832:	bf08      	it	eq
 8010834:	ea95 0f0c 	teqeq	r5, ip
 8010838:	f43f af3b 	beq.w	80106b2 <__aeabi_dmul+0x24a>
 801083c:	ea94 0f0c 	teq	r4, ip
 8010840:	d10a      	bne.n	8010858 <__aeabi_ddiv+0x19c>
 8010842:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8010846:	f47f af34 	bne.w	80106b2 <__aeabi_dmul+0x24a>
 801084a:	ea95 0f0c 	teq	r5, ip
 801084e:	f47f af25 	bne.w	801069c <__aeabi_dmul+0x234>
 8010852:	4610      	mov	r0, r2
 8010854:	4619      	mov	r1, r3
 8010856:	e72c      	b.n	80106b2 <__aeabi_dmul+0x24a>
 8010858:	ea95 0f0c 	teq	r5, ip
 801085c:	d106      	bne.n	801086c <__aeabi_ddiv+0x1b0>
 801085e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8010862:	f43f aefd 	beq.w	8010660 <__aeabi_dmul+0x1f8>
 8010866:	4610      	mov	r0, r2
 8010868:	4619      	mov	r1, r3
 801086a:	e722      	b.n	80106b2 <__aeabi_dmul+0x24a>
 801086c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8010870:	bf18      	it	ne
 8010872:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8010876:	f47f aec5 	bne.w	8010604 <__aeabi_dmul+0x19c>
 801087a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 801087e:	f47f af0d 	bne.w	801069c <__aeabi_dmul+0x234>
 8010882:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8010886:	f47f aeeb 	bne.w	8010660 <__aeabi_dmul+0x1f8>
 801088a:	e712      	b.n	80106b2 <__aeabi_dmul+0x24a>

0801088c <__gedf2>:
 801088c:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8010890:	e006      	b.n	80108a0 <__cmpdf2+0x4>
 8010892:	bf00      	nop

08010894 <__ledf2>:
 8010894:	f04f 0c01 	mov.w	ip, #1
 8010898:	e002      	b.n	80108a0 <__cmpdf2+0x4>
 801089a:	bf00      	nop

0801089c <__cmpdf2>:
 801089c:	f04f 0c01 	mov.w	ip, #1
 80108a0:	f84d cd04 	str.w	ip, [sp, #-4]!
 80108a4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80108a8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80108ac:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80108b0:	bf18      	it	ne
 80108b2:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80108b6:	d01b      	beq.n	80108f0 <__cmpdf2+0x54>
 80108b8:	b001      	add	sp, #4
 80108ba:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80108be:	bf0c      	ite	eq
 80108c0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80108c4:	ea91 0f03 	teqne	r1, r3
 80108c8:	bf02      	ittt	eq
 80108ca:	ea90 0f02 	teqeq	r0, r2
 80108ce:	2000      	moveq	r0, #0
 80108d0:	4770      	bxeq	lr
 80108d2:	f110 0f00 	cmn.w	r0, #0
 80108d6:	ea91 0f03 	teq	r1, r3
 80108da:	bf58      	it	pl
 80108dc:	4299      	cmppl	r1, r3
 80108de:	bf08      	it	eq
 80108e0:	4290      	cmpeq	r0, r2
 80108e2:	bf2c      	ite	cs
 80108e4:	17d8      	asrcs	r0, r3, #31
 80108e6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 80108ea:	f040 0001 	orr.w	r0, r0, #1
 80108ee:	4770      	bx	lr
 80108f0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80108f4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80108f8:	d102      	bne.n	8010900 <__cmpdf2+0x64>
 80108fa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80108fe:	d107      	bne.n	8010910 <__cmpdf2+0x74>
 8010900:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8010904:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8010908:	d1d6      	bne.n	80108b8 <__cmpdf2+0x1c>
 801090a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 801090e:	d0d3      	beq.n	80108b8 <__cmpdf2+0x1c>
 8010910:	f85d 0b04 	ldr.w	r0, [sp], #4
 8010914:	4770      	bx	lr
 8010916:	bf00      	nop

08010918 <__aeabi_cdrcmple>:
 8010918:	4684      	mov	ip, r0
 801091a:	4610      	mov	r0, r2
 801091c:	4662      	mov	r2, ip
 801091e:	468c      	mov	ip, r1
 8010920:	4619      	mov	r1, r3
 8010922:	4663      	mov	r3, ip
 8010924:	e000      	b.n	8010928 <__aeabi_cdcmpeq>
 8010926:	bf00      	nop

08010928 <__aeabi_cdcmpeq>:
 8010928:	b501      	push	{r0, lr}
 801092a:	f7ff ffb7 	bl	801089c <__cmpdf2>
 801092e:	2800      	cmp	r0, #0
 8010930:	bf48      	it	mi
 8010932:	f110 0f00 	cmnmi.w	r0, #0
 8010936:	bd01      	pop	{r0, pc}

08010938 <__aeabi_dcmpeq>:
 8010938:	f84d ed08 	str.w	lr, [sp, #-8]!
 801093c:	f7ff fff4 	bl	8010928 <__aeabi_cdcmpeq>
 8010940:	bf0c      	ite	eq
 8010942:	2001      	moveq	r0, #1
 8010944:	2000      	movne	r0, #0
 8010946:	f85d fb08 	ldr.w	pc, [sp], #8
 801094a:	bf00      	nop

0801094c <__aeabi_dcmplt>:
 801094c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8010950:	f7ff ffea 	bl	8010928 <__aeabi_cdcmpeq>
 8010954:	bf34      	ite	cc
 8010956:	2001      	movcc	r0, #1
 8010958:	2000      	movcs	r0, #0
 801095a:	f85d fb08 	ldr.w	pc, [sp], #8
 801095e:	bf00      	nop

08010960 <__aeabi_dcmple>:
 8010960:	f84d ed08 	str.w	lr, [sp, #-8]!
 8010964:	f7ff ffe0 	bl	8010928 <__aeabi_cdcmpeq>
 8010968:	bf94      	ite	ls
 801096a:	2001      	movls	r0, #1
 801096c:	2000      	movhi	r0, #0
 801096e:	f85d fb08 	ldr.w	pc, [sp], #8
 8010972:	bf00      	nop

08010974 <__aeabi_dcmpge>:
 8010974:	f84d ed08 	str.w	lr, [sp, #-8]!
 8010978:	f7ff ffce 	bl	8010918 <__aeabi_cdrcmple>
 801097c:	bf94      	ite	ls
 801097e:	2001      	movls	r0, #1
 8010980:	2000      	movhi	r0, #0
 8010982:	f85d fb08 	ldr.w	pc, [sp], #8
 8010986:	bf00      	nop

08010988 <__aeabi_dcmpgt>:
 8010988:	f84d ed08 	str.w	lr, [sp, #-8]!
 801098c:	f7ff ffc4 	bl	8010918 <__aeabi_cdrcmple>
 8010990:	bf34      	ite	cc
 8010992:	2001      	movcc	r0, #1
 8010994:	2000      	movcs	r0, #0
 8010996:	f85d fb08 	ldr.w	pc, [sp], #8
 801099a:	bf00      	nop

0801099c <__aeabi_dcmpun>:
 801099c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80109a0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80109a4:	d102      	bne.n	80109ac <__aeabi_dcmpun+0x10>
 80109a6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80109aa:	d10a      	bne.n	80109c2 <__aeabi_dcmpun+0x26>
 80109ac:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80109b0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80109b4:	d102      	bne.n	80109bc <__aeabi_dcmpun+0x20>
 80109b6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80109ba:	d102      	bne.n	80109c2 <__aeabi_dcmpun+0x26>
 80109bc:	f04f 0000 	mov.w	r0, #0
 80109c0:	4770      	bx	lr
 80109c2:	f04f 0001 	mov.w	r0, #1
 80109c6:	4770      	bx	lr

080109c8 <__aeabi_d2iz>:
 80109c8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80109cc:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 80109d0:	d215      	bcs.n	80109fe <__aeabi_d2iz+0x36>
 80109d2:	d511      	bpl.n	80109f8 <__aeabi_d2iz+0x30>
 80109d4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 80109d8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 80109dc:	d912      	bls.n	8010a04 <__aeabi_d2iz+0x3c>
 80109de:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80109e2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 80109e6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 80109ea:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80109ee:	fa23 f002 	lsr.w	r0, r3, r2
 80109f2:	bf18      	it	ne
 80109f4:	4240      	negne	r0, r0
 80109f6:	4770      	bx	lr
 80109f8:	f04f 0000 	mov.w	r0, #0
 80109fc:	4770      	bx	lr
 80109fe:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8010a02:	d105      	bne.n	8010a10 <__aeabi_d2iz+0x48>
 8010a04:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8010a08:	bf08      	it	eq
 8010a0a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8010a0e:	4770      	bx	lr
 8010a10:	f04f 0000 	mov.w	r0, #0
 8010a14:	4770      	bx	lr
 8010a16:	bf00      	nop

08010a18 <__aeabi_uldivmod>:
 8010a18:	b953      	cbnz	r3, 8010a30 <__aeabi_uldivmod+0x18>
 8010a1a:	b94a      	cbnz	r2, 8010a30 <__aeabi_uldivmod+0x18>
 8010a1c:	2900      	cmp	r1, #0
 8010a1e:	bf08      	it	eq
 8010a20:	2800      	cmpeq	r0, #0
 8010a22:	bf1c      	itt	ne
 8010a24:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
 8010a28:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
 8010a2c:	f000 b9bc 	b.w	8010da8 <__aeabi_idiv0>
 8010a30:	f1ad 0c08 	sub.w	ip, sp, #8
 8010a34:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8010a38:	f000 f83a 	bl	8010ab0 <__udivmoddi4>
 8010a3c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8010a40:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8010a44:	b004      	add	sp, #16
 8010a46:	4770      	bx	lr

08010a48 <__aeabi_f2lz>:
 8010a48:	ee07 0a90 	vmov	s15, r0
 8010a4c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8010a50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010a54:	d401      	bmi.n	8010a5a <__aeabi_f2lz+0x12>
 8010a56:	f000 b80b 	b.w	8010a70 <__aeabi_f2ulz>
 8010a5a:	eef1 7a67 	vneg.f32	s15, s15
 8010a5e:	b508      	push	{r3, lr}
 8010a60:	ee17 0a90 	vmov	r0, s15
 8010a64:	f000 f804 	bl	8010a70 <__aeabi_f2ulz>
 8010a68:	4240      	negs	r0, r0
 8010a6a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8010a6e:	bd08      	pop	{r3, pc}

08010a70 <__aeabi_f2ulz>:
 8010a70:	b5d0      	push	{r4, r6, r7, lr}
 8010a72:	f7ff fca1 	bl	80103b8 <__aeabi_f2d>
 8010a76:	4b0c      	ldr	r3, [pc, #48]	@ (8010aa8 <__aeabi_f2ulz+0x38>)
 8010a78:	2200      	movs	r2, #0
 8010a7a:	4606      	mov	r6, r0
 8010a7c:	460f      	mov	r7, r1
 8010a7e:	f7ff fcf3 	bl	8010468 <__aeabi_dmul>
 8010a82:	f000 f993 	bl	8010dac <__aeabi_d2uiz>
 8010a86:	4604      	mov	r4, r0
 8010a88:	f7ff fc74 	bl	8010374 <__aeabi_ui2d>
 8010a8c:	4b07      	ldr	r3, [pc, #28]	@ (8010aac <__aeabi_f2ulz+0x3c>)
 8010a8e:	2200      	movs	r2, #0
 8010a90:	f7ff fcea 	bl	8010468 <__aeabi_dmul>
 8010a94:	4602      	mov	r2, r0
 8010a96:	460b      	mov	r3, r1
 8010a98:	4630      	mov	r0, r6
 8010a9a:	4639      	mov	r1, r7
 8010a9c:	f7ff fb2c 	bl	80100f8 <__aeabi_dsub>
 8010aa0:	f000 f984 	bl	8010dac <__aeabi_d2uiz>
 8010aa4:	4621      	mov	r1, r4
 8010aa6:	bdd0      	pop	{r4, r6, r7, pc}
 8010aa8:	3df00000 	.word	0x3df00000
 8010aac:	41f00000 	.word	0x41f00000

08010ab0 <__udivmoddi4>:
 8010ab0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010ab4:	9d08      	ldr	r5, [sp, #32]
 8010ab6:	468e      	mov	lr, r1
 8010ab8:	4604      	mov	r4, r0
 8010aba:	4688      	mov	r8, r1
 8010abc:	2b00      	cmp	r3, #0
 8010abe:	d14a      	bne.n	8010b56 <__udivmoddi4+0xa6>
 8010ac0:	428a      	cmp	r2, r1
 8010ac2:	4617      	mov	r7, r2
 8010ac4:	d962      	bls.n	8010b8c <__udivmoddi4+0xdc>
 8010ac6:	fab2 f682 	clz	r6, r2
 8010aca:	b14e      	cbz	r6, 8010ae0 <__udivmoddi4+0x30>
 8010acc:	f1c6 0320 	rsb	r3, r6, #32
 8010ad0:	fa01 f806 	lsl.w	r8, r1, r6
 8010ad4:	fa20 f303 	lsr.w	r3, r0, r3
 8010ad8:	40b7      	lsls	r7, r6
 8010ada:	ea43 0808 	orr.w	r8, r3, r8
 8010ade:	40b4      	lsls	r4, r6
 8010ae0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8010ae4:	fa1f fc87 	uxth.w	ip, r7
 8010ae8:	fbb8 f1fe 	udiv	r1, r8, lr
 8010aec:	0c23      	lsrs	r3, r4, #16
 8010aee:	fb0e 8811 	mls	r8, lr, r1, r8
 8010af2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8010af6:	fb01 f20c 	mul.w	r2, r1, ip
 8010afa:	429a      	cmp	r2, r3
 8010afc:	d909      	bls.n	8010b12 <__udivmoddi4+0x62>
 8010afe:	18fb      	adds	r3, r7, r3
 8010b00:	f101 30ff 	add.w	r0, r1, #4294967295	@ 0xffffffff
 8010b04:	f080 80ea 	bcs.w	8010cdc <__udivmoddi4+0x22c>
 8010b08:	429a      	cmp	r2, r3
 8010b0a:	f240 80e7 	bls.w	8010cdc <__udivmoddi4+0x22c>
 8010b0e:	3902      	subs	r1, #2
 8010b10:	443b      	add	r3, r7
 8010b12:	1a9a      	subs	r2, r3, r2
 8010b14:	b2a3      	uxth	r3, r4
 8010b16:	fbb2 f0fe 	udiv	r0, r2, lr
 8010b1a:	fb0e 2210 	mls	r2, lr, r0, r2
 8010b1e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8010b22:	fb00 fc0c 	mul.w	ip, r0, ip
 8010b26:	459c      	cmp	ip, r3
 8010b28:	d909      	bls.n	8010b3e <__udivmoddi4+0x8e>
 8010b2a:	18fb      	adds	r3, r7, r3
 8010b2c:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
 8010b30:	f080 80d6 	bcs.w	8010ce0 <__udivmoddi4+0x230>
 8010b34:	459c      	cmp	ip, r3
 8010b36:	f240 80d3 	bls.w	8010ce0 <__udivmoddi4+0x230>
 8010b3a:	443b      	add	r3, r7
 8010b3c:	3802      	subs	r0, #2
 8010b3e:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8010b42:	eba3 030c 	sub.w	r3, r3, ip
 8010b46:	2100      	movs	r1, #0
 8010b48:	b11d      	cbz	r5, 8010b52 <__udivmoddi4+0xa2>
 8010b4a:	40f3      	lsrs	r3, r6
 8010b4c:	2200      	movs	r2, #0
 8010b4e:	e9c5 3200 	strd	r3, r2, [r5]
 8010b52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010b56:	428b      	cmp	r3, r1
 8010b58:	d905      	bls.n	8010b66 <__udivmoddi4+0xb6>
 8010b5a:	b10d      	cbz	r5, 8010b60 <__udivmoddi4+0xb0>
 8010b5c:	e9c5 0100 	strd	r0, r1, [r5]
 8010b60:	2100      	movs	r1, #0
 8010b62:	4608      	mov	r0, r1
 8010b64:	e7f5      	b.n	8010b52 <__udivmoddi4+0xa2>
 8010b66:	fab3 f183 	clz	r1, r3
 8010b6a:	2900      	cmp	r1, #0
 8010b6c:	d146      	bne.n	8010bfc <__udivmoddi4+0x14c>
 8010b6e:	4573      	cmp	r3, lr
 8010b70:	d302      	bcc.n	8010b78 <__udivmoddi4+0xc8>
 8010b72:	4282      	cmp	r2, r0
 8010b74:	f200 8105 	bhi.w	8010d82 <__udivmoddi4+0x2d2>
 8010b78:	1a84      	subs	r4, r0, r2
 8010b7a:	eb6e 0203 	sbc.w	r2, lr, r3
 8010b7e:	2001      	movs	r0, #1
 8010b80:	4690      	mov	r8, r2
 8010b82:	2d00      	cmp	r5, #0
 8010b84:	d0e5      	beq.n	8010b52 <__udivmoddi4+0xa2>
 8010b86:	e9c5 4800 	strd	r4, r8, [r5]
 8010b8a:	e7e2      	b.n	8010b52 <__udivmoddi4+0xa2>
 8010b8c:	2a00      	cmp	r2, #0
 8010b8e:	f000 8090 	beq.w	8010cb2 <__udivmoddi4+0x202>
 8010b92:	fab2 f682 	clz	r6, r2
 8010b96:	2e00      	cmp	r6, #0
 8010b98:	f040 80a4 	bne.w	8010ce4 <__udivmoddi4+0x234>
 8010b9c:	1a8a      	subs	r2, r1, r2
 8010b9e:	0c03      	lsrs	r3, r0, #16
 8010ba0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8010ba4:	b280      	uxth	r0, r0
 8010ba6:	b2bc      	uxth	r4, r7
 8010ba8:	2101      	movs	r1, #1
 8010baa:	fbb2 fcfe 	udiv	ip, r2, lr
 8010bae:	fb0e 221c 	mls	r2, lr, ip, r2
 8010bb2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8010bb6:	fb04 f20c 	mul.w	r2, r4, ip
 8010bba:	429a      	cmp	r2, r3
 8010bbc:	d907      	bls.n	8010bce <__udivmoddi4+0x11e>
 8010bbe:	18fb      	adds	r3, r7, r3
 8010bc0:	f10c 38ff 	add.w	r8, ip, #4294967295	@ 0xffffffff
 8010bc4:	d202      	bcs.n	8010bcc <__udivmoddi4+0x11c>
 8010bc6:	429a      	cmp	r2, r3
 8010bc8:	f200 80e0 	bhi.w	8010d8c <__udivmoddi4+0x2dc>
 8010bcc:	46c4      	mov	ip, r8
 8010bce:	1a9b      	subs	r3, r3, r2
 8010bd0:	fbb3 f2fe 	udiv	r2, r3, lr
 8010bd4:	fb0e 3312 	mls	r3, lr, r2, r3
 8010bd8:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8010bdc:	fb02 f404 	mul.w	r4, r2, r4
 8010be0:	429c      	cmp	r4, r3
 8010be2:	d907      	bls.n	8010bf4 <__udivmoddi4+0x144>
 8010be4:	18fb      	adds	r3, r7, r3
 8010be6:	f102 30ff 	add.w	r0, r2, #4294967295	@ 0xffffffff
 8010bea:	d202      	bcs.n	8010bf2 <__udivmoddi4+0x142>
 8010bec:	429c      	cmp	r4, r3
 8010bee:	f200 80ca 	bhi.w	8010d86 <__udivmoddi4+0x2d6>
 8010bf2:	4602      	mov	r2, r0
 8010bf4:	1b1b      	subs	r3, r3, r4
 8010bf6:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8010bfa:	e7a5      	b.n	8010b48 <__udivmoddi4+0x98>
 8010bfc:	f1c1 0620 	rsb	r6, r1, #32
 8010c00:	408b      	lsls	r3, r1
 8010c02:	fa22 f706 	lsr.w	r7, r2, r6
 8010c06:	431f      	orrs	r7, r3
 8010c08:	fa0e f401 	lsl.w	r4, lr, r1
 8010c0c:	fa20 f306 	lsr.w	r3, r0, r6
 8010c10:	fa2e fe06 	lsr.w	lr, lr, r6
 8010c14:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8010c18:	4323      	orrs	r3, r4
 8010c1a:	fa00 f801 	lsl.w	r8, r0, r1
 8010c1e:	fa1f fc87 	uxth.w	ip, r7
 8010c22:	fbbe f0f9 	udiv	r0, lr, r9
 8010c26:	0c1c      	lsrs	r4, r3, #16
 8010c28:	fb09 ee10 	mls	lr, r9, r0, lr
 8010c2c:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8010c30:	fb00 fe0c 	mul.w	lr, r0, ip
 8010c34:	45a6      	cmp	lr, r4
 8010c36:	fa02 f201 	lsl.w	r2, r2, r1
 8010c3a:	d909      	bls.n	8010c50 <__udivmoddi4+0x1a0>
 8010c3c:	193c      	adds	r4, r7, r4
 8010c3e:	f100 3aff 	add.w	sl, r0, #4294967295	@ 0xffffffff
 8010c42:	f080 809c 	bcs.w	8010d7e <__udivmoddi4+0x2ce>
 8010c46:	45a6      	cmp	lr, r4
 8010c48:	f240 8099 	bls.w	8010d7e <__udivmoddi4+0x2ce>
 8010c4c:	3802      	subs	r0, #2
 8010c4e:	443c      	add	r4, r7
 8010c50:	eba4 040e 	sub.w	r4, r4, lr
 8010c54:	fa1f fe83 	uxth.w	lr, r3
 8010c58:	fbb4 f3f9 	udiv	r3, r4, r9
 8010c5c:	fb09 4413 	mls	r4, r9, r3, r4
 8010c60:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8010c64:	fb03 fc0c 	mul.w	ip, r3, ip
 8010c68:	45a4      	cmp	ip, r4
 8010c6a:	d908      	bls.n	8010c7e <__udivmoddi4+0x1ce>
 8010c6c:	193c      	adds	r4, r7, r4
 8010c6e:	f103 3eff 	add.w	lr, r3, #4294967295	@ 0xffffffff
 8010c72:	f080 8082 	bcs.w	8010d7a <__udivmoddi4+0x2ca>
 8010c76:	45a4      	cmp	ip, r4
 8010c78:	d97f      	bls.n	8010d7a <__udivmoddi4+0x2ca>
 8010c7a:	3b02      	subs	r3, #2
 8010c7c:	443c      	add	r4, r7
 8010c7e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8010c82:	eba4 040c 	sub.w	r4, r4, ip
 8010c86:	fba0 ec02 	umull	lr, ip, r0, r2
 8010c8a:	4564      	cmp	r4, ip
 8010c8c:	4673      	mov	r3, lr
 8010c8e:	46e1      	mov	r9, ip
 8010c90:	d362      	bcc.n	8010d58 <__udivmoddi4+0x2a8>
 8010c92:	d05f      	beq.n	8010d54 <__udivmoddi4+0x2a4>
 8010c94:	b15d      	cbz	r5, 8010cae <__udivmoddi4+0x1fe>
 8010c96:	ebb8 0203 	subs.w	r2, r8, r3
 8010c9a:	eb64 0409 	sbc.w	r4, r4, r9
 8010c9e:	fa04 f606 	lsl.w	r6, r4, r6
 8010ca2:	fa22 f301 	lsr.w	r3, r2, r1
 8010ca6:	431e      	orrs	r6, r3
 8010ca8:	40cc      	lsrs	r4, r1
 8010caa:	e9c5 6400 	strd	r6, r4, [r5]
 8010cae:	2100      	movs	r1, #0
 8010cb0:	e74f      	b.n	8010b52 <__udivmoddi4+0xa2>
 8010cb2:	fbb1 fcf2 	udiv	ip, r1, r2
 8010cb6:	0c01      	lsrs	r1, r0, #16
 8010cb8:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8010cbc:	b280      	uxth	r0, r0
 8010cbe:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8010cc2:	463b      	mov	r3, r7
 8010cc4:	4638      	mov	r0, r7
 8010cc6:	463c      	mov	r4, r7
 8010cc8:	46b8      	mov	r8, r7
 8010cca:	46be      	mov	lr, r7
 8010ccc:	2620      	movs	r6, #32
 8010cce:	fbb1 f1f7 	udiv	r1, r1, r7
 8010cd2:	eba2 0208 	sub.w	r2, r2, r8
 8010cd6:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8010cda:	e766      	b.n	8010baa <__udivmoddi4+0xfa>
 8010cdc:	4601      	mov	r1, r0
 8010cde:	e718      	b.n	8010b12 <__udivmoddi4+0x62>
 8010ce0:	4610      	mov	r0, r2
 8010ce2:	e72c      	b.n	8010b3e <__udivmoddi4+0x8e>
 8010ce4:	f1c6 0220 	rsb	r2, r6, #32
 8010ce8:	fa2e f302 	lsr.w	r3, lr, r2
 8010cec:	40b7      	lsls	r7, r6
 8010cee:	40b1      	lsls	r1, r6
 8010cf0:	fa20 f202 	lsr.w	r2, r0, r2
 8010cf4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8010cf8:	430a      	orrs	r2, r1
 8010cfa:	fbb3 f8fe 	udiv	r8, r3, lr
 8010cfe:	b2bc      	uxth	r4, r7
 8010d00:	fb0e 3318 	mls	r3, lr, r8, r3
 8010d04:	0c11      	lsrs	r1, r2, #16
 8010d06:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8010d0a:	fb08 f904 	mul.w	r9, r8, r4
 8010d0e:	40b0      	lsls	r0, r6
 8010d10:	4589      	cmp	r9, r1
 8010d12:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8010d16:	b280      	uxth	r0, r0
 8010d18:	d93e      	bls.n	8010d98 <__udivmoddi4+0x2e8>
 8010d1a:	1879      	adds	r1, r7, r1
 8010d1c:	f108 3cff 	add.w	ip, r8, #4294967295	@ 0xffffffff
 8010d20:	d201      	bcs.n	8010d26 <__udivmoddi4+0x276>
 8010d22:	4589      	cmp	r9, r1
 8010d24:	d81f      	bhi.n	8010d66 <__udivmoddi4+0x2b6>
 8010d26:	eba1 0109 	sub.w	r1, r1, r9
 8010d2a:	fbb1 f9fe 	udiv	r9, r1, lr
 8010d2e:	fb09 f804 	mul.w	r8, r9, r4
 8010d32:	fb0e 1119 	mls	r1, lr, r9, r1
 8010d36:	b292      	uxth	r2, r2
 8010d38:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8010d3c:	4542      	cmp	r2, r8
 8010d3e:	d229      	bcs.n	8010d94 <__udivmoddi4+0x2e4>
 8010d40:	18ba      	adds	r2, r7, r2
 8010d42:	f109 31ff 	add.w	r1, r9, #4294967295	@ 0xffffffff
 8010d46:	d2c4      	bcs.n	8010cd2 <__udivmoddi4+0x222>
 8010d48:	4542      	cmp	r2, r8
 8010d4a:	d2c2      	bcs.n	8010cd2 <__udivmoddi4+0x222>
 8010d4c:	f1a9 0102 	sub.w	r1, r9, #2
 8010d50:	443a      	add	r2, r7
 8010d52:	e7be      	b.n	8010cd2 <__udivmoddi4+0x222>
 8010d54:	45f0      	cmp	r8, lr
 8010d56:	d29d      	bcs.n	8010c94 <__udivmoddi4+0x1e4>
 8010d58:	ebbe 0302 	subs.w	r3, lr, r2
 8010d5c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8010d60:	3801      	subs	r0, #1
 8010d62:	46e1      	mov	r9, ip
 8010d64:	e796      	b.n	8010c94 <__udivmoddi4+0x1e4>
 8010d66:	eba7 0909 	sub.w	r9, r7, r9
 8010d6a:	4449      	add	r1, r9
 8010d6c:	f1a8 0c02 	sub.w	ip, r8, #2
 8010d70:	fbb1 f9fe 	udiv	r9, r1, lr
 8010d74:	fb09 f804 	mul.w	r8, r9, r4
 8010d78:	e7db      	b.n	8010d32 <__udivmoddi4+0x282>
 8010d7a:	4673      	mov	r3, lr
 8010d7c:	e77f      	b.n	8010c7e <__udivmoddi4+0x1ce>
 8010d7e:	4650      	mov	r0, sl
 8010d80:	e766      	b.n	8010c50 <__udivmoddi4+0x1a0>
 8010d82:	4608      	mov	r0, r1
 8010d84:	e6fd      	b.n	8010b82 <__udivmoddi4+0xd2>
 8010d86:	443b      	add	r3, r7
 8010d88:	3a02      	subs	r2, #2
 8010d8a:	e733      	b.n	8010bf4 <__udivmoddi4+0x144>
 8010d8c:	f1ac 0c02 	sub.w	ip, ip, #2
 8010d90:	443b      	add	r3, r7
 8010d92:	e71c      	b.n	8010bce <__udivmoddi4+0x11e>
 8010d94:	4649      	mov	r1, r9
 8010d96:	e79c      	b.n	8010cd2 <__udivmoddi4+0x222>
 8010d98:	eba1 0109 	sub.w	r1, r1, r9
 8010d9c:	46c4      	mov	ip, r8
 8010d9e:	fbb1 f9fe 	udiv	r9, r1, lr
 8010da2:	fb09 f804 	mul.w	r8, r9, r4
 8010da6:	e7c4      	b.n	8010d32 <__udivmoddi4+0x282>

08010da8 <__aeabi_idiv0>:
 8010da8:	4770      	bx	lr
 8010daa:	bf00      	nop

08010dac <__aeabi_d2uiz>:
 8010dac:	004a      	lsls	r2, r1, #1
 8010dae:	d211      	bcs.n	8010dd4 <__aeabi_d2uiz+0x28>
 8010db0:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8010db4:	d211      	bcs.n	8010dda <__aeabi_d2uiz+0x2e>
 8010db6:	d50d      	bpl.n	8010dd4 <__aeabi_d2uiz+0x28>
 8010db8:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8010dbc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8010dc0:	d40e      	bmi.n	8010de0 <__aeabi_d2uiz+0x34>
 8010dc2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8010dc6:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8010dca:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8010dce:	fa23 f002 	lsr.w	r0, r3, r2
 8010dd2:	4770      	bx	lr
 8010dd4:	f04f 0000 	mov.w	r0, #0
 8010dd8:	4770      	bx	lr
 8010dda:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8010dde:	d102      	bne.n	8010de6 <__aeabi_d2uiz+0x3a>
 8010de0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8010de4:	4770      	bx	lr
 8010de6:	f04f 0000 	mov.w	r0, #0
 8010dea:	4770      	bx	lr

08010dec <DWT_Init>:
  return (char *)cifar10_labels[index];
}

void DWT_Init(void)
{
  CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 8010dec:	4a07      	ldr	r2, [pc, #28]	@ (8010e0c <DWT_Init+0x20>)
 8010dee:	f8d2 30fc 	ldr.w	r3, [r2, #252]	@ 0xfc
 8010df2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8010df6:	f8c2 30fc 	str.w	r3, [r2, #252]	@ 0xfc
  DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 8010dfa:	4b05      	ldr	r3, [pc, #20]	@ (8010e10 <DWT_Init+0x24>)
 8010dfc:	681a      	ldr	r2, [r3, #0]
 8010dfe:	f042 0201 	orr.w	r2, r2, #1
 8010e02:	601a      	str	r2, [r3, #0]
  DWT->CYCCNT = 0;
 8010e04:	2200      	movs	r2, #0
 8010e06:	605a      	str	r2, [r3, #4]
}
 8010e08:	4770      	bx	lr
 8010e0a:	bf00      	nop
 8010e0c:	e000ed00 	.word	0xe000ed00
 8010e10:	e0001000 	.word	0xe0001000

08010e14 <SystemClock_Config>:
/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void)
{
 8010e14:	b500      	push	{lr}
 8010e16:	b097      	sub	sp, #92	@ 0x5c
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8010e18:	2244      	movs	r2, #68	@ 0x44
 8010e1a:	2100      	movs	r1, #0
 8010e1c:	a805      	add	r0, sp, #20
 8010e1e:	f013 f8dd 	bl	8023fdc <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8010e22:	2214      	movs	r2, #20
 8010e24:	2100      	movs	r1, #0
 8010e26:	4668      	mov	r0, sp
 8010e28:	f013 f8d8 	bl	8023fdc <memset>

  /** Configure the main internal regulator output voltage
   */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 8010e2c:	f44f 7000 	mov.w	r0, #512	@ 0x200
 8010e30:	f000 fb38 	bl	80114a4 <HAL_PWREx_ControlVoltageScaling>
 8010e34:	b108      	cbz	r0, 8010e3a <SystemClock_Config+0x26>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8010e36:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8010e38:	e7fe      	b.n	8010e38 <SystemClock_Config+0x24>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 8010e3a:	2310      	movs	r3, #16
 8010e3c:	9305      	str	r3, [sp, #20]
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 8010e3e:	2360      	movs	r3, #96	@ 0x60
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 8010e40:	2201      	movs	r2, #1
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 8010e42:	930d      	str	r3, [sp, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8010e44:	2302      	movs	r3, #2
  RCC_OscInitStruct.MSICalibrationValue = 0;
 8010e46:	e9cd 200b 	strd	r2, r0, [sp, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 8010e4a:	e9cd 320f 	strd	r3, r2, [sp, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 8010e4e:	2028      	movs	r0, #40	@ 0x28
  RCC_OscInitStruct.PLL.PLLM = 1;
 8010e50:	9211      	str	r2, [sp, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 8010e52:	2207      	movs	r2, #7
 8010e54:	e9cd 0212 	strd	r0, r2, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8010e58:	a805      	add	r0, sp, #20
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8010e5a:	e9cd 3314 	strd	r3, r3, [sp, #80]	@ 0x50
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8010e5e:	f000 fbe3 	bl	8011628 <HAL_RCC_OscConfig>
 8010e62:	b108      	cbz	r0, 8010e68 <SystemClock_Config+0x54>
 8010e64:	b672      	cpsid	i
  while (1)
 8010e66:	e7fe      	b.n	8010e66 <SystemClock_Config+0x52>
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8010e68:	e9cd 0002 	strd	r0, r0, [sp, #8]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8010e6c:	220f      	movs	r2, #15
 8010e6e:	2303      	movs	r3, #3
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8010e70:	9004      	str	r0, [sp, #16]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 8010e72:	2104      	movs	r1, #4
 8010e74:	4668      	mov	r0, sp
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8010e76:	e9cd 2300 	strd	r2, r3, [sp]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 8010e7a:	f000 fe53 	bl	8011b24 <HAL_RCC_ClockConfig>
 8010e7e:	b108      	cbz	r0, 8010e84 <SystemClock_Config+0x70>
 8010e80:	b672      	cpsid	i
  while (1)
 8010e82:	e7fe      	b.n	8010e82 <SystemClock_Config+0x6e>
}
 8010e84:	b017      	add	sp, #92	@ 0x5c
 8010e86:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08010e8c <main>:
{
 8010e8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010e8e:	f5ad 4d26 	sub.w	sp, sp, #42496	@ 0xa600
 8010e92:	b0a9      	sub	sp, #164	@ 0xa4
  ai_handle cifar_model = AI_HANDLE_NULL;
 8010e94:	2400      	movs	r4, #0
  ai_buffer *ai_input = ai_cifar_model_inputs_get(cifar_model, NULL);
 8010e96:	4621      	mov	r1, r4
 8010e98:	4620      	mov	r0, r4
  ai_handle cifar_model = AI_HANDLE_NULL;
 8010e9a:	9403      	str	r4, [sp, #12]
  ai_buffer *ai_input = ai_cifar_model_inputs_get(cifar_model, NULL);
 8010e9c:	f001 fe58 	bl	8012b50 <ai_cifar_model_inputs_get>
  ai_buffer *ai_output = ai_cifar_model_outputs_get(cifar_model, NULL);
 8010ea0:	4621      	mov	r1, r4
  ai_buffer *ai_input = ai_cifar_model_inputs_get(cifar_model, NULL);
 8010ea2:	4607      	mov	r7, r0
  ai_buffer *ai_output = ai_cifar_model_outputs_get(cifar_model, NULL);
 8010ea4:	9803      	ldr	r0, [sp, #12]
 8010ea6:	f001 fe5d 	bl	8012b64 <ai_cifar_model_outputs_get>
 8010eaa:	4606      	mov	r6, r0
      AI_CIFAR_MODEL_DATA_WEIGHTS(ai_cifar_model_data_weights_get()),
 8010eac:	f002 f8d8 	bl	8013060 <ai_cifar_model_data_weights_get>
 8010eb0:	4601      	mov	r1, r0
 8010eb2:	a809      	add	r0, sp, #36	@ 0x24
 8010eb4:	f002 f8c0 	bl	8013038 <ai_cifar_model_data_weights_buffer_get>
      AI_CIFAR_MODEL_DATA_ACTIVATIONS(activations)};
 8010eb8:	f50d 51c3 	add.w	r1, sp, #6240	@ 0x1860
 8010ebc:	a810      	add	r0, sp, #64	@ 0x40
 8010ebe:	f002 f8a7 	bl	8013010 <ai_cifar_model_data_activations_buffer_get>
  ai_input[0].data = AI_HANDLE_PTR(in_data);
 8010ec2:	f60d 435c 	addw	r3, sp, #3164	@ 0xc5c
  ai_handle cifar_model = AI_HANDLE_NULL;
 8010ec6:	ad03      	add	r5, sp, #12
  ai_input[0].data = AI_HANDLE_PTR(in_data);
 8010ec8:	607b      	str	r3, [r7, #4]
  ai_output[0].data = AI_HANDLE_PTR(out_data);
 8010eca:	ab06      	add	r3, sp, #24
  ai_err = ai_cifar_model_create(&cifar_model, AI_CIFAR_MODEL_DATA_CONFIG);
 8010ecc:	4621      	mov	r1, r4
  ai_output[0].data = AI_HANDLE_PTR(out_data);
 8010ece:	6073      	str	r3, [r6, #4]
  ai_err = ai_cifar_model_create(&cifar_model, AI_CIFAR_MODEL_DATA_CONFIG);
 8010ed0:	4628      	mov	r0, r5
 8010ed2:	f001 fe2f 	bl	8012b34 <ai_cifar_model_create>
  if (ai_err.type != AI_ERROR_NONE)
 8010ed6:	f010 04ff 	ands.w	r4, r0, #255	@ 0xff
 8010eda:	d147      	bne.n	8010f6c <main+0xe0>
  !ai_cifar_model_init(cifar_model, &params);
 8010edc:	a909      	add	r1, sp, #36	@ 0x24
 8010ede:	6828      	ldr	r0, [r5, #0]
 8010ee0:	f001 fe4a 	bl	8012b78 <ai_cifar_model_init>
  HAL_Init();
 8010ee4:	f000 f95c 	bl	80111a0 <HAL_Init>
  SystemClock_Config();
 8010ee8:	f7ff ff94 	bl	8010e14 <SystemClock_Config>
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8010eec:	4b22      	ldr	r3, [pc, #136]	@ (8010f78 <main+0xec>)
  huart2.Instance = USART2;
 8010eee:	4823      	ldr	r0, [pc, #140]	@ (8010f7c <main+0xf0>)
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8010ef0:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8010ef2:	f042 0201 	orr.w	r2, r2, #1
 8010ef6:	64da      	str	r2, [r3, #76]	@ 0x4c
 8010ef8:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8010efa:	a904      	add	r1, sp, #16
 8010efc:	f002 0201 	and.w	r2, r2, #1
 8010f00:	600a      	str	r2, [r1, #0]
 8010f02:	680a      	ldr	r2, [r1, #0]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8010f04:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8010f06:	f042 0202 	orr.w	r2, r2, #2
 8010f0a:	64da      	str	r2, [r3, #76]	@ 0x4c
 8010f0c:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
  huart2.Init.Parity = UART_PARITY_NONE;
 8010f0e:	6104      	str	r4, [r0, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8010f10:	ab05      	add	r3, sp, #20
 8010f12:	f002 0202 	and.w	r2, r2, #2
 8010f16:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8010f18:	4a19      	ldr	r2, [pc, #100]	@ (8010f80 <main+0xf4>)
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8010f1a:	681b      	ldr	r3, [r3, #0]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8010f1c:	6244      	str	r4, [r0, #36]	@ 0x24
  huart2.Init.BaudRate = 115200;
 8010f1e:	f44f 33e1 	mov.w	r3, #115200	@ 0x1c200
 8010f22:	e9c0 2300 	strd	r2, r3, [r0]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8010f26:	230c      	movs	r3, #12
  huart2.Init.StopBits = UART_STOPBITS_1;
 8010f28:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8010f2c:	e9c0 3405 	strd	r3, r4, [r0, #20]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8010f30:	e9c0 4407 	strd	r4, r4, [r0, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8010f34:	f001 fca5 	bl	8012882 <HAL_UART_Init>
 8010f38:	b108      	cbz	r0, 8010f3e <main+0xb2>
 8010f3a:	b672      	cpsid	i
  while (1)
 8010f3c:	e7fe      	b.n	8010f3c <main+0xb0>
  MX_X_CUBE_AI_Init();
 8010f3e:	f001 fdf1 	bl	8012b24 <MX_X_CUBE_AI_Init>
    printf("Waiting for input data...\n");
 8010f42:	4810      	ldr	r0, [pc, #64]	@ (8010f84 <main+0xf8>)
    HAL_UART_Receive(&huart1, uart_buffer, 3072, HAL_MAX_DELAY);
 8010f44:	4d10      	ldr	r5, [pc, #64]	@ (8010f88 <main+0xfc>)
    printf("Received input data\n");
 8010f46:	4c11      	ldr	r4, [pc, #68]	@ (8010f8c <main+0x100>)
  DWT_Init();
 8010f48:	f7ff ff50 	bl	8010dec <DWT_Init>
    printf("Waiting for input data...\n");
 8010f4c:	f013 f83e 	bl	8023fcc <puts>
    HAL_UART_Receive(&huart1, uart_buffer, 3072, HAL_MAX_DELAY);
 8010f50:	ab17      	add	r3, sp, #92	@ 0x5c
 8010f52:	9301      	str	r3, [sp, #4]
 8010f54:	9901      	ldr	r1, [sp, #4]
 8010f56:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8010f5a:	f44f 6240 	mov.w	r2, #3072	@ 0xc00
 8010f5e:	4628      	mov	r0, r5
 8010f60:	f001 fbcb 	bl	80126fa <HAL_UART_Receive>
    printf("Received input data\n");
 8010f64:	4620      	mov	r0, r4
 8010f66:	f013 f831 	bl	8023fcc <puts>
  while (1)
 8010f6a:	e7f3      	b.n	8010f54 <main+0xc8>
}
 8010f6c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8010f70:	f50d 4d26 	add.w	sp, sp, #42496	@ 0xa600
 8010f74:	b029      	add	sp, #164	@ 0xa4
 8010f76:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010f78:	40021000 	.word	0x40021000
 8010f7c:	20001f9c 	.word	0x20001f9c
 8010f80:	40004400 	.word	0x40004400
 8010f84:	08026264 	.word	0x08026264
 8010f88:	20002024 	.word	0x20002024
 8010f8c:	0802627e 	.word	0x0802627e

08010f90 <MX_USART1_UART_Init>:
  huart1.Instance = USART1;
 8010f90:	480b      	ldr	r0, [pc, #44]	@ (8010fc0 <MX_USART1_UART_Init+0x30>)
  huart1.Init.BaudRate = BAUD_RATE;
 8010f92:	4a0c      	ldr	r2, [pc, #48]	@ (8010fc4 <MX_USART1_UART_Init+0x34>)
{
 8010f94:	b508      	push	{r3, lr}
  huart1.Init.BaudRate = BAUD_RATE;
 8010f96:	f44f 33e1 	mov.w	r3, #115200	@ 0x1c200
 8010f9a:	e9c0 2300 	strd	r2, r3, [r0]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8010f9e:	2300      	movs	r3, #0
  huart1.Init.Mode = UART_MODE_TX_RX;
 8010fa0:	220c      	movs	r2, #12
  huart1.Init.StopBits = UART_STOPBITS_1;
 8010fa2:	e9c0 3302 	strd	r3, r3, [r0, #8]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8010fa6:	e9c0 2305 	strd	r2, r3, [r0, #20]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8010faa:	e9c0 3307 	strd	r3, r3, [r0, #28]
  huart1.Init.Parity = UART_PARITY_NONE;
 8010fae:	6103      	str	r3, [r0, #16]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8010fb0:	6243      	str	r3, [r0, #36]	@ 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8010fb2:	f001 fc66 	bl	8012882 <HAL_UART_Init>
 8010fb6:	b108      	cbz	r0, 8010fbc <MX_USART1_UART_Init+0x2c>
 8010fb8:	b672      	cpsid	i
  while (1)
 8010fba:	e7fe      	b.n	8010fba <MX_USART1_UART_Init+0x2a>
}
 8010fbc:	bd08      	pop	{r3, pc}
 8010fbe:	bf00      	nop
 8010fc0:	20002024 	.word	0x20002024
 8010fc4:	40013800 	.word	0x40013800

08010fc8 <Error_Handler>:
 8010fc8:	b672      	cpsid	i
  while (1)
 8010fca:	e7fe      	b.n	8010fca <Error_Handler+0x2>

08010fcc <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8010fcc:	4b0a      	ldr	r3, [pc, #40]	@ (8010ff8 <HAL_MspInit+0x2c>)
 8010fce:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 8010fd0:	f042 0201 	orr.w	r2, r2, #1
{
 8010fd4:	b082      	sub	sp, #8
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8010fd6:	661a      	str	r2, [r3, #96]	@ 0x60
 8010fd8:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 8010fda:	f002 0201 	and.w	r2, r2, #1
 8010fde:	9200      	str	r2, [sp, #0]
 8010fe0:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8010fe2:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
 8010fe4:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8010fe8:	659a      	str	r2, [r3, #88]	@ 0x58
 8010fea:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8010fec:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8010ff0:	9301      	str	r3, [sp, #4]
 8010ff2:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8010ff4:	b002      	add	sp, #8
 8010ff6:	4770      	bx	lr
 8010ff8:	40021000 	.word	0x40021000

08010ffc <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8010ffc:	b570      	push	{r4, r5, r6, lr}
 8010ffe:	b0aa      	sub	sp, #168	@ 0xa8
 8011000:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8011002:	2214      	movs	r2, #20
 8011004:	2100      	movs	r1, #0
 8011006:	a803      	add	r0, sp, #12
 8011008:	f012 ffe8 	bl	8023fdc <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 801100c:	2288      	movs	r2, #136	@ 0x88
 801100e:	2100      	movs	r1, #0
 8011010:	a808      	add	r0, sp, #32
 8011012:	f012 ffe3 	bl	8023fdc <memset>
  if(huart->Instance==USART1)
 8011016:	6822      	ldr	r2, [r4, #0]
 8011018:	4b1c      	ldr	r3, [pc, #112]	@ (801108c <HAL_UART_MspInit+0x90>)
 801101a:	429a      	cmp	r2, r3
 801101c:	d133      	bne.n	8011086 <HAL_UART_MspInit+0x8a>

    /* USER CODE END USART1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 801101e:	2301      	movs	r3, #1
    PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8011020:	a808      	add	r0, sp, #32
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 8011022:	9308      	str	r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8011024:	f000 ff52 	bl	8011ecc <HAL_RCCEx_PeriphCLKConfig>
 8011028:	b108      	cbz	r0, 801102e <HAL_UART_MspInit+0x32>
    {
      Error_Handler();
 801102a:	f7ff ffcd 	bl	8010fc8 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 801102e:	4b18      	ldr	r3, [pc, #96]	@ (8011090 <HAL_UART_MspInit+0x94>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8011030:	4818      	ldr	r0, [pc, #96]	@ (8011094 <HAL_UART_MspInit+0x98>)
    __HAL_RCC_USART1_CLK_ENABLE();
 8011032:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 8011034:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8011038:	661a      	str	r2, [r3, #96]	@ 0x60
 801103a:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 801103c:	f402 4280 	and.w	r2, r2, #16384	@ 0x4000
 8011040:	9201      	str	r2, [sp, #4]
 8011042:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8011044:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8011046:	f042 0202 	orr.w	r2, r2, #2
 801104a:	64da      	str	r2, [r3, #76]	@ 0x4c
 801104c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801104e:	f003 0302 	and.w	r3, r3, #2
 8011052:	9302      	str	r3, [sp, #8]
 8011054:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8011056:	2602      	movs	r6, #2
 8011058:	2340      	movs	r3, #64	@ 0x40
 801105a:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 801105e:	2503      	movs	r5, #3
 8011060:	2300      	movs	r3, #0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8011062:	2407      	movs	r4, #7
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8011064:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8011066:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 801106a:	9407      	str	r4, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 801106c:	f000 f938 	bl	80112e0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8011070:	2380      	movs	r3, #128	@ 0x80
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8011072:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8011076:	4807      	ldr	r0, [pc, #28]	@ (8011094 <HAL_UART_MspInit+0x98>)
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8011078:	9407      	str	r4, [sp, #28]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 801107a:	2301      	movs	r3, #1
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 801107c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 801107e:	e9cd 3505 	strd	r3, r5, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8011082:	f000 f92d 	bl	80112e0 <HAL_GPIO_Init>

    /* USER CODE END USART1_MspInit 1 */

  }

}
 8011086:	b02a      	add	sp, #168	@ 0xa8
 8011088:	bd70      	pop	{r4, r5, r6, pc}
 801108a:	bf00      	nop
 801108c:	40013800 	.word	0x40013800
 8011090:	40021000 	.word	0x40021000
 8011094:	48000400 	.word	0x48000400

08011098 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8011098:	e7fe      	b.n	8011098 <NMI_Handler>

0801109a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 801109a:	e7fe      	b.n	801109a <HardFault_Handler>

0801109c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 801109c:	e7fe      	b.n	801109c <MemManage_Handler>

0801109e <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 801109e:	e7fe      	b.n	801109e <BusFault_Handler>

080110a0 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80110a0:	e7fe      	b.n	80110a0 <UsageFault_Handler>

080110a2 <SVC_Handler>:

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80110a2:	4770      	bx	lr

080110a4 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 80110a4:	4770      	bx	lr

080110a6 <PendSV_Handler>:
}

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
 80110a6:	4770      	bx	lr

080110a8 <SysTick_Handler>:
void SysTick_Handler(void)
{
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80110a8:	f000 b88a 	b.w	80111c0 <HAL_IncTick>

080110ac <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80110ac:	4a0b      	ldr	r2, [pc, #44]	@ (80110dc <_sbrk+0x30>)
 80110ae:	6811      	ldr	r1, [r2, #0]
{
 80110b0:	b510      	push	{r4, lr}
 80110b2:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 80110b4:	b909      	cbnz	r1, 80110ba <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 80110b6:	490a      	ldr	r1, [pc, #40]	@ (80110e0 <_sbrk+0x34>)
 80110b8:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80110ba:	6810      	ldr	r0, [r2, #0]
 80110bc:	4909      	ldr	r1, [pc, #36]	@ (80110e4 <_sbrk+0x38>)
 80110be:	4c0a      	ldr	r4, [pc, #40]	@ (80110e8 <_sbrk+0x3c>)
 80110c0:	4403      	add	r3, r0
 80110c2:	1b09      	subs	r1, r1, r4
 80110c4:	428b      	cmp	r3, r1
 80110c6:	d906      	bls.n	80110d6 <_sbrk+0x2a>
  {
    errno = ENOMEM;
 80110c8:	f012 ffa0 	bl	802400c <__errno>
 80110cc:	230c      	movs	r3, #12
 80110ce:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 80110d0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 80110d4:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 80110d6:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 80110d8:	e7fc      	b.n	80110d4 <_sbrk+0x28>
 80110da:	bf00      	nop
 80110dc:	200020ac 	.word	0x200020ac
 80110e0:	20002388 	.word	0x20002388
 80110e4:	20018000 	.word	0x20018000
 80110e8:	00004000 	.word	0x00004000

080110ec <SystemInit>:
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
#endif

  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 80110ec:	4a03      	ldr	r2, [pc, #12]	@ (80110fc <SystemInit+0x10>)
 80110ee:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
 80110f2:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80110f6:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
#endif
}
 80110fa:	4770      	bx	lr
 80110fc:	e000ed00 	.word	0xe000ed00

08011100 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* Set stack pointer */
 8011100:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8011138 <LoopForever+0x2>

/* Call the clock system initialization function.*/
    bl  SystemInit
 8011104:	f7ff fff2 	bl	80110ec <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8011108:	480c      	ldr	r0, [pc, #48]	@ (801113c <LoopForever+0x6>)
  ldr r1, =_edata
 801110a:	490d      	ldr	r1, [pc, #52]	@ (8011140 <LoopForever+0xa>)
  ldr r2, =_sidata
 801110c:	4a0d      	ldr	r2, [pc, #52]	@ (8011144 <LoopForever+0xe>)
  movs r3, #0
 801110e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8011110:	e002      	b.n	8011118 <LoopCopyDataInit>

08011112 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8011112:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8011114:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8011116:	3304      	adds	r3, #4

08011118 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8011118:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 801111a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 801111c:	d3f9      	bcc.n	8011112 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 801111e:	4a0a      	ldr	r2, [pc, #40]	@ (8011148 <LoopForever+0x12>)
  ldr r4, =_ebss
 8011120:	4c0a      	ldr	r4, [pc, #40]	@ (801114c <LoopForever+0x16>)
  movs r3, #0
 8011122:	2300      	movs	r3, #0
  b LoopFillZerobss
 8011124:	e001      	b.n	801112a <LoopFillZerobss>

08011126 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8011126:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8011128:	3204      	adds	r2, #4

0801112a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 801112a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 801112c:	d3fb      	bcc.n	8011126 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 801112e:	f012 ff73 	bl	8024018 <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 8011132:	f7ff feab 	bl	8010e8c <main>

08011136 <LoopForever>:

LoopForever:
    b LoopForever
 8011136:	e7fe      	b.n	8011136 <LoopForever>
  ldr   sp, =_estack    /* Set stack pointer */
 8011138:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 801113c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8011140:	20001f80 	.word	0x20001f80
  ldr r2, =_sidata
 8011144:	08076c1c 	.word	0x08076c1c
  ldr r2, =_sbss
 8011148:	20001f80 	.word	0x20001f80
  ldr r4, =_ebss
 801114c:	20002384 	.word	0x20002384

08011150 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 8011150:	e7fe      	b.n	8011150 <ADC1_2_IRQHandler>
	...

08011154 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority  Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8011154:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef  status = HAL_OK;

  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that doesn't take the value zero)*/
  if ((uint32_t)uwTickFreq != 0U)
 8011156:	4b0f      	ldr	r3, [pc, #60]	@ (8011194 <HAL_InitTick+0x40>)
 8011158:	781a      	ldrb	r2, [r3, #0]
{
 801115a:	4605      	mov	r5, r0
  if ((uint32_t)uwTickFreq != 0U)
 801115c:	b90a      	cbnz	r2, 8011162 <HAL_InitTick+0xe>
        status = HAL_ERROR;
      }
    }
    else
    {
      status = HAL_ERROR;
 801115e:	2001      	movs	r0, #1
    status = HAL_ERROR;
  }

  /* Return function status */
  return status;
}
 8011160:	bd38      	pop	{r3, r4, r5, pc}
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / (uint32_t)uwTickFreq)) == 0U)
 8011162:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8011166:	fbb3 f3f2 	udiv	r3, r3, r2
 801116a:	4a0b      	ldr	r2, [pc, #44]	@ (8011198 <HAL_InitTick+0x44>)
 801116c:	6810      	ldr	r0, [r2, #0]
 801116e:	fbb0 f0f3 	udiv	r0, r0, r3
 8011172:	f000 f8a1 	bl	80112b8 <HAL_SYSTICK_Config>
 8011176:	4604      	mov	r4, r0
 8011178:	2800      	cmp	r0, #0
 801117a:	d1f0      	bne.n	801115e <HAL_InitTick+0xa>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 801117c:	2d0f      	cmp	r5, #15
 801117e:	d8ee      	bhi.n	801115e <HAL_InitTick+0xa>
        HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8011180:	4602      	mov	r2, r0
 8011182:	4629      	mov	r1, r5
 8011184:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8011188:	f000 f864 	bl	8011254 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 801118c:	4b03      	ldr	r3, [pc, #12]	@ (801119c <HAL_InitTick+0x48>)
 801118e:	4620      	mov	r0, r4
 8011190:	601d      	str	r5, [r3, #0]
  return status;
 8011192:	e7e5      	b.n	8011160 <HAL_InitTick+0xc>
 8011194:	20000004 	.word	0x20000004
 8011198:	20000000 	.word	0x20000000
 801119c:	20000008 	.word	0x20000008

080111a0 <HAL_Init>:
{
 80111a0:	b510      	push	{r4, lr}
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80111a2:	2003      	movs	r0, #3
 80111a4:	f000 f844 	bl	8011230 <HAL_NVIC_SetPriorityGrouping>
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 80111a8:	2000      	movs	r0, #0
 80111aa:	f7ff ffd3 	bl	8011154 <HAL_InitTick>
 80111ae:	4604      	mov	r4, r0
 80111b0:	b918      	cbnz	r0, 80111ba <HAL_Init+0x1a>
    HAL_MspInit();
 80111b2:	f7ff ff0b 	bl	8010fcc <HAL_MspInit>
}
 80111b6:	4620      	mov	r0, r4
 80111b8:	bd10      	pop	{r4, pc}
    status = HAL_ERROR;
 80111ba:	2401      	movs	r4, #1
 80111bc:	e7fb      	b.n	80111b6 <HAL_Init+0x16>
	...

080111c0 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
 80111c0:	4a03      	ldr	r2, [pc, #12]	@ (80111d0 <HAL_IncTick+0x10>)
 80111c2:	4b04      	ldr	r3, [pc, #16]	@ (80111d4 <HAL_IncTick+0x14>)
 80111c4:	6811      	ldr	r1, [r2, #0]
 80111c6:	781b      	ldrb	r3, [r3, #0]
 80111c8:	440b      	add	r3, r1
 80111ca:	6013      	str	r3, [r2, #0]
}
 80111cc:	4770      	bx	lr
 80111ce:	bf00      	nop
 80111d0:	200020b0 	.word	0x200020b0
 80111d4:	20000004 	.word	0x20000004

080111d8 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80111d8:	4b01      	ldr	r3, [pc, #4]	@ (80111e0 <HAL_GetTick+0x8>)
 80111da:	6818      	ldr	r0, [r3, #0]
}
 80111dc:	4770      	bx	lr
 80111de:	bf00      	nop
 80111e0:	200020b0 	.word	0x200020b0

080111e4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80111e4:	b538      	push	{r3, r4, r5, lr}
 80111e6:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80111e8:	f7ff fff6 	bl	80111d8 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a period to guaranty minimum wait */
  if (wait < HAL_MAX_DELAY)
 80111ec:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)uwTickFreq;
 80111ee:	bf1c      	itt	ne
 80111f0:	4b05      	ldrne	r3, [pc, #20]	@ (8011208 <HAL_Delay+0x24>)
 80111f2:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 80111f4:	4605      	mov	r5, r0
    wait += (uint32_t)uwTickFreq;
 80111f6:	bf18      	it	ne
 80111f8:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 80111fa:	f7ff ffed 	bl	80111d8 <HAL_GetTick>
 80111fe:	1b43      	subs	r3, r0, r5
 8011200:	42a3      	cmp	r3, r4
 8011202:	d3fa      	bcc.n	80111fa <HAL_Delay+0x16>
  {
  }
}
 8011204:	bd38      	pop	{r3, r4, r5, pc}
 8011206:	bf00      	nop
 8011208:	20000004 	.word	0x20000004

0801120c <HAL_GetHalVersion>:
  * @retval version : 0xXYZR (8bits for each decimal, R for RC)
  */
uint32_t HAL_GetHalVersion(void)
{
  return STM32L4XX_HAL_VERSION;
}
 801120c:	4800      	ldr	r0, [pc, #0]	@ (8011210 <HAL_GetHalVersion+0x4>)
 801120e:	4770      	bx	lr
 8011210:	010d0500 	.word	0x010d0500

08011214 <HAL_GetREVID>:
  * @brief  Return the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
  return((DBGMCU->IDCODE & DBGMCU_IDCODE_REV_ID) >> 16);
 8011214:	4b01      	ldr	r3, [pc, #4]	@ (801121c <HAL_GetREVID+0x8>)
 8011216:	6818      	ldr	r0, [r3, #0]
}
 8011218:	0c00      	lsrs	r0, r0, #16
 801121a:	4770      	bx	lr
 801121c:	e0042000 	.word	0xe0042000

08011220 <HAL_GetDEVID>:
  * @brief  Return the device identifier.
  * @retval Device identifier
  */
uint32_t HAL_GetDEVID(void)
{
  return(DBGMCU->IDCODE & DBGMCU_IDCODE_DEV_ID);
 8011220:	4b02      	ldr	r3, [pc, #8]	@ (801122c <HAL_GetDEVID+0xc>)
 8011222:	6818      	ldr	r0, [r3, #0]
}
 8011224:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8011228:	4770      	bx	lr
 801122a:	bf00      	nop
 801122c:	e0042000 	.word	0xe0042000

08011230 <HAL_NVIC_SetPriorityGrouping>:
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8011230:	4907      	ldr	r1, [pc, #28]	@ (8011250 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8011232:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8011234:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8011238:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 801123a:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 801123c:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8011240:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8011242:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8011244:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8011248:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 801124c:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 801124e:	4770      	bx	lr
 8011250:	e000ed00 	.word	0xe000ed00

08011254 <HAL_NVIC_SetPriority>:
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8011254:	4b16      	ldr	r3, [pc, #88]	@ (80112b0 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8011256:	b530      	push	{r4, r5, lr}
 8011258:	68dc      	ldr	r4, [r3, #12]
 801125a:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 801125e:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8011262:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8011264:	2b04      	cmp	r3, #4
 8011266:	bf28      	it	cs
 8011268:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 801126a:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 801126c:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8011270:	bf8c      	ite	hi
 8011272:	3c03      	subhi	r4, #3
 8011274:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8011276:	fa05 f303 	lsl.w	r3, r5, r3
 801127a:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 801127e:	40a5      	lsls	r5, r4
 8011280:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8011284:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 8011286:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8011288:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 801128c:	bfac      	ite	ge
 801128e:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8011292:	4a08      	ldrlt	r2, [pc, #32]	@ (80112b4 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8011294:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8011298:	bfb8      	it	lt
 801129a:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 801129e:	b2db      	uxtb	r3, r3
 80112a0:	bfaa      	itet	ge
 80112a2:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80112a6:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80112a8:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80112ac:	bd30      	pop	{r4, r5, pc}
 80112ae:	bf00      	nop
 80112b0:	e000ed00 	.word	0xe000ed00
 80112b4:	e000ed14 	.word	0xe000ed14

080112b8 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80112b8:	3801      	subs	r0, #1
 80112ba:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 80112be:	d20b      	bcs.n	80112d8 <HAL_SYSTICK_Config+0x20>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80112c0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80112c4:	4a05      	ldr	r2, [pc, #20]	@ (80112dc <HAL_SYSTICK_Config+0x24>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80112c6:	6158      	str	r0, [r3, #20]
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80112c8:	21f0      	movs	r1, #240	@ 0xf0
 80112ca:	f882 1023 	strb.w	r1, [r2, #35]	@ 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80112ce:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80112d0:	2207      	movs	r2, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80112d2:	6198      	str	r0, [r3, #24]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80112d4:	611a      	str	r2, [r3, #16]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80112d6:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 80112d8:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 80112da:	4770      	bx	lr
 80112dc:	e000ed00 	.word	0xe000ed00

080112e0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80112e0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80112e4:	f8df 91a8 	ldr.w	r9, [pc, #424]	@ 8011490 <HAL_GPIO_Init+0x1b0>
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
        SYSCFG->EXTICR[position >> 2u] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 80112e8:	4c67      	ldr	r4, [pc, #412]	@ (8011488 <HAL_GPIO_Init+0x1a8>)
  uint32_t position = 0x00u;
 80112ea:	2300      	movs	r3, #0
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 80112ec:	680a      	ldr	r2, [r1, #0]
 80112ee:	fa32 f503 	lsrs.w	r5, r2, r3
 80112f2:	d102      	bne.n	80112fa <HAL_GPIO_Init+0x1a>
      }
    }

    position++;
  }
}
 80112f4:	b003      	add	sp, #12
 80112f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 80112fa:	2501      	movs	r5, #1
 80112fc:	fa05 f803 	lsl.w	r8, r5, r3
    if (iocurrent != 0x00u)
 8011300:	ea18 0202 	ands.w	r2, r8, r2
 8011304:	f000 80b1 	beq.w	801146a <HAL_GPIO_Init+0x18a>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8011308:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 801130a:	2703      	movs	r7, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 801130c:	f005 0603 	and.w	r6, r5, #3
 8011310:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 8011314:	fa07 fc0e 	lsl.w	ip, r7, lr
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8011318:	1e77      	subs	r7, r6, #1
 801131a:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 801131c:	ea6f 0c0c 	mvn.w	ip, ip
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8011320:	d834      	bhi.n	801138c <HAL_GPIO_Init+0xac>
        temp = GPIOx->OSPEEDR;
 8011322:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 8011324:	ea07 0a0c 	and.w	sl, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2u));
 8011328:	68cf      	ldr	r7, [r1, #12]
 801132a:	fa07 f70e 	lsl.w	r7, r7, lr
 801132e:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8011332:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8011334:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 8011336:	ea27 0808 	bic.w	r8, r7, r8
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 801133a:	f3c5 1700 	ubfx	r7, r5, #4, #1
 801133e:	409f      	lsls	r7, r3
 8011340:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->OTYPER = temp;
 8011344:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8011346:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8011348:	ea07 080c 	and.w	r8, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 801134c:	688f      	ldr	r7, [r1, #8]
 801134e:	fa07 f70e 	lsl.w	r7, r7, lr
 8011352:	ea47 0708 	orr.w	r7, r7, r8
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8011356:	2e02      	cmp	r6, #2
        GPIOx->PUPDR = temp;
 8011358:	60c7      	str	r7, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 801135a:	d122      	bne.n	80113a2 <HAL_GPIO_Init+0xc2>
        temp = GPIOx->AFR[position >> 3u];
 801135c:	ea4f 08d3 	mov.w	r8, r3, lsr #3
 8011360:	eb00 0888 	add.w	r8, r0, r8, lsl #2
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8011364:	f003 0a07 	and.w	sl, r3, #7
        temp = GPIOx->AFR[position >> 3u];
 8011368:	f8d8 7020 	ldr.w	r7, [r8, #32]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 801136c:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 8011370:	f04f 0b0f 	mov.w	fp, #15
 8011374:	fa0b fb0a 	lsl.w	fp, fp, sl
 8011378:	ea27 0b0b 	bic.w	fp, r7, fp
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 801137c:	690f      	ldr	r7, [r1, #16]
 801137e:	fa07 f70a 	lsl.w	r7, r7, sl
 8011382:	ea47 070b 	orr.w	r7, r7, fp
        GPIOx->AFR[position >> 3u] = temp;
 8011386:	f8c8 7020 	str.w	r7, [r8, #32]
 801138a:	e00a      	b.n	80113a2 <HAL_GPIO_Init+0xc2>
      if((GPIO_Init->Mode & GPIO_MODE_ANALOG) == GPIO_MODE_ANALOG)
 801138c:	2e03      	cmp	r6, #3
 801138e:	d1da      	bne.n	8011346 <HAL_GPIO_Init+0x66>
        temp = GPIOx->ASCR;
 8011390:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
        temp &= ~(GPIO_ASCR_ASC0 << position) ;
 8011392:	ea27 0808 	bic.w	r8, r7, r8
        temp |= (((GPIO_Init->Mode & GPIO_MODE_ANALOG_ADC_CONTROL) >> 3) << position);
 8011396:	f3c5 07c0 	ubfx	r7, r5, #3, #1
 801139a:	409f      	lsls	r7, r3
 801139c:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->ASCR = temp;
 80113a0:	62c7      	str	r7, [r0, #44]	@ 0x2c
      temp = GPIOx->MODER;
 80113a2:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 80113a4:	fa06 f60e 	lsl.w	r6, r6, lr
      temp &= ~(GPIO_MODER_MODE0 << (position * 2u));
 80113a8:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 80113ac:	433e      	orrs	r6, r7
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 80113ae:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 80113b2:	6006      	str	r6, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 80113b4:	d059      	beq.n	801146a <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80113b6:	f8d9 6060 	ldr.w	r6, [r9, #96]	@ 0x60
 80113ba:	f046 0601 	orr.w	r6, r6, #1
 80113be:	f8c9 6060 	str.w	r6, [r9, #96]	@ 0x60
 80113c2:	f8d9 6060 	ldr.w	r6, [r9, #96]	@ 0x60
 80113c6:	f023 0703 	bic.w	r7, r3, #3
 80113ca:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 80113ce:	f006 0601 	and.w	r6, r6, #1
 80113d2:	f507 3780 	add.w	r7, r7, #65536	@ 0x10000
 80113d6:	9601      	str	r6, [sp, #4]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 80113d8:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80113dc:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2u];
 80113de:	68be      	ldr	r6, [r7, #8]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 80113e0:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 80113e4:	f04f 0e0f 	mov.w	lr, #15
 80113e8:	fa0e fe0c 	lsl.w	lr, lr, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 80113ec:	f1b0 4f90 	cmp.w	r0, #1207959552	@ 0x48000000
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 80113f0:	ea26 0e0e 	bic.w	lr, r6, lr
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 80113f4:	d03b      	beq.n	801146e <HAL_GPIO_Init+0x18e>
 80113f6:	4e25      	ldr	r6, [pc, #148]	@ (801148c <HAL_GPIO_Init+0x1ac>)
 80113f8:	42b0      	cmp	r0, r6
 80113fa:	d03a      	beq.n	8011472 <HAL_GPIO_Init+0x192>
 80113fc:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
 8011400:	42b0      	cmp	r0, r6
 8011402:	d038      	beq.n	8011476 <HAL_GPIO_Init+0x196>
 8011404:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
 8011408:	42b0      	cmp	r0, r6
 801140a:	d036      	beq.n	801147a <HAL_GPIO_Init+0x19a>
 801140c:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
 8011410:	42b0      	cmp	r0, r6
 8011412:	d034      	beq.n	801147e <HAL_GPIO_Init+0x19e>
 8011414:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
 8011418:	42b0      	cmp	r0, r6
 801141a:	d032      	beq.n	8011482 <HAL_GPIO_Init+0x1a2>
 801141c:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
 8011420:	42b0      	cmp	r0, r6
 8011422:	bf14      	ite	ne
 8011424:	2607      	movne	r6, #7
 8011426:	2606      	moveq	r6, #6
 8011428:	fa06 f60c 	lsl.w	r6, r6, ip
 801142c:	ea46 060e 	orr.w	r6, r6, lr
        SYSCFG->EXTICR[position >> 2u] = temp;
 8011430:	60be      	str	r6, [r7, #8]
        temp = EXTI->RTSR1;
 8011432:	68a6      	ldr	r6, [r4, #8]
        temp &= ~(iocurrent);
 8011434:	43d7      	mvns	r7, r2
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8011436:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~(iocurrent);
 801143a:	bf0c      	ite	eq
 801143c:	403e      	andeq	r6, r7
          temp |= iocurrent;
 801143e:	4316      	orrne	r6, r2
        EXTI->RTSR1 = temp;
 8011440:	60a6      	str	r6, [r4, #8]
        temp = EXTI->FTSR1;
 8011442:	68e6      	ldr	r6, [r4, #12]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8011444:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~(iocurrent);
 8011448:	bf0c      	ite	eq
 801144a:	403e      	andeq	r6, r7
          temp |= iocurrent;
 801144c:	4316      	orrne	r6, r2
        EXTI->FTSR1 = temp;
 801144e:	60e6      	str	r6, [r4, #12]
        temp = EXTI->EMR1;
 8011450:	6866      	ldr	r6, [r4, #4]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8011452:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~(iocurrent);
 8011456:	bf0c      	ite	eq
 8011458:	403e      	andeq	r6, r7
          temp |= iocurrent;
 801145a:	4316      	orrne	r6, r2
        EXTI->EMR1 = temp;
 801145c:	6066      	str	r6, [r4, #4]
        temp = EXTI->IMR1;
 801145e:	6826      	ldr	r6, [r4, #0]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8011460:	03ed      	lsls	r5, r5, #15
        temp &= ~(iocurrent);
 8011462:	bf54      	ite	pl
 8011464:	403e      	andpl	r6, r7
          temp |= iocurrent;
 8011466:	4316      	orrmi	r6, r2
        EXTI->IMR1 = temp;
 8011468:	6026      	str	r6, [r4, #0]
    position++;
 801146a:	3301      	adds	r3, #1
 801146c:	e73e      	b.n	80112ec <HAL_GPIO_Init+0xc>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 801146e:	2600      	movs	r6, #0
 8011470:	e7da      	b.n	8011428 <HAL_GPIO_Init+0x148>
 8011472:	2601      	movs	r6, #1
 8011474:	e7d8      	b.n	8011428 <HAL_GPIO_Init+0x148>
 8011476:	2602      	movs	r6, #2
 8011478:	e7d6      	b.n	8011428 <HAL_GPIO_Init+0x148>
 801147a:	2603      	movs	r6, #3
 801147c:	e7d4      	b.n	8011428 <HAL_GPIO_Init+0x148>
 801147e:	2604      	movs	r6, #4
 8011480:	e7d2      	b.n	8011428 <HAL_GPIO_Init+0x148>
 8011482:	2605      	movs	r6, #5
 8011484:	e7d0      	b.n	8011428 <HAL_GPIO_Init+0x148>
 8011486:	bf00      	nop
 8011488:	40010400 	.word	0x40010400
 801148c:	48000400 	.word	0x48000400
 8011490:	40021000 	.word	0x40021000

08011494 <HAL_PWREx_GetVoltageRange>:
    else
    {
      return PWR_REGULATOR_VOLTAGE_SCALE1_BOOST;
    }
#else
  return  (PWR->CR1 & PWR_CR1_VOS);
 8011494:	4b02      	ldr	r3, [pc, #8]	@ (80114a0 <HAL_PWREx_GetVoltageRange+0xc>)
 8011496:	6818      	ldr	r0, [r3, #0]
#endif
}
 8011498:	f400 60c0 	and.w	r0, r0, #1536	@ 0x600
 801149c:	4770      	bx	lr
 801149e:	bf00      	nop
 80114a0:	40007000 	.word	0x40007000

080114a4 <HAL_PWREx_ControlVoltageScaling>:
  }

#else

  /* If Set Range 1 */
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 80114a4:	4a17      	ldr	r2, [pc, #92]	@ (8011504 <HAL_PWREx_ControlVoltageScaling+0x60>)
  {
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE1)
 80114a6:	6813      	ldr	r3, [r2, #0]
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 80114a8:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE1)
 80114ac:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 80114b0:	d11b      	bne.n	80114ea <HAL_PWREx_ControlVoltageScaling+0x46>
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE1)
 80114b2:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80114b6:	d01b      	beq.n	80114f0 <HAL_PWREx_ControlVoltageScaling+0x4c>
    {
      /* Set Range 1 */
      MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 80114b8:	6813      	ldr	r3, [r2, #0]
 80114ba:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 80114be:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80114c2:	6013      	str	r3, [r2, #0]

      /* Wait until VOSF is cleared */
      wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000U) + 1U;
 80114c4:	4b10      	ldr	r3, [pc, #64]	@ (8011508 <HAL_PWREx_ControlVoltageScaling+0x64>)
 80114c6:	681b      	ldr	r3, [r3, #0]
 80114c8:	2132      	movs	r1, #50	@ 0x32
 80114ca:	434b      	muls	r3, r1
 80114cc:	490f      	ldr	r1, [pc, #60]	@ (801150c <HAL_PWREx_ControlVoltageScaling+0x68>)
 80114ce:	fbb3 f3f1 	udiv	r3, r3, r1
 80114d2:	3301      	adds	r3, #1
      while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 80114d4:	6951      	ldr	r1, [r2, #20]
 80114d6:	0549      	lsls	r1, r1, #21
 80114d8:	d500      	bpl.n	80114dc <HAL_PWREx_ControlVoltageScaling+0x38>
 80114da:	b923      	cbnz	r3, 80114e6 <HAL_PWREx_ControlVoltageScaling+0x42>
      {
        wait_loop_index--;
      }
      if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 80114dc:	6953      	ldr	r3, [r2, #20]
 80114de:	055b      	lsls	r3, r3, #21
 80114e0:	d506      	bpl.n	80114f0 <HAL_PWREx_ControlVoltageScaling+0x4c>
      {
        return HAL_TIMEOUT;
 80114e2:	2003      	movs	r0, #3
    }
  }
#endif

  return HAL_OK;
}
 80114e4:	4770      	bx	lr
        wait_loop_index--;
 80114e6:	3b01      	subs	r3, #1
 80114e8:	e7f4      	b.n	80114d4 <HAL_PWREx_ControlVoltageScaling+0x30>
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE2)
 80114ea:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80114ee:	d101      	bne.n	80114f4 <HAL_PWREx_ControlVoltageScaling+0x50>
  return HAL_OK;
 80114f0:	2000      	movs	r0, #0
 80114f2:	4770      	bx	lr
      MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE2);
 80114f4:	6813      	ldr	r3, [r2, #0]
 80114f6:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 80114fa:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80114fe:	6013      	str	r3, [r2, #0]
 8011500:	e7f6      	b.n	80114f0 <HAL_PWREx_ControlVoltageScaling+0x4c>
 8011502:	bf00      	nop
 8011504:	40007000 	.word	0x40007000
 8011508:	20000000 	.word	0x20000000
 801150c:	000f4240 	.word	0x000f4240

08011510 <RCC_SetFlashLatencyFromMSIRange>:
            voltage range.
  * @param  msirange  MSI range value from RCC_MSIRANGE_0 to RCC_MSIRANGE_11
  * @retval HAL status
  */
static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange)
{
 8011510:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t vos;
  uint32_t latency = FLASH_LATENCY_0;  /* default value 0WS */

  if(__HAL_RCC_PWR_IS_CLK_ENABLED())
 8011512:	4d1e      	ldr	r5, [pc, #120]	@ (801158c <RCC_SetFlashLatencyFromMSIRange+0x7c>)
 8011514:	6dab      	ldr	r3, [r5, #88]	@ 0x58
 8011516:	00da      	lsls	r2, r3, #3
{
 8011518:	4604      	mov	r4, r0
  if(__HAL_RCC_PWR_IS_CLK_ENABLED())
 801151a:	d518      	bpl.n	801154e <RCC_SetFlashLatencyFromMSIRange+0x3e>
  {
    vos = HAL_PWREx_GetVoltageRange();
 801151c:	f7ff ffba 	bl	8011494 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_ENABLE();
    vos = HAL_PWREx_GetVoltageRange();
    __HAL_RCC_PWR_CLK_DISABLE();
  }

  if(vos == PWR_REGULATOR_VOLTAGE_SCALE1)
 8011520:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8011524:	d123      	bne.n	801156e <RCC_SetFlashLatencyFromMSIRange+0x5e>
  {
    if(msirange > RCC_MSIRANGE_8)
 8011526:	2c80      	cmp	r4, #128	@ 0x80
 8011528:	d929      	bls.n	801157e <RCC_SetFlashLatencyFromMSIRange+0x6e>
        latency = FLASH_LATENCY_2; /* 2WS */
      }
      else if(msirange == RCC_MSIRANGE_7)
      {
        /* MSI 8Mhz */
        latency = FLASH_LATENCY_1; /* 1WS */
 801152a:	2ca0      	cmp	r4, #160	@ 0xa0
 801152c:	bf8c      	ite	hi
 801152e:	2402      	movhi	r4, #2
 8011530:	2401      	movls	r4, #1
      }
    }
#endif
  }

  __HAL_FLASH_SET_LATENCY(latency);
 8011532:	4917      	ldr	r1, [pc, #92]	@ (8011590 <RCC_SetFlashLatencyFromMSIRange+0x80>)
 8011534:	680a      	ldr	r2, [r1, #0]
 8011536:	f022 0207 	bic.w	r2, r2, #7
 801153a:	4322      	orrs	r2, r4
 801153c:	600a      	str	r2, [r1, #0]

  /* Check that the new number of wait states is taken into account to access the Flash
     memory by reading the FLASH_ACR register */
  if(__HAL_FLASH_GET_LATENCY() != latency)
 801153e:	6808      	ldr	r0, [r1, #0]
 8011540:	f000 0007 	and.w	r0, r0, #7
  {
    return HAL_ERROR;
  }

  return HAL_OK;
}
 8011544:	1b00      	subs	r0, r0, r4
 8011546:	bf18      	it	ne
 8011548:	2001      	movne	r0, #1
 801154a:	b003      	add	sp, #12
 801154c:	bd30      	pop	{r4, r5, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 801154e:	6dab      	ldr	r3, [r5, #88]	@ 0x58
 8011550:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8011554:	65ab      	str	r3, [r5, #88]	@ 0x58
 8011556:	6dab      	ldr	r3, [r5, #88]	@ 0x58
 8011558:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 801155c:	9301      	str	r3, [sp, #4]
 801155e:	9b01      	ldr	r3, [sp, #4]
    vos = HAL_PWREx_GetVoltageRange();
 8011560:	f7ff ff98 	bl	8011494 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_DISABLE();
 8011564:	6dab      	ldr	r3, [r5, #88]	@ 0x58
 8011566:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 801156a:	65ab      	str	r3, [r5, #88]	@ 0x58
 801156c:	e7d8      	b.n	8011520 <RCC_SetFlashLatencyFromMSIRange+0x10>
    if(msirange > RCC_MSIRANGE_8)
 801156e:	2c80      	cmp	r4, #128	@ 0x80
 8011570:	d807      	bhi.n	8011582 <RCC_SetFlashLatencyFromMSIRange+0x72>
      if(msirange == RCC_MSIRANGE_8)
 8011572:	d008      	beq.n	8011586 <RCC_SetFlashLatencyFromMSIRange+0x76>
      else if(msirange == RCC_MSIRANGE_7)
 8011574:	f1a4 0370 	sub.w	r3, r4, #112	@ 0x70
 8011578:	425c      	negs	r4, r3
 801157a:	415c      	adcs	r4, r3
 801157c:	e7d9      	b.n	8011532 <RCC_SetFlashLatencyFromMSIRange+0x22>
  uint32_t latency = FLASH_LATENCY_0;  /* default value 0WS */
 801157e:	2400      	movs	r4, #0
 8011580:	e7d7      	b.n	8011532 <RCC_SetFlashLatencyFromMSIRange+0x22>
      latency = FLASH_LATENCY_3; /* 3WS */
 8011582:	2403      	movs	r4, #3
 8011584:	e7d5      	b.n	8011532 <RCC_SetFlashLatencyFromMSIRange+0x22>
        latency = FLASH_LATENCY_2; /* 2WS */
 8011586:	2402      	movs	r4, #2
 8011588:	e7d3      	b.n	8011532 <RCC_SetFlashLatencyFromMSIRange+0x22>
 801158a:	bf00      	nop
 801158c:	40021000 	.word	0x40021000
 8011590:	40022000 	.word	0x40022000

08011594 <HAL_RCC_GetSysClockFreq>:
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8011594:	4b20      	ldr	r3, [pc, #128]	@ (8011618 <HAL_RCC_GetSysClockFreq+0x84>)
 8011596:	689a      	ldr	r2, [r3, #8]
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 8011598:	68d9      	ldr	r1, [r3, #12]
  if((sysclk_source == RCC_CFGR_SWS_MSI) ||
 801159a:	f012 020c 	ands.w	r2, r2, #12
 801159e:	d005      	beq.n	80115ac <HAL_RCC_GetSysClockFreq+0x18>
 80115a0:	2a0c      	cmp	r2, #12
 80115a2:	d12c      	bne.n	80115fe <HAL_RCC_GetSysClockFreq+0x6a>
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 80115a4:	f001 0103 	and.w	r1, r1, #3
     ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 80115a8:	2901      	cmp	r1, #1
 80115aa:	d12f      	bne.n	801160c <HAL_RCC_GetSysClockFreq+0x78>
    if(READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == 0U)
 80115ac:	6819      	ldr	r1, [r3, #0]
    msirange = MSIRangeTable[msirange];
 80115ae:	481b      	ldr	r0, [pc, #108]	@ (801161c <HAL_RCC_GetSysClockFreq+0x88>)
    if(READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == 0U)
 80115b0:	0709      	lsls	r1, r1, #28
      msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 80115b2:	bf55      	itete	pl
 80115b4:	f8d3 1094 	ldrpl.w	r1, [r3, #148]	@ 0x94
      msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 80115b8:	6819      	ldrmi	r1, [r3, #0]
      msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 80115ba:	f3c1 2103 	ubfxpl	r1, r1, #8, #4
      msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 80115be:	f3c1 1103 	ubfxmi	r1, r1, #4, #4
    msirange = MSIRangeTable[msirange];
 80115c2:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
    if(sysclk_source == RCC_CFGR_SWS_MSI)
 80115c6:	b332      	cbz	r2, 8011616 <HAL_RCC_GetSysClockFreq+0x82>
    pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 80115c8:	68da      	ldr	r2, [r3, #12]
 80115ca:	f002 0203 	and.w	r2, r2, #3
    switch (pllsource)
 80115ce:	2a02      	cmp	r2, #2
 80115d0:	d01e      	beq.n	8011610 <HAL_RCC_GetSysClockFreq+0x7c>
 80115d2:	4913      	ldr	r1, [pc, #76]	@ (8011620 <HAL_RCC_GetSysClockFreq+0x8c>)
 80115d4:	2a03      	cmp	r2, #3
 80115d6:	bf08      	it	eq
 80115d8:	4608      	moveq	r0, r1
    pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 80115da:	68d9      	ldr	r1, [r3, #12]
    pllvco = (pllvco * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)) / pllm;
 80115dc:	68da      	ldr	r2, [r3, #12]
 80115de:	f3c2 2206 	ubfx	r2, r2, #8, #7
 80115e2:	4342      	muls	r2, r0
    pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 80115e4:	68d8      	ldr	r0, [r3, #12]
 80115e6:	f3c0 6041 	ubfx	r0, r0, #25, #2
    pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 80115ea:	f3c1 1102 	ubfx	r1, r1, #4, #3
    pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 80115ee:	3001      	adds	r0, #1
    pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 80115f0:	3101      	adds	r1, #1
    pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 80115f2:	0040      	lsls	r0, r0, #1
    pllvco = (pllvco * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)) / pllm;
 80115f4:	fbb2 f2f1 	udiv	r2, r2, r1
    sysclockfreq = pllvco / pllr;
 80115f8:	fbb2 f0f0 	udiv	r0, r2, r0
 80115fc:	4770      	bx	lr
  else if(sysclk_source == RCC_CFGR_SWS_HSI)
 80115fe:	2a04      	cmp	r2, #4
 8011600:	d008      	beq.n	8011614 <HAL_RCC_GetSysClockFreq+0x80>
  else if(sysclk_source == RCC_CFGR_SWS_HSE)
 8011602:	2a08      	cmp	r2, #8
 8011604:	4806      	ldr	r0, [pc, #24]	@ (8011620 <HAL_RCC_GetSysClockFreq+0x8c>)
 8011606:	bf18      	it	ne
 8011608:	2000      	movne	r0, #0
 801160a:	4770      	bx	lr
 801160c:	2000      	movs	r0, #0
 801160e:	e7db      	b.n	80115c8 <HAL_RCC_GetSysClockFreq+0x34>
      pllvco = HSI_VALUE;
 8011610:	4804      	ldr	r0, [pc, #16]	@ (8011624 <HAL_RCC_GetSysClockFreq+0x90>)
 8011612:	e7e2      	b.n	80115da <HAL_RCC_GetSysClockFreq+0x46>
    sysclockfreq = HSI_VALUE;
 8011614:	4803      	ldr	r0, [pc, #12]	@ (8011624 <HAL_RCC_GetSysClockFreq+0x90>)
}
 8011616:	4770      	bx	lr
 8011618:	40021000 	.word	0x40021000
 801161c:	08026404 	.word	0x08026404
 8011620:	007a1200 	.word	0x007a1200
 8011624:	00f42400 	.word	0x00f42400

08011628 <HAL_RCC_OscConfig>:
{
 8011628:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  if(RCC_OscInitStruct == NULL)
 801162c:	4605      	mov	r5, r0
 801162e:	b918      	cbnz	r0, 8011638 <HAL_RCC_OscConfig+0x10>
    return HAL_ERROR;
 8011630:	2001      	movs	r0, #1
}
 8011632:	b003      	add	sp, #12
 8011634:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8011638:	4c92      	ldr	r4, [pc, #584]	@ (8011884 <HAL_RCC_OscConfig+0x25c>)
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 801163a:	6803      	ldr	r3, [r0, #0]
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 801163c:	68a6      	ldr	r6, [r4, #8]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 801163e:	68e7      	ldr	r7, [r4, #12]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8011640:	06d8      	lsls	r0, r3, #27
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8011642:	f006 060c 	and.w	r6, r6, #12
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8011646:	f007 0703 	and.w	r7, r7, #3
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 801164a:	d53d      	bpl.n	80116c8 <HAL_RCC_OscConfig+0xa0>
    if((sysclk_source == RCC_CFGR_SWS_MSI) ||
 801164c:	b11e      	cbz	r6, 8011656 <HAL_RCC_OscConfig+0x2e>
 801164e:	2e0c      	cmp	r6, #12
 8011650:	d166      	bne.n	8011720 <HAL_RCC_OscConfig+0xf8>
       ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_MSI)))
 8011652:	2f01      	cmp	r7, #1
 8011654:	d164      	bne.n	8011720 <HAL_RCC_OscConfig+0xf8>
      if((READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 8011656:	6823      	ldr	r3, [r4, #0]
 8011658:	0799      	lsls	r1, r3, #30
 801165a:	d502      	bpl.n	8011662 <HAL_RCC_OscConfig+0x3a>
 801165c:	69ab      	ldr	r3, [r5, #24]
 801165e:	2b00      	cmp	r3, #0
 8011660:	d0e6      	beq.n	8011630 <HAL_RCC_OscConfig+0x8>
        if(RCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 8011662:	6823      	ldr	r3, [r4, #0]
 8011664:	6a28      	ldr	r0, [r5, #32]
 8011666:	071a      	lsls	r2, r3, #28
 8011668:	bf56      	itet	pl
 801166a:	f8d4 3094 	ldrpl.w	r3, [r4, #148]	@ 0x94
 801166e:	6823      	ldrmi	r3, [r4, #0]
 8011670:	091b      	lsrpl	r3, r3, #4
 8011672:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8011676:	4298      	cmp	r0, r3
 8011678:	d93b      	bls.n	80116f2 <HAL_RCC_OscConfig+0xca>
          if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 801167a:	f7ff ff49 	bl	8011510 <RCC_SetFlashLatencyFromMSIRange>
 801167e:	2800      	cmp	r0, #0
 8011680:	d1d6      	bne.n	8011630 <HAL_RCC_OscConfig+0x8>
          __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8011682:	6823      	ldr	r3, [r4, #0]
 8011684:	f043 0308 	orr.w	r3, r3, #8
 8011688:	6023      	str	r3, [r4, #0]
 801168a:	6823      	ldr	r3, [r4, #0]
 801168c:	6a2a      	ldr	r2, [r5, #32]
 801168e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8011692:	4313      	orrs	r3, r2
 8011694:	6023      	str	r3, [r4, #0]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8011696:	6863      	ldr	r3, [r4, #4]
 8011698:	69ea      	ldr	r2, [r5, #28]
 801169a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 801169e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80116a2:	6063      	str	r3, [r4, #4]
        SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos] & 0x1FU);
 80116a4:	f7ff ff76 	bl	8011594 <HAL_RCC_GetSysClockFreq>
 80116a8:	68a3      	ldr	r3, [r4, #8]
 80116aa:	4a77      	ldr	r2, [pc, #476]	@ (8011888 <HAL_RCC_OscConfig+0x260>)
 80116ac:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80116b0:	5cd3      	ldrb	r3, [r2, r3]
 80116b2:	f003 031f 	and.w	r3, r3, #31
 80116b6:	40d8      	lsrs	r0, r3
 80116b8:	4b74      	ldr	r3, [pc, #464]	@ (801188c <HAL_RCC_OscConfig+0x264>)
 80116ba:	6018      	str	r0, [r3, #0]
        status = HAL_InitTick(uwTickPrio);
 80116bc:	4b74      	ldr	r3, [pc, #464]	@ (8011890 <HAL_RCC_OscConfig+0x268>)
 80116be:	6818      	ldr	r0, [r3, #0]
 80116c0:	f7ff fd48 	bl	8011154 <HAL_InitTick>
        if(status != HAL_OK)
 80116c4:	2800      	cmp	r0, #0
 80116c6:	d1b4      	bne.n	8011632 <HAL_RCC_OscConfig+0xa>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80116c8:	682b      	ldr	r3, [r5, #0]
 80116ca:	07d9      	lsls	r1, r3, #31
 80116cc:	d45f      	bmi.n	801178e <HAL_RCC_OscConfig+0x166>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80116ce:	682b      	ldr	r3, [r5, #0]
 80116d0:	079a      	lsls	r2, r3, #30
 80116d2:	f100 809e 	bmi.w	8011812 <HAL_RCC_OscConfig+0x1ea>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80116d6:	682b      	ldr	r3, [r5, #0]
 80116d8:	0719      	lsls	r1, r3, #28
 80116da:	f100 80db 	bmi.w	8011894 <HAL_RCC_OscConfig+0x26c>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80116de:	682b      	ldr	r3, [r5, #0]
 80116e0:	075a      	lsls	r2, r3, #29
 80116e2:	f100 8101 	bmi.w	80118e8 <HAL_RCC_OscConfig+0x2c0>
  if(RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 80116e6:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 80116e8:	2b00      	cmp	r3, #0
 80116ea:	f040 816a 	bne.w	80119c2 <HAL_RCC_OscConfig+0x39a>
  return HAL_OK;
 80116ee:	2000      	movs	r0, #0
 80116f0:	e79f      	b.n	8011632 <HAL_RCC_OscConfig+0xa>
          __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 80116f2:	6823      	ldr	r3, [r4, #0]
 80116f4:	f043 0308 	orr.w	r3, r3, #8
 80116f8:	6023      	str	r3, [r4, #0]
 80116fa:	6823      	ldr	r3, [r4, #0]
 80116fc:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8011700:	4303      	orrs	r3, r0
 8011702:	6023      	str	r3, [r4, #0]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8011704:	6863      	ldr	r3, [r4, #4]
 8011706:	69ea      	ldr	r2, [r5, #28]
 8011708:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 801170c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8011710:	6063      	str	r3, [r4, #4]
          if(sysclk_source == RCC_CFGR_SWS_MSI)
 8011712:	2e00      	cmp	r6, #0
 8011714:	d1c6      	bne.n	80116a4 <HAL_RCC_OscConfig+0x7c>
            if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 8011716:	f7ff fefb 	bl	8011510 <RCC_SetFlashLatencyFromMSIRange>
 801171a:	2800      	cmp	r0, #0
 801171c:	d0c2      	beq.n	80116a4 <HAL_RCC_OscConfig+0x7c>
 801171e:	e787      	b.n	8011630 <HAL_RCC_OscConfig+0x8>
      if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 8011720:	69ab      	ldr	r3, [r5, #24]
 8011722:	b31b      	cbz	r3, 801176c <HAL_RCC_OscConfig+0x144>
        __HAL_RCC_MSI_ENABLE();
 8011724:	6823      	ldr	r3, [r4, #0]
 8011726:	f043 0301 	orr.w	r3, r3, #1
 801172a:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 801172c:	f7ff fd54 	bl	80111d8 <HAL_GetTick>
 8011730:	4680      	mov	r8, r0
        while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 8011732:	6823      	ldr	r3, [r4, #0]
 8011734:	079b      	lsls	r3, r3, #30
 8011736:	d511      	bpl.n	801175c <HAL_RCC_OscConfig+0x134>
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8011738:	6823      	ldr	r3, [r4, #0]
 801173a:	f043 0308 	orr.w	r3, r3, #8
 801173e:	6023      	str	r3, [r4, #0]
 8011740:	6823      	ldr	r3, [r4, #0]
 8011742:	6a2a      	ldr	r2, [r5, #32]
 8011744:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8011748:	4313      	orrs	r3, r2
 801174a:	6023      	str	r3, [r4, #0]
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 801174c:	6863      	ldr	r3, [r4, #4]
 801174e:	69ea      	ldr	r2, [r5, #28]
 8011750:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8011754:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8011758:	6063      	str	r3, [r4, #4]
 801175a:	e7b5      	b.n	80116c8 <HAL_RCC_OscConfig+0xa0>
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 801175c:	f7ff fd3c 	bl	80111d8 <HAL_GetTick>
 8011760:	eba0 0008 	sub.w	r0, r0, r8
 8011764:	2802      	cmp	r0, #2
 8011766:	d9e4      	bls.n	8011732 <HAL_RCC_OscConfig+0x10a>
            return HAL_TIMEOUT;
 8011768:	2003      	movs	r0, #3
 801176a:	e762      	b.n	8011632 <HAL_RCC_OscConfig+0xa>
        __HAL_RCC_MSI_DISABLE();
 801176c:	6823      	ldr	r3, [r4, #0]
 801176e:	f023 0301 	bic.w	r3, r3, #1
 8011772:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8011774:	f7ff fd30 	bl	80111d8 <HAL_GetTick>
 8011778:	4680      	mov	r8, r0
        while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U)
 801177a:	6823      	ldr	r3, [r4, #0]
 801177c:	0798      	lsls	r0, r3, #30
 801177e:	d5a3      	bpl.n	80116c8 <HAL_RCC_OscConfig+0xa0>
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8011780:	f7ff fd2a 	bl	80111d8 <HAL_GetTick>
 8011784:	eba0 0008 	sub.w	r0, r0, r8
 8011788:	2802      	cmp	r0, #2
 801178a:	d9f6      	bls.n	801177a <HAL_RCC_OscConfig+0x152>
 801178c:	e7ec      	b.n	8011768 <HAL_RCC_OscConfig+0x140>
    if((sysclk_source == RCC_CFGR_SWS_HSE) ||
 801178e:	2e08      	cmp	r6, #8
 8011790:	d003      	beq.n	801179a <HAL_RCC_OscConfig+0x172>
 8011792:	2e0c      	cmp	r6, #12
 8011794:	d108      	bne.n	80117a8 <HAL_RCC_OscConfig+0x180>
       ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_HSE)))
 8011796:	2f03      	cmp	r7, #3
 8011798:	d106      	bne.n	80117a8 <HAL_RCC_OscConfig+0x180>
      if((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 801179a:	6823      	ldr	r3, [r4, #0]
 801179c:	039b      	lsls	r3, r3, #14
 801179e:	d596      	bpl.n	80116ce <HAL_RCC_OscConfig+0xa6>
 80117a0:	686b      	ldr	r3, [r5, #4]
 80117a2:	2b00      	cmp	r3, #0
 80117a4:	d193      	bne.n	80116ce <HAL_RCC_OscConfig+0xa6>
 80117a6:	e743      	b.n	8011630 <HAL_RCC_OscConfig+0x8>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80117a8:	686b      	ldr	r3, [r5, #4]
 80117aa:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80117ae:	d110      	bne.n	80117d2 <HAL_RCC_OscConfig+0x1aa>
 80117b0:	6823      	ldr	r3, [r4, #0]
 80117b2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80117b6:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 80117b8:	f7ff fd0e 	bl	80111d8 <HAL_GetTick>
 80117bc:	4680      	mov	r8, r0
        while(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 80117be:	6823      	ldr	r3, [r4, #0]
 80117c0:	0398      	lsls	r0, r3, #14
 80117c2:	d484      	bmi.n	80116ce <HAL_RCC_OscConfig+0xa6>
          if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80117c4:	f7ff fd08 	bl	80111d8 <HAL_GetTick>
 80117c8:	eba0 0008 	sub.w	r0, r0, r8
 80117cc:	2864      	cmp	r0, #100	@ 0x64
 80117ce:	d9f6      	bls.n	80117be <HAL_RCC_OscConfig+0x196>
 80117d0:	e7ca      	b.n	8011768 <HAL_RCC_OscConfig+0x140>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80117d2:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80117d6:	d104      	bne.n	80117e2 <HAL_RCC_OscConfig+0x1ba>
 80117d8:	6823      	ldr	r3, [r4, #0]
 80117da:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80117de:	6023      	str	r3, [r4, #0]
 80117e0:	e7e6      	b.n	80117b0 <HAL_RCC_OscConfig+0x188>
 80117e2:	6822      	ldr	r2, [r4, #0]
 80117e4:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 80117e8:	6022      	str	r2, [r4, #0]
 80117ea:	6822      	ldr	r2, [r4, #0]
 80117ec:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 80117f0:	6022      	str	r2, [r4, #0]
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 80117f2:	2b00      	cmp	r3, #0
 80117f4:	d1e0      	bne.n	80117b8 <HAL_RCC_OscConfig+0x190>
        tickstart = HAL_GetTick();
 80117f6:	f7ff fcef 	bl	80111d8 <HAL_GetTick>
 80117fa:	4680      	mov	r8, r0
        while(READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 80117fc:	6823      	ldr	r3, [r4, #0]
 80117fe:	0399      	lsls	r1, r3, #14
 8011800:	f57f af65 	bpl.w	80116ce <HAL_RCC_OscConfig+0xa6>
          if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8011804:	f7ff fce8 	bl	80111d8 <HAL_GetTick>
 8011808:	eba0 0008 	sub.w	r0, r0, r8
 801180c:	2864      	cmp	r0, #100	@ 0x64
 801180e:	d9f5      	bls.n	80117fc <HAL_RCC_OscConfig+0x1d4>
 8011810:	e7aa      	b.n	8011768 <HAL_RCC_OscConfig+0x140>
    if((sysclk_source == RCC_CFGR_SWS_HSI) ||
 8011812:	2e04      	cmp	r6, #4
 8011814:	d003      	beq.n	801181e <HAL_RCC_OscConfig+0x1f6>
 8011816:	2e0c      	cmp	r6, #12
 8011818:	d110      	bne.n	801183c <HAL_RCC_OscConfig+0x214>
       ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_HSI)))
 801181a:	2f02      	cmp	r7, #2
 801181c:	d10e      	bne.n	801183c <HAL_RCC_OscConfig+0x214>
      if((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 801181e:	6823      	ldr	r3, [r4, #0]
 8011820:	055a      	lsls	r2, r3, #21
 8011822:	d503      	bpl.n	801182c <HAL_RCC_OscConfig+0x204>
 8011824:	68eb      	ldr	r3, [r5, #12]
 8011826:	2b00      	cmp	r3, #0
 8011828:	f43f af02 	beq.w	8011630 <HAL_RCC_OscConfig+0x8>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 801182c:	6863      	ldr	r3, [r4, #4]
 801182e:	692a      	ldr	r2, [r5, #16]
 8011830:	f023 53f8 	bic.w	r3, r3, #520093696	@ 0x1f000000
 8011834:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8011838:	6063      	str	r3, [r4, #4]
 801183a:	e74c      	b.n	80116d6 <HAL_RCC_OscConfig+0xae>
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 801183c:	68eb      	ldr	r3, [r5, #12]
 801183e:	b17b      	cbz	r3, 8011860 <HAL_RCC_OscConfig+0x238>
        __HAL_RCC_HSI_ENABLE();
 8011840:	6823      	ldr	r3, [r4, #0]
 8011842:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8011846:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8011848:	f7ff fcc6 	bl	80111d8 <HAL_GetTick>
 801184c:	4607      	mov	r7, r0
        while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 801184e:	6823      	ldr	r3, [r4, #0]
 8011850:	055b      	lsls	r3, r3, #21
 8011852:	d4eb      	bmi.n	801182c <HAL_RCC_OscConfig+0x204>
          if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8011854:	f7ff fcc0 	bl	80111d8 <HAL_GetTick>
 8011858:	1bc0      	subs	r0, r0, r7
 801185a:	2802      	cmp	r0, #2
 801185c:	d9f7      	bls.n	801184e <HAL_RCC_OscConfig+0x226>
 801185e:	e783      	b.n	8011768 <HAL_RCC_OscConfig+0x140>
        __HAL_RCC_HSI_DISABLE();
 8011860:	6823      	ldr	r3, [r4, #0]
 8011862:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8011866:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8011868:	f7ff fcb6 	bl	80111d8 <HAL_GetTick>
 801186c:	4607      	mov	r7, r0
        while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 801186e:	6823      	ldr	r3, [r4, #0]
 8011870:	0558      	lsls	r0, r3, #21
 8011872:	f57f af30 	bpl.w	80116d6 <HAL_RCC_OscConfig+0xae>
          if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8011876:	f7ff fcaf 	bl	80111d8 <HAL_GetTick>
 801187a:	1bc0      	subs	r0, r0, r7
 801187c:	2802      	cmp	r0, #2
 801187e:	d9f6      	bls.n	801186e <HAL_RCC_OscConfig+0x246>
 8011880:	e772      	b.n	8011768 <HAL_RCC_OscConfig+0x140>
 8011882:	bf00      	nop
 8011884:	40021000 	.word	0x40021000
 8011888:	0802643c 	.word	0x0802643c
 801188c:	20000000 	.word	0x20000000
 8011890:	20000008 	.word	0x20000008
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8011894:	696b      	ldr	r3, [r5, #20]
 8011896:	b19b      	cbz	r3, 80118c0 <HAL_RCC_OscConfig+0x298>
      __HAL_RCC_LSI_ENABLE();
 8011898:	f8d4 3094 	ldr.w	r3, [r4, #148]	@ 0x94
 801189c:	f043 0301 	orr.w	r3, r3, #1
 80118a0:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
      tickstart = HAL_GetTick();
 80118a4:	f7ff fc98 	bl	80111d8 <HAL_GetTick>
 80118a8:	4607      	mov	r7, r0
      while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 80118aa:	f8d4 3094 	ldr.w	r3, [r4, #148]	@ 0x94
 80118ae:	079b      	lsls	r3, r3, #30
 80118b0:	f53f af15 	bmi.w	80116de <HAL_RCC_OscConfig+0xb6>
        if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80118b4:	f7ff fc90 	bl	80111d8 <HAL_GetTick>
 80118b8:	1bc0      	subs	r0, r0, r7
 80118ba:	2802      	cmp	r0, #2
 80118bc:	d9f5      	bls.n	80118aa <HAL_RCC_OscConfig+0x282>
 80118be:	e753      	b.n	8011768 <HAL_RCC_OscConfig+0x140>
      __HAL_RCC_LSI_DISABLE();
 80118c0:	f8d4 3094 	ldr.w	r3, [r4, #148]	@ 0x94
 80118c4:	f023 0301 	bic.w	r3, r3, #1
 80118c8:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
      tickstart = HAL_GetTick();
 80118cc:	f7ff fc84 	bl	80111d8 <HAL_GetTick>
 80118d0:	4607      	mov	r7, r0
      while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 80118d2:	f8d4 3094 	ldr.w	r3, [r4, #148]	@ 0x94
 80118d6:	0798      	lsls	r0, r3, #30
 80118d8:	f57f af01 	bpl.w	80116de <HAL_RCC_OscConfig+0xb6>
        if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80118dc:	f7ff fc7c 	bl	80111d8 <HAL_GetTick>
 80118e0:	1bc0      	subs	r0, r0, r7
 80118e2:	2802      	cmp	r0, #2
 80118e4:	d9f5      	bls.n	80118d2 <HAL_RCC_OscConfig+0x2aa>
 80118e6:	e73f      	b.n	8011768 <HAL_RCC_OscConfig+0x140>
    if(HAL_IS_BIT_CLR(RCC->APB1ENR1, RCC_APB1ENR1_PWREN))
 80118e8:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80118ea:	00d9      	lsls	r1, r3, #3
 80118ec:	d429      	bmi.n	8011942 <HAL_RCC_OscConfig+0x31a>
      __HAL_RCC_PWR_CLK_ENABLE();
 80118ee:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80118f0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80118f4:	65a3      	str	r3, [r4, #88]	@ 0x58
 80118f6:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80118f8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80118fc:	9301      	str	r3, [sp, #4]
 80118fe:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8011900:	f04f 0801 	mov.w	r8, #1
    if(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8011904:	4f84      	ldr	r7, [pc, #528]	@ (8011b18 <HAL_RCC_OscConfig+0x4f0>)
 8011906:	683b      	ldr	r3, [r7, #0]
 8011908:	05da      	lsls	r2, r3, #23
 801190a:	d51d      	bpl.n	8011948 <HAL_RCC_OscConfig+0x320>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 801190c:	68ab      	ldr	r3, [r5, #8]
 801190e:	2b01      	cmp	r3, #1
 8011910:	d12b      	bne.n	801196a <HAL_RCC_OscConfig+0x342>
 8011912:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 8011916:	f043 0301 	orr.w	r3, r3, #1
 801191a:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
      tickstart = HAL_GetTick();
 801191e:	f7ff fc5b 	bl	80111d8 <HAL_GetTick>
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8011922:	f241 3988 	movw	r9, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8011926:	4607      	mov	r7, r0
      while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8011928:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 801192c:	0798      	lsls	r0, r3, #30
 801192e:	d542      	bpl.n	80119b6 <HAL_RCC_OscConfig+0x38e>
    if(pwrclkchanged == SET)
 8011930:	f1b8 0f00 	cmp.w	r8, #0
 8011934:	f43f aed7 	beq.w	80116e6 <HAL_RCC_OscConfig+0xbe>
      __HAL_RCC_PWR_CLK_DISABLE();
 8011938:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 801193a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 801193e:	65a3      	str	r3, [r4, #88]	@ 0x58
 8011940:	e6d1      	b.n	80116e6 <HAL_RCC_OscConfig+0xbe>
    FlagStatus       pwrclkchanged = RESET;
 8011942:	f04f 0800 	mov.w	r8, #0
 8011946:	e7dd      	b.n	8011904 <HAL_RCC_OscConfig+0x2dc>
      SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8011948:	683b      	ldr	r3, [r7, #0]
 801194a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 801194e:	603b      	str	r3, [r7, #0]
      tickstart = HAL_GetTick();
 8011950:	f7ff fc42 	bl	80111d8 <HAL_GetTick>
 8011954:	4681      	mov	r9, r0
      while(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8011956:	683b      	ldr	r3, [r7, #0]
 8011958:	05db      	lsls	r3, r3, #23
 801195a:	d4d7      	bmi.n	801190c <HAL_RCC_OscConfig+0x2e4>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 801195c:	f7ff fc3c 	bl	80111d8 <HAL_GetTick>
 8011960:	eba0 0009 	sub.w	r0, r0, r9
 8011964:	2802      	cmp	r0, #2
 8011966:	d9f6      	bls.n	8011956 <HAL_RCC_OscConfig+0x32e>
 8011968:	e6fe      	b.n	8011768 <HAL_RCC_OscConfig+0x140>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 801196a:	2b05      	cmp	r3, #5
 801196c:	d106      	bne.n	801197c <HAL_RCC_OscConfig+0x354>
 801196e:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 8011972:	f043 0304 	orr.w	r3, r3, #4
 8011976:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 801197a:	e7ca      	b.n	8011912 <HAL_RCC_OscConfig+0x2ea>
 801197c:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
 8011980:	f022 0201 	bic.w	r2, r2, #1
 8011984:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
 8011988:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
 801198c:	f022 0204 	bic.w	r2, r2, #4
 8011990:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8011994:	2b00      	cmp	r3, #0
 8011996:	d1c2      	bne.n	801191e <HAL_RCC_OscConfig+0x2f6>
      tickstart = HAL_GetTick();
 8011998:	f7ff fc1e 	bl	80111d8 <HAL_GetTick>
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 801199c:	f241 3988 	movw	r9, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 80119a0:	4607      	mov	r7, r0
      while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 80119a2:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 80119a6:	0799      	lsls	r1, r3, #30
 80119a8:	d5c2      	bpl.n	8011930 <HAL_RCC_OscConfig+0x308>
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80119aa:	f7ff fc15 	bl	80111d8 <HAL_GetTick>
 80119ae:	1bc0      	subs	r0, r0, r7
 80119b0:	4548      	cmp	r0, r9
 80119b2:	d9f6      	bls.n	80119a2 <HAL_RCC_OscConfig+0x37a>
 80119b4:	e6d8      	b.n	8011768 <HAL_RCC_OscConfig+0x140>
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80119b6:	f7ff fc0f 	bl	80111d8 <HAL_GetTick>
 80119ba:	1bc0      	subs	r0, r0, r7
 80119bc:	4548      	cmp	r0, r9
 80119be:	d9b3      	bls.n	8011928 <HAL_RCC_OscConfig+0x300>
 80119c0:	e6d2      	b.n	8011768 <HAL_RCC_OscConfig+0x140>
    if(RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 80119c2:	2b02      	cmp	r3, #2
 80119c4:	f040 808f 	bne.w	8011ae6 <HAL_RCC_OscConfig+0x4be>
      pll_config = RCC->PLLCFGR;
 80119c8:	68e3      	ldr	r3, [r4, #12]
      if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 80119ca:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
 80119cc:	f003 0103 	and.w	r1, r3, #3
 80119d0:	4291      	cmp	r1, r2
 80119d2:	d124      	bne.n	8011a1e <HAL_RCC_OscConfig+0x3f6>
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLM)    != ((RCC_OscInitStruct->PLL.PLLM - 1U) << RCC_PLLCFGR_PLLM_Pos)) ||
 80119d4:	6b29      	ldr	r1, [r5, #48]	@ 0x30
 80119d6:	f003 0270 	and.w	r2, r3, #112	@ 0x70
 80119da:	3901      	subs	r1, #1
      if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 80119dc:	ebb2 1f01 	cmp.w	r2, r1, lsl #4
 80119e0:	d11d      	bne.n	8011a1e <HAL_RCC_OscConfig+0x3f6>
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLN)    != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80119e2:	6b69      	ldr	r1, [r5, #52]	@ 0x34
 80119e4:	f403 42fe 	and.w	r2, r3, #32512	@ 0x7f00
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLM)    != ((RCC_OscInitStruct->PLL.PLLM - 1U) << RCC_PLLCFGR_PLLM_Pos)) ||
 80119e8:	ebb2 2f01 	cmp.w	r2, r1, lsl #8
 80119ec:	d117      	bne.n	8011a1e <HAL_RCC_OscConfig+0x3f6>
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLP)    != ((RCC_OscInitStruct->PLL.PLLP == RCC_PLLP_DIV7) ? 0U : 1U)) ||
 80119ee:	6baa      	ldr	r2, [r5, #56]	@ 0x38
 80119f0:	3a07      	subs	r2, #7
 80119f2:	f403 3100 	and.w	r1, r3, #131072	@ 0x20000
 80119f6:	bf18      	it	ne
 80119f8:	2201      	movne	r2, #1
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLN)    != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80119fa:	4291      	cmp	r1, r2
 80119fc:	d10f      	bne.n	8011a1e <HAL_RCC_OscConfig+0x3f6>
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ)    != ((((RCC_OscInitStruct->PLL.PLLQ) >> 1U) - 1U) << RCC_PLLCFGR_PLLQ_Pos)) ||
 80119fe:	6bea      	ldr	r2, [r5, #60]	@ 0x3c
 8011a00:	0852      	lsrs	r2, r2, #1
 8011a02:	f403 01c0 	and.w	r1, r3, #6291456	@ 0x600000
 8011a06:	3a01      	subs	r2, #1
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLP)    != ((RCC_OscInitStruct->PLL.PLLP == RCC_PLLP_DIV7) ? 0U : 1U)) ||
 8011a08:	ebb1 5f42 	cmp.w	r1, r2, lsl #21
 8011a0c:	d107      	bne.n	8011a1e <HAL_RCC_OscConfig+0x3f6>
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLR)    != ((((RCC_OscInitStruct->PLL.PLLR) >> 1U) - 1U) << RCC_PLLCFGR_PLLR_Pos)))
 8011a0e:	6c2a      	ldr	r2, [r5, #64]	@ 0x40
 8011a10:	0852      	lsrs	r2, r2, #1
 8011a12:	f003 63c0 	and.w	r3, r3, #100663296	@ 0x6000000
 8011a16:	3a01      	subs	r2, #1
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ)    != ((((RCC_OscInitStruct->PLL.PLLQ) >> 1U) - 1U) << RCC_PLLCFGR_PLLQ_Pos)) ||
 8011a18:	ebb3 6f42 	cmp.w	r3, r2, lsl #25
 8011a1c:	d04a      	beq.n	8011ab4 <HAL_RCC_OscConfig+0x48c>
        if(sysclk_source != RCC_CFGR_SWS_PLL)
 8011a1e:	2e0c      	cmp	r6, #12
 8011a20:	f43f ae06 	beq.w	8011630 <HAL_RCC_OscConfig+0x8>
          if((READ_BIT(RCC->CR, RCC_CR_PLLSAI1ON) != 0U)
 8011a24:	6823      	ldr	r3, [r4, #0]
 8011a26:	015a      	lsls	r2, r3, #5
 8011a28:	f53f ae02 	bmi.w	8011630 <HAL_RCC_OscConfig+0x8>
             || (READ_BIT(RCC->CR, RCC_CR_PLLSAI2ON) != 0U)
 8011a2c:	6823      	ldr	r3, [r4, #0]
 8011a2e:	00db      	lsls	r3, r3, #3
 8011a30:	f53f adfe 	bmi.w	8011630 <HAL_RCC_OscConfig+0x8>
            __HAL_RCC_PLL_DISABLE();
 8011a34:	6823      	ldr	r3, [r4, #0]
 8011a36:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8011a3a:	6023      	str	r3, [r4, #0]
            tickstart = HAL_GetTick();
 8011a3c:	f7ff fbcc 	bl	80111d8 <HAL_GetTick>
 8011a40:	4606      	mov	r6, r0
            while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8011a42:	6823      	ldr	r3, [r4, #0]
 8011a44:	019f      	lsls	r7, r3, #6
 8011a46:	d42f      	bmi.n	8011aa8 <HAL_RCC_OscConfig+0x480>
            __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8011a48:	68e2      	ldr	r2, [r4, #12]
 8011a4a:	4b34      	ldr	r3, [pc, #208]	@ (8011b1c <HAL_RCC_OscConfig+0x4f4>)
 8011a4c:	4013      	ands	r3, r2
 8011a4e:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
 8011a50:	4313      	orrs	r3, r2
 8011a52:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
 8011a54:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8011a58:	6b2a      	ldr	r2, [r5, #48]	@ 0x30
 8011a5a:	3a01      	subs	r2, #1
 8011a5c:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8011a60:	6baa      	ldr	r2, [r5, #56]	@ 0x38
 8011a62:	0912      	lsrs	r2, r2, #4
 8011a64:	ea43 4342 	orr.w	r3, r3, r2, lsl #17
 8011a68:	6bea      	ldr	r2, [r5, #60]	@ 0x3c
 8011a6a:	0852      	lsrs	r2, r2, #1
 8011a6c:	3a01      	subs	r2, #1
 8011a6e:	ea43 5342 	orr.w	r3, r3, r2, lsl #21
 8011a72:	6c2a      	ldr	r2, [r5, #64]	@ 0x40
 8011a74:	0852      	lsrs	r2, r2, #1
 8011a76:	3a01      	subs	r2, #1
 8011a78:	ea43 6342 	orr.w	r3, r3, r2, lsl #25
 8011a7c:	60e3      	str	r3, [r4, #12]
            __HAL_RCC_PLL_ENABLE();
 8011a7e:	6823      	ldr	r3, [r4, #0]
 8011a80:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8011a84:	6023      	str	r3, [r4, #0]
            __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 8011a86:	68e3      	ldr	r3, [r4, #12]
 8011a88:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8011a8c:	60e3      	str	r3, [r4, #12]
            tickstart = HAL_GetTick();
 8011a8e:	f7ff fba3 	bl	80111d8 <HAL_GetTick>
 8011a92:	4605      	mov	r5, r0
            while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8011a94:	6823      	ldr	r3, [r4, #0]
 8011a96:	0198      	lsls	r0, r3, #6
 8011a98:	f53f ae29 	bmi.w	80116ee <HAL_RCC_OscConfig+0xc6>
              if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8011a9c:	f7ff fb9c 	bl	80111d8 <HAL_GetTick>
 8011aa0:	1b40      	subs	r0, r0, r5
 8011aa2:	2802      	cmp	r0, #2
 8011aa4:	d9f6      	bls.n	8011a94 <HAL_RCC_OscConfig+0x46c>
 8011aa6:	e65f      	b.n	8011768 <HAL_RCC_OscConfig+0x140>
              if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8011aa8:	f7ff fb96 	bl	80111d8 <HAL_GetTick>
 8011aac:	1b80      	subs	r0, r0, r6
 8011aae:	2802      	cmp	r0, #2
 8011ab0:	d9c7      	bls.n	8011a42 <HAL_RCC_OscConfig+0x41a>
 8011ab2:	e659      	b.n	8011768 <HAL_RCC_OscConfig+0x140>
        if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8011ab4:	6823      	ldr	r3, [r4, #0]
 8011ab6:	0199      	lsls	r1, r3, #6
 8011ab8:	f53f ae19 	bmi.w	80116ee <HAL_RCC_OscConfig+0xc6>
          __HAL_RCC_PLL_ENABLE();
 8011abc:	6823      	ldr	r3, [r4, #0]
 8011abe:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8011ac2:	6023      	str	r3, [r4, #0]
          __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 8011ac4:	68e3      	ldr	r3, [r4, #12]
 8011ac6:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8011aca:	60e3      	str	r3, [r4, #12]
          tickstart = HAL_GetTick();
 8011acc:	f7ff fb84 	bl	80111d8 <HAL_GetTick>
 8011ad0:	4605      	mov	r5, r0
          while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8011ad2:	6823      	ldr	r3, [r4, #0]
 8011ad4:	019a      	lsls	r2, r3, #6
 8011ad6:	f53f ae0a 	bmi.w	80116ee <HAL_RCC_OscConfig+0xc6>
            if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8011ada:	f7ff fb7d 	bl	80111d8 <HAL_GetTick>
 8011ade:	1b40      	subs	r0, r0, r5
 8011ae0:	2802      	cmp	r0, #2
 8011ae2:	d9f6      	bls.n	8011ad2 <HAL_RCC_OscConfig+0x4aa>
 8011ae4:	e640      	b.n	8011768 <HAL_RCC_OscConfig+0x140>
      if(sysclk_source != RCC_CFGR_SWS_PLL)
 8011ae6:	2e0c      	cmp	r6, #12
 8011ae8:	f43f ada2 	beq.w	8011630 <HAL_RCC_OscConfig+0x8>
        __HAL_RCC_PLL_DISABLE();
 8011aec:	6823      	ldr	r3, [r4, #0]
 8011aee:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8011af2:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8011af4:	f7ff fb70 	bl	80111d8 <HAL_GetTick>
 8011af8:	4605      	mov	r5, r0
        while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8011afa:	6823      	ldr	r3, [r4, #0]
 8011afc:	019b      	lsls	r3, r3, #6
 8011afe:	d404      	bmi.n	8011b0a <HAL_RCC_OscConfig+0x4e2>
        RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLSRC | RCC_PLL_SYSCLK | RCC_PLL_48M1CLK | RCC_PLL_SAI3CLK);
 8011b00:	68e2      	ldr	r2, [r4, #12]
 8011b02:	4b07      	ldr	r3, [pc, #28]	@ (8011b20 <HAL_RCC_OscConfig+0x4f8>)
 8011b04:	4013      	ands	r3, r2
 8011b06:	60e3      	str	r3, [r4, #12]
 8011b08:	e5f1      	b.n	80116ee <HAL_RCC_OscConfig+0xc6>
          if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8011b0a:	f7ff fb65 	bl	80111d8 <HAL_GetTick>
 8011b0e:	1b40      	subs	r0, r0, r5
 8011b10:	2802      	cmp	r0, #2
 8011b12:	d9f2      	bls.n	8011afa <HAL_RCC_OscConfig+0x4d2>
 8011b14:	e628      	b.n	8011768 <HAL_RCC_OscConfig+0x140>
 8011b16:	bf00      	nop
 8011b18:	40007000 	.word	0x40007000
 8011b1c:	f99d808c 	.word	0xf99d808c
 8011b20:	feeefffc 	.word	0xfeeefffc

08011b24 <HAL_RCC_ClockConfig>:
{
 8011b24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011b28:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8011b2a:	4604      	mov	r4, r0
 8011b2c:	b910      	cbnz	r0, 8011b34 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8011b2e:	2001      	movs	r0, #1
}
 8011b30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8011b34:	4a4b      	ldr	r2, [pc, #300]	@ (8011c64 <HAL_RCC_ClockConfig+0x140>)
 8011b36:	6813      	ldr	r3, [r2, #0]
 8011b38:	f003 0307 	and.w	r3, r3, #7
 8011b3c:	428b      	cmp	r3, r1
 8011b3e:	d32c      	bcc.n	8011b9a <HAL_RCC_ClockConfig+0x76>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8011b40:	6821      	ldr	r1, [r4, #0]
 8011b42:	0788      	lsls	r0, r1, #30
 8011b44:	d434      	bmi.n	8011bb0 <HAL_RCC_ClockConfig+0x8c>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8011b46:	07c9      	lsls	r1, r1, #31
 8011b48:	d43f      	bmi.n	8011bca <HAL_RCC_ClockConfig+0xa6>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8011b4a:	6821      	ldr	r1, [r4, #0]
 8011b4c:	078a      	lsls	r2, r1, #30
 8011b4e:	d468      	bmi.n	8011c22 <HAL_RCC_ClockConfig+0xfe>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8011b50:	4a44      	ldr	r2, [pc, #272]	@ (8011c64 <HAL_RCC_ClockConfig+0x140>)
 8011b52:	6813      	ldr	r3, [r2, #0]
 8011b54:	f003 0307 	and.w	r3, r3, #7
 8011b58:	42ab      	cmp	r3, r5
 8011b5a:	d86f      	bhi.n	8011c3c <HAL_RCC_ClockConfig+0x118>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8011b5c:	f011 0f04 	tst.w	r1, #4
 8011b60:	4d41      	ldr	r5, [pc, #260]	@ (8011c68 <HAL_RCC_ClockConfig+0x144>)
 8011b62:	d177      	bne.n	8011c54 <HAL_RCC_ClockConfig+0x130>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8011b64:	070b      	lsls	r3, r1, #28
 8011b66:	d506      	bpl.n	8011b76 <HAL_RCC_ClockConfig+0x52>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8011b68:	68ab      	ldr	r3, [r5, #8]
 8011b6a:	6922      	ldr	r2, [r4, #16]
 8011b6c:	f423 5360 	bic.w	r3, r3, #14336	@ 0x3800
 8011b70:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8011b74:	60ab      	str	r3, [r5, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos] & 0x1FU);
 8011b76:	f7ff fd0d 	bl	8011594 <HAL_RCC_GetSysClockFreq>
 8011b7a:	68ab      	ldr	r3, [r5, #8]
 8011b7c:	4a3b      	ldr	r2, [pc, #236]	@ (8011c6c <HAL_RCC_ClockConfig+0x148>)
 8011b7e:	f3c3 1303 	ubfx	r3, r3, #4, #4
}
 8011b82:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos] & 0x1FU);
 8011b86:	5cd3      	ldrb	r3, [r2, r3]
 8011b88:	f003 031f 	and.w	r3, r3, #31
 8011b8c:	40d8      	lsrs	r0, r3
 8011b8e:	4b38      	ldr	r3, [pc, #224]	@ (8011c70 <HAL_RCC_ClockConfig+0x14c>)
 8011b90:	6018      	str	r0, [r3, #0]
  status = HAL_InitTick(uwTickPrio);
 8011b92:	4b38      	ldr	r3, [pc, #224]	@ (8011c74 <HAL_RCC_ClockConfig+0x150>)
 8011b94:	6818      	ldr	r0, [r3, #0]
 8011b96:	f7ff badd 	b.w	8011154 <HAL_InitTick>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8011b9a:	6813      	ldr	r3, [r2, #0]
 8011b9c:	f023 0307 	bic.w	r3, r3, #7
 8011ba0:	430b      	orrs	r3, r1
 8011ba2:	6013      	str	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8011ba4:	6813      	ldr	r3, [r2, #0]
 8011ba6:	f003 0307 	and.w	r3, r3, #7
 8011baa:	428b      	cmp	r3, r1
 8011bac:	d1bf      	bne.n	8011b2e <HAL_RCC_ClockConfig+0xa>
 8011bae:	e7c7      	b.n	8011b40 <HAL_RCC_ClockConfig+0x1c>
    if(RCC_ClkInitStruct->AHBCLKDivider > READ_BIT(RCC->CFGR, RCC_CFGR_HPRE))
 8011bb0:	4a2d      	ldr	r2, [pc, #180]	@ (8011c68 <HAL_RCC_ClockConfig+0x144>)
 8011bb2:	68a0      	ldr	r0, [r4, #8]
 8011bb4:	6893      	ldr	r3, [r2, #8]
 8011bb6:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8011bba:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8011bbc:	bf81      	itttt	hi
 8011bbe:	6893      	ldrhi	r3, [r2, #8]
 8011bc0:	f023 03f0 	bichi.w	r3, r3, #240	@ 0xf0
 8011bc4:	4303      	orrhi	r3, r0
 8011bc6:	6093      	strhi	r3, [r2, #8]
 8011bc8:	e7bd      	b.n	8011b46 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8011bca:	6862      	ldr	r2, [r4, #4]
 8011bcc:	4e26      	ldr	r6, [pc, #152]	@ (8011c68 <HAL_RCC_ClockConfig+0x144>)
 8011bce:	2a03      	cmp	r2, #3
      if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8011bd0:	6833      	ldr	r3, [r6, #0]
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8011bd2:	d11a      	bne.n	8011c0a <HAL_RCC_ClockConfig+0xe6>
      if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8011bd4:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
        if(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8011bd8:	d0a9      	beq.n	8011b2e <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8011bda:	68b3      	ldr	r3, [r6, #8]
 8011bdc:	f023 0303 	bic.w	r3, r3, #3
 8011be0:	4313      	orrs	r3, r2
 8011be2:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8011be4:	f7ff faf8 	bl	80111d8 <HAL_GetTick>
      if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8011be8:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 8011bec:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8011bee:	68b3      	ldr	r3, [r6, #8]
 8011bf0:	6862      	ldr	r2, [r4, #4]
 8011bf2:	f003 030c 	and.w	r3, r3, #12
 8011bf6:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8011bfa:	d0a6      	beq.n	8011b4a <HAL_RCC_ClockConfig+0x26>
      if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8011bfc:	f7ff faec 	bl	80111d8 <HAL_GetTick>
 8011c00:	1bc0      	subs	r0, r0, r7
 8011c02:	4540      	cmp	r0, r8
 8011c04:	d9f3      	bls.n	8011bee <HAL_RCC_ClockConfig+0xca>
        return HAL_TIMEOUT;
 8011c06:	2003      	movs	r0, #3
 8011c08:	e792      	b.n	8011b30 <HAL_RCC_ClockConfig+0xc>
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8011c0a:	2a02      	cmp	r2, #2
 8011c0c:	d102      	bne.n	8011c14 <HAL_RCC_ClockConfig+0xf0>
        if(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8011c0e:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
 8011c12:	e7e1      	b.n	8011bd8 <HAL_RCC_ClockConfig+0xb4>
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 8011c14:	b912      	cbnz	r2, 8011c1c <HAL_RCC_ClockConfig+0xf8>
        if(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 8011c16:	f013 0f02 	tst.w	r3, #2
 8011c1a:	e7dd      	b.n	8011bd8 <HAL_RCC_ClockConfig+0xb4>
        if(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8011c1c:	f413 6f80 	tst.w	r3, #1024	@ 0x400
 8011c20:	e7da      	b.n	8011bd8 <HAL_RCC_ClockConfig+0xb4>
    if(RCC_ClkInitStruct->AHBCLKDivider < READ_BIT(RCC->CFGR, RCC_CFGR_HPRE))
 8011c22:	4a11      	ldr	r2, [pc, #68]	@ (8011c68 <HAL_RCC_ClockConfig+0x144>)
 8011c24:	68a0      	ldr	r0, [r4, #8]
 8011c26:	6893      	ldr	r3, [r2, #8]
 8011c28:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8011c2c:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8011c2e:	bf3f      	itttt	cc
 8011c30:	6893      	ldrcc	r3, [r2, #8]
 8011c32:	f023 03f0 	biccc.w	r3, r3, #240	@ 0xf0
 8011c36:	4303      	orrcc	r3, r0
 8011c38:	6093      	strcc	r3, [r2, #8]
 8011c3a:	e789      	b.n	8011b50 <HAL_RCC_ClockConfig+0x2c>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8011c3c:	6813      	ldr	r3, [r2, #0]
 8011c3e:	f023 0307 	bic.w	r3, r3, #7
 8011c42:	432b      	orrs	r3, r5
 8011c44:	6013      	str	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8011c46:	6813      	ldr	r3, [r2, #0]
 8011c48:	f003 0307 	and.w	r3, r3, #7
 8011c4c:	42ab      	cmp	r3, r5
 8011c4e:	f47f af6e 	bne.w	8011b2e <HAL_RCC_ClockConfig+0xa>
 8011c52:	e783      	b.n	8011b5c <HAL_RCC_ClockConfig+0x38>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8011c54:	68ab      	ldr	r3, [r5, #8]
 8011c56:	68e2      	ldr	r2, [r4, #12]
 8011c58:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8011c5c:	4313      	orrs	r3, r2
 8011c5e:	60ab      	str	r3, [r5, #8]
 8011c60:	e780      	b.n	8011b64 <HAL_RCC_ClockConfig+0x40>
 8011c62:	bf00      	nop
 8011c64:	40022000 	.word	0x40022000
 8011c68:	40021000 	.word	0x40021000
 8011c6c:	0802643c 	.word	0x0802643c
 8011c70:	20000000 	.word	0x20000000
 8011c74:	20000008 	.word	0x20000008

08011c78 <HAL_RCC_GetHCLKFreq>:
}
 8011c78:	4b01      	ldr	r3, [pc, #4]	@ (8011c80 <HAL_RCC_GetHCLKFreq+0x8>)
 8011c7a:	6818      	ldr	r0, [r3, #0]
 8011c7c:	4770      	bx	lr
 8011c7e:	bf00      	nop
 8011c80:	20000000 	.word	0x20000000

08011c84 <HAL_RCC_GetPCLK1Freq>:
  return (HAL_RCC_GetHCLKFreq() >> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos] & 0x1FU));
 8011c84:	4b05      	ldr	r3, [pc, #20]	@ (8011c9c <HAL_RCC_GetPCLK1Freq+0x18>)
 8011c86:	4a06      	ldr	r2, [pc, #24]	@ (8011ca0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8011c88:	689b      	ldr	r3, [r3, #8]
 8011c8a:	f3c3 2302 	ubfx	r3, r3, #8, #3
 8011c8e:	5cd3      	ldrb	r3, [r2, r3]
 8011c90:	4a04      	ldr	r2, [pc, #16]	@ (8011ca4 <HAL_RCC_GetPCLK1Freq+0x20>)
 8011c92:	6810      	ldr	r0, [r2, #0]
 8011c94:	f003 031f 	and.w	r3, r3, #31
}
 8011c98:	40d8      	lsrs	r0, r3
 8011c9a:	4770      	bx	lr
 8011c9c:	40021000 	.word	0x40021000
 8011ca0:	08026434 	.word	0x08026434
 8011ca4:	20000000 	.word	0x20000000

08011ca8 <HAL_RCC_GetPCLK2Freq>:
  return (HAL_RCC_GetHCLKFreq()>> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos] & 0x1FU));
 8011ca8:	4b05      	ldr	r3, [pc, #20]	@ (8011cc0 <HAL_RCC_GetPCLK2Freq+0x18>)
 8011caa:	4a06      	ldr	r2, [pc, #24]	@ (8011cc4 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8011cac:	689b      	ldr	r3, [r3, #8]
 8011cae:	f3c3 23c2 	ubfx	r3, r3, #11, #3
 8011cb2:	5cd3      	ldrb	r3, [r2, r3]
 8011cb4:	4a04      	ldr	r2, [pc, #16]	@ (8011cc8 <HAL_RCC_GetPCLK2Freq+0x20>)
 8011cb6:	6810      	ldr	r0, [r2, #0]
 8011cb8:	f003 031f 	and.w	r3, r3, #31
}
 8011cbc:	40d8      	lsrs	r0, r3
 8011cbe:	4770      	bx	lr
 8011cc0:	40021000 	.word	0x40021000
 8011cc4:	08026434 	.word	0x08026434
 8011cc8:	20000000 	.word	0x20000000

08011ccc <RCCEx_PLLSAI1_Config>:
  * @note   PLLSAI1 is temporary disable to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLLSAI1_Config(RCC_PLLSAI1InitTypeDef *PllSai1, uint32_t Divider)
{
 8011ccc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLLSAI1M_VALUE(PllSai1->PLLSAI1M));
  assert_param(IS_RCC_PLLSAI1N_VALUE(PllSai1->PLLSAI1N));
  assert_param(IS_RCC_PLLSAI1CLOCKOUT_VALUE(PllSai1->PLLSAI1ClockOut));

  /* Check that PLLSAI1 clock source and divider M can be applied */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_NONE)
 8011cce:	4c41      	ldr	r4, [pc, #260]	@ (8011dd4 <RCCEx_PLLSAI1_Config+0x108>)
 8011cd0:	68e3      	ldr	r3, [r4, #12]
 8011cd2:	079b      	lsls	r3, r3, #30
{
 8011cd4:	4605      	mov	r5, r0
 8011cd6:	460e      	mov	r6, r1
  {
    /* PLL clock source and divider M already set, check that no request for change  */
    if((__HAL_RCC_GET_PLL_OSCSOURCE() != PllSai1->PLLSAI1Source)
 8011cd8:	6800      	ldr	r0, [r0, #0]
  if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_NONE)
 8011cda:	d028      	beq.n	8011d2e <RCCEx_PLLSAI1_Config+0x62>
    if((__HAL_RCC_GET_PLL_OSCSOURCE() != PllSai1->PLLSAI1Source)
 8011cdc:	68e3      	ldr	r3, [r4, #12]
 8011cde:	f003 0303 	and.w	r3, r3, #3
 8011ce2:	4283      	cmp	r3, r0
 8011ce4:	d13a      	bne.n	8011d5c <RCCEx_PLLSAI1_Config+0x90>
       ||
 8011ce6:	2b00      	cmp	r3, #0
 8011ce8:	d038      	beq.n	8011d5c <RCCEx_PLLSAI1_Config+0x90>
       (PllSai1->PLLSAI1Source == RCC_PLLSOURCE_NONE)
#if !defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
       ||
       (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U) != PllSai1->PLLSAI1M)
 8011cea:	68e3      	ldr	r3, [r4, #12]
       ||
 8011cec:	686a      	ldr	r2, [r5, #4]
       (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U) != PllSai1->PLLSAI1M)
 8011cee:	f3c3 1302 	ubfx	r3, r3, #4, #3
 8011cf2:	3301      	adds	r3, #1
       ||
 8011cf4:	4293      	cmp	r3, r2
 8011cf6:	d131      	bne.n	8011d5c <RCCEx_PLLSAI1_Config+0x90>
  }

  if(status == HAL_OK)
  {
    /* Disable the PLLSAI1 */
    __HAL_RCC_PLLSAI1_DISABLE();
 8011cf8:	6823      	ldr	r3, [r4, #0]
 8011cfa:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8011cfe:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8011d00:	f7ff fa6a 	bl	80111d8 <HAL_GetTick>
 8011d04:	4607      	mov	r7, r0

    /* Wait till PLLSAI1 is ready to be updated */
    while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) != 0U)
 8011d06:	6823      	ldr	r3, [r4, #0]
 8011d08:	011a      	lsls	r2, r3, #4
 8011d0a:	d430      	bmi.n	8011d6e <RCCEx_PLLSAI1_Config+0xa2>
        MODIFY_REG(RCC->PLLSAI1CFGR,
                   RCC_PLLSAI1CFGR_PLLSAI1N | RCC_PLLSAI1CFGR_PLLSAI1PDIV,
                   (PllSai1->PLLSAI1N << RCC_PLLSAI1CFGR_PLLSAI1N_Pos) |
                   (PllSai1->PLLSAI1P << RCC_PLLSAI1CFGR_PLLSAI1PDIV_Pos));
#else
        MODIFY_REG(RCC->PLLSAI1CFGR,
 8011d0c:	68aa      	ldr	r2, [r5, #8]
 8011d0e:	0212      	lsls	r2, r2, #8
      if(Divider == DIVIDER_P_UPDATE)
 8011d10:	b3a6      	cbz	r6, 8011d7c <RCCEx_PLLSAI1_Config+0xb0>
                   ((PllSai1->PLLSAI1P >> 4U) << RCC_PLLSAI1CFGR_PLLSAI1P_Pos));
#endif /* RCC_PLLSAI1P_DIV_2_31_SUPPORT */

#endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
      }
      else if(Divider == DIVIDER_Q_UPDATE)
 8011d12:	2e01      	cmp	r6, #1
                   (PllSai1->PLLSAI1N << RCC_PLLSAI1CFGR_PLLSAI1N_Pos) |
                   (((PllSai1->PLLSAI1Q >> 1U) - 1U) << RCC_PLLSAI1CFGR_PLLSAI1Q_Pos) |
                   ((PllSai1->PLLSAI1M - 1U) << RCC_PLLSAI1CFGR_PLLSAI1M_Pos));
#else
        /* Configure the PLLSAI1 Division factor Q and Multiplication factor N*/
        MODIFY_REG(RCC->PLLSAI1CFGR,
 8011d14:	6923      	ldr	r3, [r4, #16]
      else if(Divider == DIVIDER_Q_UPDATE)
 8011d16:	d14c      	bne.n	8011db2 <RCCEx_PLLSAI1_Config+0xe6>
        MODIFY_REG(RCC->PLLSAI1CFGR,
 8011d18:	6929      	ldr	r1, [r5, #16]
 8011d1a:	f423 03c0 	bic.w	r3, r3, #6291456	@ 0x600000
 8011d1e:	0849      	lsrs	r1, r1, #1
 8011d20:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8011d24:	3901      	subs	r1, #1
 8011d26:	4313      	orrs	r3, r2
 8011d28:	ea43 5341 	orr.w	r3, r3, r1, lsl #21
 8011d2c:	e030      	b.n	8011d90 <RCCEx_PLLSAI1_Config+0xc4>
    switch(PllSai1->PLLSAI1Source)
 8011d2e:	2802      	cmp	r0, #2
 8011d30:	d010      	beq.n	8011d54 <RCCEx_PLLSAI1_Config+0x88>
 8011d32:	2803      	cmp	r0, #3
 8011d34:	d014      	beq.n	8011d60 <RCCEx_PLLSAI1_Config+0x94>
 8011d36:	2801      	cmp	r0, #1
 8011d38:	d110      	bne.n	8011d5c <RCCEx_PLLSAI1_Config+0x90>
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_MSIRDY))
 8011d3a:	6823      	ldr	r3, [r4, #0]
 8011d3c:	079f      	lsls	r7, r3, #30
 8011d3e:	d51c      	bpl.n	8011d7a <RCCEx_PLLSAI1_Config+0xae>
      MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM, PllSai1->PLLSAI1Source | (PllSai1->PLLSAI1M - 1U) << RCC_PLLCFGR_PLLM_Pos);
 8011d40:	68e3      	ldr	r3, [r4, #12]
 8011d42:	686a      	ldr	r2, [r5, #4]
 8011d44:	f023 0373 	bic.w	r3, r3, #115	@ 0x73
 8011d48:	3a01      	subs	r2, #1
 8011d4a:	4303      	orrs	r3, r0
 8011d4c:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8011d50:	60e3      	str	r3, [r4, #12]
  if(status == HAL_OK)
 8011d52:	e7d1      	b.n	8011cf8 <RCCEx_PLLSAI1_Config+0x2c>
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSIRDY))
 8011d54:	6823      	ldr	r3, [r4, #0]
 8011d56:	f413 6f80 	tst.w	r3, #1024	@ 0x400
        if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSEBYP))
 8011d5a:	d1f1      	bne.n	8011d40 <RCCEx_PLLSAI1_Config+0x74>
 8011d5c:	2001      	movs	r0, #1
 8011d5e:	e00c      	b.n	8011d7a <RCCEx_PLLSAI1_Config+0xae>
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSERDY))
 8011d60:	6823      	ldr	r3, [r4, #0]
 8011d62:	0399      	lsls	r1, r3, #14
 8011d64:	d4ec      	bmi.n	8011d40 <RCCEx_PLLSAI1_Config+0x74>
        if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSEBYP))
 8011d66:	6823      	ldr	r3, [r4, #0]
 8011d68:	f413 2f80 	tst.w	r3, #262144	@ 0x40000
 8011d6c:	e7f5      	b.n	8011d5a <RCCEx_PLLSAI1_Config+0x8e>
      if((HAL_GetTick() - tickstart) > PLLSAI1_TIMEOUT_VALUE)
 8011d6e:	f7ff fa33 	bl	80111d8 <HAL_GetTick>
 8011d72:	1bc0      	subs	r0, r0, r7
 8011d74:	2802      	cmp	r0, #2
 8011d76:	d9c6      	bls.n	8011d06 <RCCEx_PLLSAI1_Config+0x3a>
 8011d78:	2003      	movs	r0, #3
      }
    }
  }

  return status;
}
 8011d7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        MODIFY_REG(RCC->PLLSAI1CFGR,
 8011d7c:	6923      	ldr	r3, [r4, #16]
 8011d7e:	68e9      	ldr	r1, [r5, #12]
 8011d80:	f423 331f 	bic.w	r3, r3, #162816	@ 0x27c00
 8011d84:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8011d88:	0909      	lsrs	r1, r1, #4
 8011d8a:	4313      	orrs	r3, r2
 8011d8c:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
        MODIFY_REG(RCC->PLLSAI1CFGR,
 8011d90:	6123      	str	r3, [r4, #16]
      __HAL_RCC_PLLSAI1_ENABLE();
 8011d92:	6823      	ldr	r3, [r4, #0]
 8011d94:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8011d98:	6023      	str	r3, [r4, #0]
      tickstart = HAL_GetTick();
 8011d9a:	f7ff fa1d 	bl	80111d8 <HAL_GetTick>
 8011d9e:	4606      	mov	r6, r0
      while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) == 0U)
 8011da0:	6823      	ldr	r3, [r4, #0]
 8011da2:	011b      	lsls	r3, r3, #4
 8011da4:	d510      	bpl.n	8011dc8 <RCCEx_PLLSAI1_Config+0xfc>
        __HAL_RCC_PLLSAI1CLKOUT_ENABLE(PllSai1->PLLSAI1ClockOut);
 8011da6:	6923      	ldr	r3, [r4, #16]
 8011da8:	69aa      	ldr	r2, [r5, #24]
 8011daa:	4313      	orrs	r3, r2
 8011dac:	6123      	str	r3, [r4, #16]
 8011dae:	2000      	movs	r0, #0
  return status;
 8011db0:	e7e3      	b.n	8011d7a <RCCEx_PLLSAI1_Config+0xae>
        MODIFY_REG(RCC->PLLSAI1CFGR,
 8011db2:	6969      	ldr	r1, [r5, #20]
 8011db4:	f023 63c0 	bic.w	r3, r3, #100663296	@ 0x6000000
 8011db8:	0849      	lsrs	r1, r1, #1
 8011dba:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8011dbe:	3901      	subs	r1, #1
 8011dc0:	4313      	orrs	r3, r2
 8011dc2:	ea43 6341 	orr.w	r3, r3, r1, lsl #25
 8011dc6:	e7e3      	b.n	8011d90 <RCCEx_PLLSAI1_Config+0xc4>
        if((HAL_GetTick() - tickstart) > PLLSAI1_TIMEOUT_VALUE)
 8011dc8:	f7ff fa06 	bl	80111d8 <HAL_GetTick>
 8011dcc:	1b80      	subs	r0, r0, r6
 8011dce:	2802      	cmp	r0, #2
 8011dd0:	d9e6      	bls.n	8011da0 <RCCEx_PLLSAI1_Config+0xd4>
 8011dd2:	e7d1      	b.n	8011d78 <RCCEx_PLLSAI1_Config+0xac>
 8011dd4:	40021000 	.word	0x40021000

08011dd8 <RCCEx_PLLSAI2_Config>:
  * @note   PLLSAI2 is temporary disable to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLLSAI2_Config(RCC_PLLSAI2InitTypeDef *PllSai2, uint32_t Divider)
{
 8011dd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLLSAI2M_VALUE(PllSai2->PLLSAI2M));
  assert_param(IS_RCC_PLLSAI2N_VALUE(PllSai2->PLLSAI2N));
  assert_param(IS_RCC_PLLSAI2CLOCKOUT_VALUE(PllSai2->PLLSAI2ClockOut));

  /* Check that PLLSAI2 clock source and divider M can be applied */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_NONE)
 8011dda:	4c3b      	ldr	r4, [pc, #236]	@ (8011ec8 <RCCEx_PLLSAI2_Config+0xf0>)
 8011ddc:	68e3      	ldr	r3, [r4, #12]
 8011dde:	079b      	lsls	r3, r3, #30
{
 8011de0:	4605      	mov	r5, r0
 8011de2:	460e      	mov	r6, r1
  {
    /* PLL clock source and divider M already set, check that no request for change  */
    if((__HAL_RCC_GET_PLL_OSCSOURCE() != PllSai2->PLLSAI2Source)
 8011de4:	6800      	ldr	r0, [r0, #0]
  if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_NONE)
 8011de6:	d026      	beq.n	8011e36 <RCCEx_PLLSAI2_Config+0x5e>
    if((__HAL_RCC_GET_PLL_OSCSOURCE() != PllSai2->PLLSAI2Source)
 8011de8:	68e3      	ldr	r3, [r4, #12]
 8011dea:	f003 0303 	and.w	r3, r3, #3
 8011dee:	4283      	cmp	r3, r0
 8011df0:	d138      	bne.n	8011e64 <RCCEx_PLLSAI2_Config+0x8c>
       ||
 8011df2:	2b00      	cmp	r3, #0
 8011df4:	d036      	beq.n	8011e64 <RCCEx_PLLSAI2_Config+0x8c>
       (PllSai2->PLLSAI2Source == RCC_PLLSOURCE_NONE)
#if !defined(RCC_PLLSAI2M_DIV_1_16_SUPPORT)
       ||
       (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U) != PllSai2->PLLSAI2M)
 8011df6:	68e3      	ldr	r3, [r4, #12]
       ||
 8011df8:	686a      	ldr	r2, [r5, #4]
       (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U) != PllSai2->PLLSAI2M)
 8011dfa:	f3c3 1302 	ubfx	r3, r3, #4, #3
 8011dfe:	3301      	adds	r3, #1
       ||
 8011e00:	4293      	cmp	r3, r2
 8011e02:	d12f      	bne.n	8011e64 <RCCEx_PLLSAI2_Config+0x8c>
  }

  if(status == HAL_OK)
  {
    /* Disable the PLLSAI2 */
    __HAL_RCC_PLLSAI2_DISABLE();
 8011e04:	6823      	ldr	r3, [r4, #0]
 8011e06:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8011e0a:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8011e0c:	f7ff f9e4 	bl	80111d8 <HAL_GetTick>
 8011e10:	4607      	mov	r7, r0

    /* Wait till PLLSAI2 is ready to be updated */
    while(READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) != 0U)
 8011e12:	6823      	ldr	r3, [r4, #0]
 8011e14:	009a      	lsls	r2, r3, #2
 8011e16:	d42e      	bmi.n	8011e76 <RCCEx_PLLSAI2_Config+0x9e>
        MODIFY_REG(RCC->PLLSAI2CFGR,
                   RCC_PLLSAI2CFGR_PLLSAI2N | RCC_PLLSAI2CFGR_PLLSAI2PDIV,
                   (PllSai2->PLLSAI2N << RCC_PLLSAI2CFGR_PLLSAI2N_Pos) |
                   (PllSai2->PLLSAI2P << RCC_PLLSAI2CFGR_PLLSAI2PDIV_Pos));
#else
        MODIFY_REG(RCC->PLLSAI2CFGR,
 8011e18:	68a9      	ldr	r1, [r5, #8]
 8011e1a:	0209      	lsls	r1, r1, #8
      if(Divider == DIVIDER_P_UPDATE)
 8011e1c:	b396      	cbz	r6, 8011e84 <RCCEx_PLLSAI2_Config+0xac>
                   (PllSai2->PLLSAI2N << RCC_PLLSAI2CFGR_PLLSAI2N_Pos) |
                   (((PllSai2->PLLSAI2R >> 1U) - 1U) << RCC_PLLSAI2CFGR_PLLSAI2R_Pos) |
                   ((PllSai2->PLLSAI2M - 1U) << RCC_PLLSAI2CFGR_PLLSAI2M_Pos));
#else
        /* Configure the PLLSAI2 Division factor R and Multiplication factor N*/
        MODIFY_REG(RCC->PLLSAI2CFGR,
 8011e1e:	6963      	ldr	r3, [r4, #20]
 8011e20:	692a      	ldr	r2, [r5, #16]
 8011e22:	f023 63c0 	bic.w	r3, r3, #100663296	@ 0x6000000
 8011e26:	0852      	lsrs	r2, r2, #1
 8011e28:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8011e2c:	3a01      	subs	r2, #1
 8011e2e:	430b      	orrs	r3, r1
 8011e30:	ea43 6342 	orr.w	r3, r3, r2, lsl #25
 8011e34:	e030      	b.n	8011e98 <RCCEx_PLLSAI2_Config+0xc0>
    switch(PllSai2->PLLSAI2Source)
 8011e36:	2802      	cmp	r0, #2
 8011e38:	d010      	beq.n	8011e5c <RCCEx_PLLSAI2_Config+0x84>
 8011e3a:	2803      	cmp	r0, #3
 8011e3c:	d014      	beq.n	8011e68 <RCCEx_PLLSAI2_Config+0x90>
 8011e3e:	2801      	cmp	r0, #1
 8011e40:	d110      	bne.n	8011e64 <RCCEx_PLLSAI2_Config+0x8c>
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_MSIRDY))
 8011e42:	6823      	ldr	r3, [r4, #0]
 8011e44:	079f      	lsls	r7, r3, #30
 8011e46:	d51c      	bpl.n	8011e82 <RCCEx_PLLSAI2_Config+0xaa>
      MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM, PllSai2->PLLSAI2Source | (PllSai2->PLLSAI2M - 1U) << RCC_PLLCFGR_PLLM_Pos);
 8011e48:	68e3      	ldr	r3, [r4, #12]
 8011e4a:	686a      	ldr	r2, [r5, #4]
 8011e4c:	f023 0373 	bic.w	r3, r3, #115	@ 0x73
 8011e50:	3a01      	subs	r2, #1
 8011e52:	4303      	orrs	r3, r0
 8011e54:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8011e58:	60e3      	str	r3, [r4, #12]
  if(status == HAL_OK)
 8011e5a:	e7d3      	b.n	8011e04 <RCCEx_PLLSAI2_Config+0x2c>
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSIRDY))
 8011e5c:	6823      	ldr	r3, [r4, #0]
 8011e5e:	f413 6f80 	tst.w	r3, #1024	@ 0x400
        if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSEBYP))
 8011e62:	d1f1      	bne.n	8011e48 <RCCEx_PLLSAI2_Config+0x70>
 8011e64:	2001      	movs	r0, #1
 8011e66:	e00c      	b.n	8011e82 <RCCEx_PLLSAI2_Config+0xaa>
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSERDY))
 8011e68:	6823      	ldr	r3, [r4, #0]
 8011e6a:	0399      	lsls	r1, r3, #14
 8011e6c:	d4ec      	bmi.n	8011e48 <RCCEx_PLLSAI2_Config+0x70>
        if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSEBYP))
 8011e6e:	6823      	ldr	r3, [r4, #0]
 8011e70:	f413 2f80 	tst.w	r3, #262144	@ 0x40000
 8011e74:	e7f5      	b.n	8011e62 <RCCEx_PLLSAI2_Config+0x8a>
      if((HAL_GetTick() - tickstart) > PLLSAI2_TIMEOUT_VALUE)
 8011e76:	f7ff f9af 	bl	80111d8 <HAL_GetTick>
 8011e7a:	1bc0      	subs	r0, r0, r7
 8011e7c:	2802      	cmp	r0, #2
 8011e7e:	d9c8      	bls.n	8011e12 <RCCEx_PLLSAI2_Config+0x3a>
 8011e80:	2003      	movs	r0, #3
      }
    }
  }

  return status;
}
 8011e82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        MODIFY_REG(RCC->PLLSAI2CFGR,
 8011e84:	6963      	ldr	r3, [r4, #20]
 8011e86:	68ea      	ldr	r2, [r5, #12]
 8011e88:	f423 331f 	bic.w	r3, r3, #162816	@ 0x27c00
 8011e8c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8011e90:	0912      	lsrs	r2, r2, #4
 8011e92:	430b      	orrs	r3, r1
 8011e94:	ea43 4342 	orr.w	r3, r3, r2, lsl #17
        MODIFY_REG(RCC->PLLSAI2CFGR,
 8011e98:	6163      	str	r3, [r4, #20]
      __HAL_RCC_PLLSAI2_ENABLE();
 8011e9a:	6823      	ldr	r3, [r4, #0]
 8011e9c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8011ea0:	6023      	str	r3, [r4, #0]
      tickstart = HAL_GetTick();
 8011ea2:	f7ff f999 	bl	80111d8 <HAL_GetTick>
 8011ea6:	4606      	mov	r6, r0
      while(READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) == 0U)
 8011ea8:	6823      	ldr	r3, [r4, #0]
 8011eaa:	009b      	lsls	r3, r3, #2
 8011eac:	d505      	bpl.n	8011eba <RCCEx_PLLSAI2_Config+0xe2>
        __HAL_RCC_PLLSAI2CLKOUT_ENABLE(PllSai2->PLLSAI2ClockOut);
 8011eae:	6963      	ldr	r3, [r4, #20]
 8011eb0:	696a      	ldr	r2, [r5, #20]
 8011eb2:	4313      	orrs	r3, r2
 8011eb4:	6163      	str	r3, [r4, #20]
 8011eb6:	2000      	movs	r0, #0
  return status;
 8011eb8:	e7e3      	b.n	8011e82 <RCCEx_PLLSAI2_Config+0xaa>
        if((HAL_GetTick() - tickstart) > PLLSAI2_TIMEOUT_VALUE)
 8011eba:	f7ff f98d 	bl	80111d8 <HAL_GetTick>
 8011ebe:	1b80      	subs	r0, r0, r6
 8011ec0:	2802      	cmp	r0, #2
 8011ec2:	d9f1      	bls.n	8011ea8 <RCCEx_PLLSAI2_Config+0xd0>
 8011ec4:	e7dc      	b.n	8011e80 <RCCEx_PLLSAI2_Config+0xa8>
 8011ec6:	bf00      	nop
 8011ec8:	40021000 	.word	0x40021000

08011ecc <HAL_RCCEx_PeriphCLKConfig>:
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1))
 8011ecc:	6803      	ldr	r3, [r0, #0]
{
 8011ece:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1))
 8011ed2:	051d      	lsls	r5, r3, #20
{
 8011ed4:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1))
 8011ed6:	d528      	bpl.n	8011f2a <HAL_RCCEx_PeriphCLKConfig+0x5e>
    switch(PeriphClkInit->Sai1ClockSelection)
 8011ed8:	6e41      	ldr	r1, [r0, #100]	@ 0x64
 8011eda:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 8011ede:	d026      	beq.n	8011f2e <HAL_RCCEx_PeriphCLKConfig+0x62>
 8011ee0:	d817      	bhi.n	8011f12 <HAL_RCCEx_PeriphCLKConfig+0x46>
 8011ee2:	b351      	cbz	r1, 8011f3a <HAL_RCCEx_PeriphCLKConfig+0x6e>
 8011ee4:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
 8011ee8:	d02e      	beq.n	8011f48 <HAL_RCCEx_PeriphCLKConfig+0x7c>
 8011eea:	2501      	movs	r5, #1
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2))
 8011eec:	6823      	ldr	r3, [r4, #0]
 8011eee:	04d8      	lsls	r0, r3, #19
 8011ef0:	d50d      	bpl.n	8011f0e <HAL_RCCEx_PeriphCLKConfig+0x42>
    switch(PeriphClkInit->Sai2ClockSelection)
 8011ef2:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
 8011ef4:	f1b1 7f00 	cmp.w	r1, #33554432	@ 0x2000000
 8011ef8:	f000 8148 	beq.w	801218c <HAL_RCCEx_PeriphCLKConfig+0x2c0>
 8011efc:	d829      	bhi.n	8011f52 <HAL_RCCEx_PeriphCLKConfig+0x86>
 8011efe:	2900      	cmp	r1, #0
 8011f00:	f000 814a 	beq.w	8012198 <HAL_RCCEx_PeriphCLKConfig+0x2cc>
 8011f04:	f1b1 7f80 	cmp.w	r1, #16777216	@ 0x1000000
 8011f08:	f000 814b 	beq.w	80121a2 <HAL_RCCEx_PeriphCLKConfig+0x2d6>
 8011f0c:	2501      	movs	r5, #1
 8011f0e:	462f      	mov	r7, r5
 8011f10:	e02f      	b.n	8011f72 <HAL_RCCEx_PeriphCLKConfig+0xa6>
    switch(PeriphClkInit->Sai1ClockSelection)
 8011f12:	f5b1 0f40 	cmp.w	r1, #12582912	@ 0xc00000
 8011f16:	d1e8      	bne.n	8011eea <HAL_RCCEx_PeriphCLKConfig+0x1e>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8011f18:	4aac      	ldr	r2, [pc, #688]	@ (80121cc <HAL_RCCEx_PeriphCLKConfig+0x300>)
 8011f1a:	6e61      	ldr	r1, [r4, #100]	@ 0x64
 8011f1c:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
 8011f20:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8011f24:	430b      	orrs	r3, r1
 8011f26:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 8011f2a:	2500      	movs	r5, #0
 8011f2c:	e7de      	b.n	8011eec <HAL_RCCEx_PeriphCLKConfig+0x20>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI3CLK);
 8011f2e:	4aa7      	ldr	r2, [pc, #668]	@ (80121cc <HAL_RCCEx_PeriphCLKConfig+0x300>)
 8011f30:	68d3      	ldr	r3, [r2, #12]
 8011f32:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8011f36:	60d3      	str	r3, [r2, #12]
    if(ret == HAL_OK)
 8011f38:	e7ee      	b.n	8011f18 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_P_UPDATE);
 8011f3a:	3004      	adds	r0, #4
 8011f3c:	f7ff fec6 	bl	8011ccc <RCCEx_PLLSAI1_Config>
      ret = RCCEx_PLLSAI2_Config(&(PeriphClkInit->PLLSAI2), DIVIDER_P_UPDATE);
 8011f40:	4605      	mov	r5, r0
    if(ret == HAL_OK)
 8011f42:	2800      	cmp	r0, #0
 8011f44:	d1d2      	bne.n	8011eec <HAL_RCCEx_PeriphCLKConfig+0x20>
 8011f46:	e7e7      	b.n	8011f18 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      ret = RCCEx_PLLSAI2_Config(&(PeriphClkInit->PLLSAI2), DIVIDER_P_UPDATE);
 8011f48:	2100      	movs	r1, #0
 8011f4a:	3020      	adds	r0, #32
 8011f4c:	f7ff ff44 	bl	8011dd8 <RCCEx_PLLSAI2_Config>
 8011f50:	e7f6      	b.n	8011f40 <HAL_RCCEx_PeriphCLKConfig+0x74>
    switch(PeriphClkInit->Sai2ClockSelection)
 8011f52:	f1b1 7f40 	cmp.w	r1, #50331648	@ 0x3000000
 8011f56:	d1d9      	bne.n	8011f0c <HAL_RCCEx_PeriphCLKConfig+0x40>
    switch(PeriphClkInit->Sai1ClockSelection)
 8011f58:	462f      	mov	r7, r5
    if(ret == HAL_OK)
 8011f5a:	2f00      	cmp	r7, #0
 8011f5c:	f040 8127 	bne.w	80121ae <HAL_RCCEx_PeriphCLKConfig+0x2e2>
      __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8011f60:	4a9a      	ldr	r2, [pc, #616]	@ (80121cc <HAL_RCCEx_PeriphCLKConfig+0x300>)
 8011f62:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
 8011f64:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
 8011f68:	f023 7340 	bic.w	r3, r3, #50331648	@ 0x3000000
 8011f6c:	430b      	orrs	r3, r1
 8011f6e:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
  if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8011f72:	6823      	ldr	r3, [r4, #0]
 8011f74:	0399      	lsls	r1, r3, #14
 8011f76:	d53a      	bpl.n	8011fee <HAL_RCCEx_PeriphCLKConfig+0x122>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 8011f78:	4e94      	ldr	r6, [pc, #592]	@ (80121cc <HAL_RCCEx_PeriphCLKConfig+0x300>)
 8011f7a:	6db3      	ldr	r3, [r6, #88]	@ 0x58
 8011f7c:	00da      	lsls	r2, r3, #3
 8011f7e:	f100 8118 	bmi.w	80121b2 <HAL_RCCEx_PeriphCLKConfig+0x2e6>
      __HAL_RCC_PWR_CLK_ENABLE();
 8011f82:	6db3      	ldr	r3, [r6, #88]	@ 0x58
 8011f84:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8011f88:	65b3      	str	r3, [r6, #88]	@ 0x58
 8011f8a:	6db3      	ldr	r3, [r6, #88]	@ 0x58
 8011f8c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8011f90:	9301      	str	r3, [sp, #4]
 8011f92:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8011f94:	f04f 0801 	mov.w	r8, #1
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8011f98:	f8df 9234 	ldr.w	r9, [pc, #564]	@ 80121d0 <HAL_RCCEx_PeriphCLKConfig+0x304>
 8011f9c:	f8d9 3000 	ldr.w	r3, [r9]
 8011fa0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8011fa4:	f8c9 3000 	str.w	r3, [r9]
    tickstart = HAL_GetTick();
 8011fa8:	f7ff f916 	bl	80111d8 <HAL_GetTick>
 8011fac:	4682      	mov	sl, r0
    while(READ_BIT(PWR->CR1, PWR_CR1_DBP) == 0U)
 8011fae:	f8d9 3000 	ldr.w	r3, [r9]
 8011fb2:	05db      	lsls	r3, r3, #23
 8011fb4:	f140 8100 	bpl.w	80121b8 <HAL_RCCEx_PeriphCLKConfig+0x2ec>
    if(ret == HAL_OK)
 8011fb8:	b98f      	cbnz	r7, 8011fde <HAL_RCCEx_PeriphCLKConfig+0x112>
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 8011fba:	f8d6 3090 	ldr.w	r3, [r6, #144]	@ 0x90
      if((tmpregister != RCC_RTCCLKSOURCE_NONE) && (tmpregister != PeriphClkInit->RTCClockSelection))
 8011fbe:	f8d4 2084 	ldr.w	r2, [r4, #132]	@ 0x84
 8011fc2:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 8011fc6:	f040 8105 	bne.w	80121d4 <HAL_RCCEx_PeriphCLKConfig+0x308>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8011fca:	f8d6 3090 	ldr.w	r3, [r6, #144]	@ 0x90
 8011fce:	f8d4 2084 	ldr.w	r2, [r4, #132]	@ 0x84
 8011fd2:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8011fd6:	4313      	orrs	r3, r2
 8011fd8:	f8c6 3090 	str.w	r3, [r6, #144]	@ 0x90
 8011fdc:	462f      	mov	r7, r5
    if(pwrclkchanged == SET)
 8011fde:	f1b8 0f00 	cmp.w	r8, #0
 8011fe2:	d003      	beq.n	8011fec <HAL_RCCEx_PeriphCLKConfig+0x120>
      __HAL_RCC_PWR_CLK_DISABLE();
 8011fe4:	6db3      	ldr	r3, [r6, #88]	@ 0x58
 8011fe6:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8011fea:	65b3      	str	r3, [r6, #88]	@ 0x58
 8011fec:	463d      	mov	r5, r7
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8011fee:	6823      	ldr	r3, [r4, #0]
 8011ff0:	07da      	lsls	r2, r3, #31
 8011ff2:	d508      	bpl.n	8012006 <HAL_RCCEx_PeriphCLKConfig+0x13a>
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8011ff4:	4975      	ldr	r1, [pc, #468]	@ (80121cc <HAL_RCCEx_PeriphCLKConfig+0x300>)
 8011ff6:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 8011ff8:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 8011ffc:	f022 0203 	bic.w	r2, r2, #3
 8012000:	4302      	orrs	r2, r0
 8012002:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8012006:	079f      	lsls	r7, r3, #30
 8012008:	d508      	bpl.n	801201c <HAL_RCCEx_PeriphCLKConfig+0x150>
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 801200a:	4970      	ldr	r1, [pc, #448]	@ (80121cc <HAL_RCCEx_PeriphCLKConfig+0x300>)
 801200c:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 801200e:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 8012012:	f022 020c 	bic.w	r2, r2, #12
 8012016:	4302      	orrs	r2, r0
 8012018:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 801201c:	075e      	lsls	r6, r3, #29
 801201e:	d508      	bpl.n	8012032 <HAL_RCCEx_PeriphCLKConfig+0x166>
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 8012020:	496a      	ldr	r1, [pc, #424]	@ (80121cc <HAL_RCCEx_PeriphCLKConfig+0x300>)
 8012022:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 8012024:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 8012028:	f022 0230 	bic.w	r2, r2, #48	@ 0x30
 801202c:	4302      	orrs	r2, r0
 801202e:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8012032:	0718      	lsls	r0, r3, #28
 8012034:	d508      	bpl.n	8012048 <HAL_RCCEx_PeriphCLKConfig+0x17c>
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 8012036:	4965      	ldr	r1, [pc, #404]	@ (80121cc <HAL_RCCEx_PeriphCLKConfig+0x300>)
 8012038:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 801203a:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 801203e:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 8012042:	4302      	orrs	r2, r0
 8012044:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8012048:	06d9      	lsls	r1, r3, #27
 801204a:	d508      	bpl.n	801205e <HAL_RCCEx_PeriphCLKConfig+0x192>
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 801204c:	495f      	ldr	r1, [pc, #380]	@ (80121cc <HAL_RCCEx_PeriphCLKConfig+0x300>)
 801204e:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
 8012050:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 8012054:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 8012058:	4302      	orrs	r2, r0
 801205a:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 801205e:	069a      	lsls	r2, r3, #26
 8012060:	d508      	bpl.n	8012074 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
    __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 8012062:	495a      	ldr	r1, [pc, #360]	@ (80121cc <HAL_RCCEx_PeriphCLKConfig+0x300>)
 8012064:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8012066:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 801206a:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 801206e:	4302      	orrs	r2, r0
 8012070:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 8012074:	059f      	lsls	r7, r3, #22
 8012076:	d508      	bpl.n	801208a <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8012078:	4954      	ldr	r1, [pc, #336]	@ (80121cc <HAL_RCCEx_PeriphCLKConfig+0x300>)
 801207a:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 801207c:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 8012080:	f422 2240 	bic.w	r2, r2, #786432	@ 0xc0000
 8012084:	4302      	orrs	r2, r0
 8012086:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == (RCC_PERIPHCLK_LPTIM2))
 801208a:	055e      	lsls	r6, r3, #21
 801208c:	d508      	bpl.n	80120a0 <HAL_RCCEx_PeriphCLKConfig+0x1d4>
    __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 801208e:	494f      	ldr	r1, [pc, #316]	@ (80121cc <HAL_RCCEx_PeriphCLKConfig+0x300>)
 8012090:	6e20      	ldr	r0, [r4, #96]	@ 0x60
 8012092:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 8012096:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 801209a:	4302      	orrs	r2, r0
 801209c:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 80120a0:	0658      	lsls	r0, r3, #25
 80120a2:	d508      	bpl.n	80120b6 <HAL_RCCEx_PeriphCLKConfig+0x1ea>
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 80120a4:	4949      	ldr	r1, [pc, #292]	@ (80121cc <HAL_RCCEx_PeriphCLKConfig+0x300>)
 80120a6:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 80120a8:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 80120ac:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 80120b0:	4302      	orrs	r2, r0
 80120b2:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 80120b6:	0619      	lsls	r1, r3, #24
 80120b8:	d508      	bpl.n	80120cc <HAL_RCCEx_PeriphCLKConfig+0x200>
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 80120ba:	4944      	ldr	r1, [pc, #272]	@ (80121cc <HAL_RCCEx_PeriphCLKConfig+0x300>)
 80120bc:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 80120be:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 80120c2:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 80120c6:	4302      	orrs	r2, r0
 80120c8:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 80120cc:	05da      	lsls	r2, r3, #23
 80120ce:	d508      	bpl.n	80120e2 <HAL_RCCEx_PeriphCLKConfig+0x216>
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 80120d0:	493e      	ldr	r1, [pc, #248]	@ (80121cc <HAL_RCCEx_PeriphCLKConfig+0x300>)
 80120d2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80120d4:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 80120d8:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 80120dc:	4302      	orrs	r2, r0
 80120de:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == (RCC_PERIPHCLK_USB))
 80120e2:	049f      	lsls	r7, r3, #18
 80120e4:	d510      	bpl.n	8012108 <HAL_RCCEx_PeriphCLKConfig+0x23c>
    __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 80120e6:	4a39      	ldr	r2, [pc, #228]	@ (80121cc <HAL_RCCEx_PeriphCLKConfig+0x300>)
 80120e8:	6ee1      	ldr	r1, [r4, #108]	@ 0x6c
 80120ea:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
 80120ee:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 80120f2:	430b      	orrs	r3, r1
    if(PeriphClkInit->UsbClockSelection == RCC_USBCLKSOURCE_PLL)
 80120f4:	f1b1 6f00 	cmp.w	r1, #134217728	@ 0x8000000
    __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 80120f8:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
    if(PeriphClkInit->UsbClockSelection == RCC_USBCLKSOURCE_PLL)
 80120fc:	f040 8092 	bne.w	8012224 <HAL_RCCEx_PeriphCLKConfig+0x358>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 8012100:	68d3      	ldr	r3, [r2, #12]
 8012102:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8012106:	60d3      	str	r3, [r2, #12]
 8012108:	462f      	mov	r7, r5
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == (RCC_PERIPHCLK_SDMMC1))
 801210a:	6823      	ldr	r3, [r4, #0]
 801210c:	031e      	lsls	r6, r3, #12
 801210e:	d510      	bpl.n	8012132 <HAL_RCCEx_PeriphCLKConfig+0x266>
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 8012110:	4a2e      	ldr	r2, [pc, #184]	@ (80121cc <HAL_RCCEx_PeriphCLKConfig+0x300>)
 8012112:	6f21      	ldr	r1, [r4, #112]	@ 0x70
 8012114:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
 8012118:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 801211c:	430b      	orrs	r3, r1
    if(PeriphClkInit->Sdmmc1ClockSelection == RCC_SDMMC1CLKSOURCE_PLL)   /* PLL "Q" ? */
 801211e:	f1b1 6f00 	cmp.w	r1, #134217728	@ 0x8000000
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 8012122:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
    if(PeriphClkInit->Sdmmc1ClockSelection == RCC_SDMMC1CLKSOURCE_PLL)   /* PLL "Q" ? */
 8012126:	f040 808a 	bne.w	801223e <HAL_RCCEx_PeriphCLKConfig+0x372>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 801212a:	68d3      	ldr	r3, [r2, #12]
 801212c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8012130:	60d3      	str	r3, [r2, #12]
 8012132:	463e      	mov	r6, r7
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == (RCC_PERIPHCLK_RNG))
 8012134:	6823      	ldr	r3, [r4, #0]
 8012136:	035d      	lsls	r5, r3, #13
 8012138:	d510      	bpl.n	801215c <HAL_RCCEx_PeriphCLKConfig+0x290>
    __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 801213a:	4a24      	ldr	r2, [pc, #144]	@ (80121cc <HAL_RCCEx_PeriphCLKConfig+0x300>)
 801213c:	6f61      	ldr	r1, [r4, #116]	@ 0x74
 801213e:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
 8012142:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 8012146:	430b      	orrs	r3, r1
    if(PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLL)
 8012148:	f1b1 6f00 	cmp.w	r1, #134217728	@ 0x8000000
    __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 801214c:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
    if(PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLL)
 8012150:	f040 8082 	bne.w	8012258 <HAL_RCCEx_PeriphCLKConfig+0x38c>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 8012154:	68d3      	ldr	r3, [r2, #12]
 8012156:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 801215a:	60d3      	str	r3, [r2, #12]
 801215c:	4635      	mov	r5, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 801215e:	6823      	ldr	r3, [r4, #0]
 8012160:	0458      	lsls	r0, r3, #17
 8012162:	f140 8089 	bpl.w	8012278 <HAL_RCCEx_PeriphCLKConfig+0x3ac>
    __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 8012166:	4919      	ldr	r1, [pc, #100]	@ (80121cc <HAL_RCCEx_PeriphCLKConfig+0x300>)
 8012168:	6fa2      	ldr	r2, [r4, #120]	@ 0x78
 801216a:	f8d1 3088 	ldr.w	r3, [r1, #136]	@ 0x88
 801216e:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 8012172:	4313      	orrs	r3, r2
    if(PeriphClkInit->AdcClockSelection == RCC_ADCCLKSOURCE_PLLSAI1)
 8012174:	f1b2 5f80 	cmp.w	r2, #268435456	@ 0x10000000
    __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 8012178:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
    if(PeriphClkInit->AdcClockSelection == RCC_ADCCLKSOURCE_PLLSAI1)
 801217c:	d179      	bne.n	8012272 <HAL_RCCEx_PeriphCLKConfig+0x3a6>
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_R_UPDATE);
 801217e:	2102      	movs	r1, #2
 8012180:	1d20      	adds	r0, r4, #4
 8012182:	f7ff fda3 	bl	8011ccc <RCCEx_PLLSAI1_Config>
      if(ret != HAL_OK)
 8012186:	2800      	cmp	r0, #0
 8012188:	d076      	beq.n	8012278 <HAL_RCCEx_PeriphCLKConfig+0x3ac>
 801218a:	e076      	b.n	801227a <HAL_RCCEx_PeriphCLKConfig+0x3ae>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI3CLK);
 801218c:	4a0f      	ldr	r2, [pc, #60]	@ (80121cc <HAL_RCCEx_PeriphCLKConfig+0x300>)
 801218e:	68d3      	ldr	r3, [r2, #12]
 8012190:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8012194:	60d3      	str	r3, [r2, #12]
      break;
 8012196:	e6df      	b.n	8011f58 <HAL_RCCEx_PeriphCLKConfig+0x8c>
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_P_UPDATE);
 8012198:	1d20      	adds	r0, r4, #4
 801219a:	f7ff fd97 	bl	8011ccc <RCCEx_PLLSAI1_Config>
      ret = RCCEx_PLLSAI2_Config(&(PeriphClkInit->PLLSAI2), DIVIDER_P_UPDATE);
 801219e:	4607      	mov	r7, r0
      break;
 80121a0:	e6db      	b.n	8011f5a <HAL_RCCEx_PeriphCLKConfig+0x8e>
      ret = RCCEx_PLLSAI2_Config(&(PeriphClkInit->PLLSAI2), DIVIDER_P_UPDATE);
 80121a2:	2100      	movs	r1, #0
 80121a4:	f104 0020 	add.w	r0, r4, #32
 80121a8:	f7ff fe16 	bl	8011dd8 <RCCEx_PLLSAI2_Config>
 80121ac:	e7f7      	b.n	801219e <HAL_RCCEx_PeriphCLKConfig+0x2d2>
      status = ret;
 80121ae:	463d      	mov	r5, r7
 80121b0:	e6df      	b.n	8011f72 <HAL_RCCEx_PeriphCLKConfig+0xa6>
    FlagStatus       pwrclkchanged = RESET;
 80121b2:	f04f 0800 	mov.w	r8, #0
 80121b6:	e6ef      	b.n	8011f98 <HAL_RCCEx_PeriphCLKConfig+0xcc>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80121b8:	f7ff f80e 	bl	80111d8 <HAL_GetTick>
 80121bc:	eba0 000a 	sub.w	r0, r0, sl
 80121c0:	2802      	cmp	r0, #2
 80121c2:	f67f aef4 	bls.w	8011fae <HAL_RCCEx_PeriphCLKConfig+0xe2>
        ret = HAL_TIMEOUT;
 80121c6:	2703      	movs	r7, #3
 80121c8:	e709      	b.n	8011fde <HAL_RCCEx_PeriphCLKConfig+0x112>
 80121ca:	bf00      	nop
 80121cc:	40021000 	.word	0x40021000
 80121d0:	40007000 	.word	0x40007000
      if((tmpregister != RCC_RTCCLKSOURCE_NONE) && (tmpregister != PeriphClkInit->RTCClockSelection))
 80121d4:	4293      	cmp	r3, r2
 80121d6:	f43f aef8 	beq.w	8011fca <HAL_RCCEx_PeriphCLKConfig+0xfe>
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 80121da:	f8d6 2090 	ldr.w	r2, [r6, #144]	@ 0x90
        __HAL_RCC_BACKUPRESET_FORCE();
 80121de:	f8d6 3090 	ldr.w	r3, [r6, #144]	@ 0x90
 80121e2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80121e6:	f8c6 3090 	str.w	r3, [r6, #144]	@ 0x90
        __HAL_RCC_BACKUPRESET_RELEASE();
 80121ea:	f8d6 3090 	ldr.w	r3, [r6, #144]	@ 0x90
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 80121ee:	f422 7140 	bic.w	r1, r2, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_RELEASE();
 80121f2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
      if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 80121f6:	07d0      	lsls	r0, r2, #31
        __HAL_RCC_BACKUPRESET_RELEASE();
 80121f8:	f8c6 3090 	str.w	r3, [r6, #144]	@ 0x90
        RCC->BDCR = tmpregister;
 80121fc:	f8c6 1090 	str.w	r1, [r6, #144]	@ 0x90
      if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 8012200:	f57f aee3 	bpl.w	8011fca <HAL_RCCEx_PeriphCLKConfig+0xfe>
        tickstart = HAL_GetTick();
 8012204:	f7fe ffe8 	bl	80111d8 <HAL_GetTick>
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8012208:	f241 3988 	movw	r9, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 801220c:	4607      	mov	r7, r0
        while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 801220e:	f8d6 3090 	ldr.w	r3, [r6, #144]	@ 0x90
 8012212:	0799      	lsls	r1, r3, #30
 8012214:	f53f aed9 	bmi.w	8011fca <HAL_RCCEx_PeriphCLKConfig+0xfe>
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8012218:	f7fe ffde 	bl	80111d8 <HAL_GetTick>
 801221c:	1bc0      	subs	r0, r0, r7
 801221e:	4548      	cmp	r0, r9
 8012220:	d9f5      	bls.n	801220e <HAL_RCCEx_PeriphCLKConfig+0x342>
 8012222:	e7d0      	b.n	80121c6 <HAL_RCCEx_PeriphCLKConfig+0x2fa>
      if(PeriphClkInit->UsbClockSelection == RCC_USBCLKSOURCE_PLLSAI1)
 8012224:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
 8012228:	f47f af6e 	bne.w	8012108 <HAL_RCCEx_PeriphCLKConfig+0x23c>
        ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 801222c:	2101      	movs	r1, #1
 801222e:	1d20      	adds	r0, r4, #4
 8012230:	f7ff fd4c 	bl	8011ccc <RCCEx_PLLSAI1_Config>
        if(ret != HAL_OK)
 8012234:	4607      	mov	r7, r0
 8012236:	2800      	cmp	r0, #0
 8012238:	f43f af66 	beq.w	8012108 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 801223c:	e765      	b.n	801210a <HAL_RCCEx_PeriphCLKConfig+0x23e>
    else if(PeriphClkInit->Sdmmc1ClockSelection == RCC_SDMMC1CLKSOURCE_PLLSAI1)
 801223e:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
 8012242:	f47f af76 	bne.w	8012132 <HAL_RCCEx_PeriphCLKConfig+0x266>
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 8012246:	2101      	movs	r1, #1
 8012248:	1d20      	adds	r0, r4, #4
 801224a:	f7ff fd3f 	bl	8011ccc <RCCEx_PLLSAI1_Config>
      if(ret != HAL_OK)
 801224e:	4606      	mov	r6, r0
 8012250:	2800      	cmp	r0, #0
 8012252:	f43f af6e 	beq.w	8012132 <HAL_RCCEx_PeriphCLKConfig+0x266>
 8012256:	e76d      	b.n	8012134 <HAL_RCCEx_PeriphCLKConfig+0x268>
    else if(PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLLSAI1)
 8012258:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
 801225c:	f47f af7e 	bne.w	801215c <HAL_RCCEx_PeriphCLKConfig+0x290>
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 8012260:	2101      	movs	r1, #1
 8012262:	1d20      	adds	r0, r4, #4
 8012264:	f7ff fd32 	bl	8011ccc <RCCEx_PLLSAI1_Config>
      if(ret != HAL_OK)
 8012268:	4605      	mov	r5, r0
 801226a:	2800      	cmp	r0, #0
 801226c:	f43f af76 	beq.w	801215c <HAL_RCCEx_PeriphCLKConfig+0x290>
 8012270:	e775      	b.n	801215e <HAL_RCCEx_PeriphCLKConfig+0x292>
    else if(PeriphClkInit->AdcClockSelection == RCC_ADCCLKSOURCE_PLLSAI2)
 8012272:	f1b2 5f00 	cmp.w	r2, #536870912	@ 0x20000000
 8012276:	d01b      	beq.n	80122b0 <HAL_RCCEx_PeriphCLKConfig+0x3e4>
 8012278:	4628      	mov	r0, r5
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
 801227a:	6822      	ldr	r2, [r4, #0]
 801227c:	0411      	lsls	r1, r2, #16
 801227e:	d508      	bpl.n	8012292 <HAL_RCCEx_PeriphCLKConfig+0x3c6>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
 8012280:	490e      	ldr	r1, [pc, #56]	@ (80122bc <HAL_RCCEx_PeriphCLKConfig+0x3f0>)
 8012282:	6fe5      	ldr	r5, [r4, #124]	@ 0x7c
 8012284:	f8d1 3088 	ldr.w	r3, [r1, #136]	@ 0x88
 8012288:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 801228c:	432b      	orrs	r3, r5
 801228e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 8012292:	03d3      	lsls	r3, r2, #15
 8012294:	d509      	bpl.n	80122aa <HAL_RCCEx_PeriphCLKConfig+0x3de>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 8012296:	4a09      	ldr	r2, [pc, #36]	@ (80122bc <HAL_RCCEx_PeriphCLKConfig+0x3f0>)
 8012298:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
 801229c:	f8d2 3088 	ldr.w	r3, [r2, #136]	@ 0x88
 80122a0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80122a4:	430b      	orrs	r3, r1
 80122a6:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
}
 80122aa:	b002      	add	sp, #8
 80122ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      ret = RCCEx_PLLSAI2_Config(&(PeriphClkInit->PLLSAI2), DIVIDER_R_UPDATE);
 80122b0:	2102      	movs	r1, #2
 80122b2:	f104 0020 	add.w	r0, r4, #32
 80122b6:	f7ff fd8f 	bl	8011dd8 <RCCEx_PLLSAI2_Config>
 80122ba:	e764      	b.n	8012186 <HAL_RCCEx_PeriphCLKConfig+0x2ba>
 80122bc:	40021000 	.word	0x40021000

080122c0 <UART_EndRxTransfer>:
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
#if defined(USART_CR1_FIFOEN)
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
#else
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80122c0:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80122c2:	e852 3f00 	ldrex	r3, [r2]
 80122c6:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80122ca:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 80122ce:	6802      	ldr	r2, [r0, #0]
 80122d0:	2900      	cmp	r1, #0
 80122d2:	d1f5      	bne.n	80122c0 <UART_EndRxTransfer>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80122d4:	f102 0308 	add.w	r3, r2, #8
 80122d8:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80122dc:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80122e0:	f102 0c08 	add.w	ip, r2, #8
 80122e4:	e84c 3100 	strex	r1, r3, [ip]
 80122e8:	2900      	cmp	r1, #0
 80122ea:	d1f3      	bne.n	80122d4 <UART_EndRxTransfer+0x14>
#endif /* USART_CR1_FIFOEN */

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80122ec:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 80122ee:	2b01      	cmp	r3, #1
 80122f0:	d107      	bne.n	8012302 <UART_EndRxTransfer+0x42>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80122f2:	e852 3f00 	ldrex	r3, [r2]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80122f6:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80122fa:	e842 3100 	strex	r1, r3, [r2]
 80122fe:	2900      	cmp	r1, #0
 8012300:	d1f7      	bne.n	80122f2 <UART_EndRxTransfer+0x32>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8012302:	2320      	movs	r3, #32
 8012304:	f8c0 3080 	str.w	r3, [r0, #128]	@ 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8012308:	2300      	movs	r3, #0
 801230a:	6603      	str	r3, [r0, #96]	@ 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 801230c:	6683      	str	r3, [r0, #104]	@ 0x68
}
 801230e:	4770      	bx	lr

08012310 <UART_SetConfig>:
{
 8012310:	b538      	push	{r3, r4, r5, lr}
 8012312:	4604      	mov	r4, r0
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8012314:	69c0      	ldr	r0, [r0, #28]
 8012316:	6921      	ldr	r1, [r4, #16]
 8012318:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 801231a:	6823      	ldr	r3, [r4, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 801231c:	430a      	orrs	r2, r1
 801231e:	6961      	ldr	r1, [r4, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8012320:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8012322:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8012324:	4974      	ldr	r1, [pc, #464]	@ (80124f8 <UART_SetConfig+0x1e8>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8012326:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8012328:	4029      	ands	r1, r5
 801232a:	430a      	orrs	r2, r1
 801232c:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 801232e:	685a      	ldr	r2, [r3, #4]
 8012330:	68e1      	ldr	r1, [r4, #12]
 8012332:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8012336:	430a      	orrs	r2, r1
 8012338:	605a      	str	r2, [r3, #4]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
 801233a:	4a70      	ldr	r2, [pc, #448]	@ (80124fc <UART_SetConfig+0x1ec>)
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 801233c:	69a1      	ldr	r1, [r4, #24]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
 801233e:	4293      	cmp	r3, r2
    tmpreg |= huart->Init.OneBitSampling;
 8012340:	bf1c      	itt	ne
 8012342:	6a22      	ldrne	r2, [r4, #32]
 8012344:	4311      	orrne	r1, r2
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8012346:	689a      	ldr	r2, [r3, #8]
 8012348:	f422 6230 	bic.w	r2, r2, #2816	@ 0xb00
 801234c:	430a      	orrs	r2, r1
 801234e:	609a      	str	r2, [r3, #8]
  UART_GETCLOCKSOURCE(huart, clocksource);
 8012350:	4a6b      	ldr	r2, [pc, #428]	@ (8012500 <UART_SetConfig+0x1f0>)
 8012352:	4293      	cmp	r3, r2
 8012354:	d12a      	bne.n	80123ac <UART_SetConfig+0x9c>
 8012356:	4b6b      	ldr	r3, [pc, #428]	@ (8012504 <UART_SetConfig+0x1f4>)
 8012358:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 801235c:	f003 0303 	and.w	r3, r3, #3
 8012360:	2b02      	cmp	r3, #2
 8012362:	f000 80c1 	beq.w	80124e8 <UART_SetConfig+0x1d8>
 8012366:	2b03      	cmp	r3, #3
 8012368:	f000 80b1 	beq.w	80124ce <UART_SetConfig+0x1be>
 801236c:	2b01      	cmp	r3, #1
 801236e:	f000 80b5 	beq.w	80124dc <UART_SetConfig+0x1cc>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8012372:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 8012376:	f040 80bc 	bne.w	80124f2 <UART_SetConfig+0x1e2>
        pclk = HAL_RCC_GetPCLK2Freq();
 801237a:	f7ff fc95 	bl	8011ca8 <HAL_RCC_GetPCLK2Freq>
    if (pclk != 0U)
 801237e:	2800      	cmp	r0, #0
 8012380:	d06f      	beq.n	8012462 <UART_SetConfig+0x152>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8012382:	6862      	ldr	r2, [r4, #4]
 8012384:	0853      	lsrs	r3, r2, #1
 8012386:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801238a:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 801238e:	f64f 72ef 	movw	r2, #65519	@ 0xffef
 8012392:	f1a3 0110 	sub.w	r1, r3, #16
 8012396:	4291      	cmp	r1, r2
 8012398:	d81f      	bhi.n	80123da <UART_SetConfig+0xca>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 801239a:	f023 020f 	bic.w	r2, r3, #15
        huart->Instance->BRR = brrtemp;
 801239e:	6821      	ldr	r1, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 80123a0:	b292      	uxth	r2, r2
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 80123a2:	f3c3 0342 	ubfx	r3, r3, #1, #3
        huart->Instance->BRR = brrtemp;
 80123a6:	4313      	orrs	r3, r2
 80123a8:	60cb      	str	r3, [r1, #12]
 80123aa:	e05a      	b.n	8012462 <UART_SetConfig+0x152>
  UART_GETCLOCKSOURCE(huart, clocksource);
 80123ac:	4a56      	ldr	r2, [pc, #344]	@ (8012508 <UART_SetConfig+0x1f8>)
 80123ae:	4293      	cmp	r3, r2
 80123b0:	d115      	bne.n	80123de <UART_SetConfig+0xce>
 80123b2:	4b54      	ldr	r3, [pc, #336]	@ (8012504 <UART_SetConfig+0x1f4>)
 80123b4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80123b8:	f003 030c 	and.w	r3, r3, #12
 80123bc:	2b08      	cmp	r3, #8
 80123be:	f000 8093 	beq.w	80124e8 <UART_SetConfig+0x1d8>
 80123c2:	d808      	bhi.n	80123d6 <UART_SetConfig+0xc6>
 80123c4:	2b00      	cmp	r3, #0
 80123c6:	f040 8089 	bne.w	80124dc <UART_SetConfig+0x1cc>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80123ca:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 80123ce:	d169      	bne.n	80124a4 <UART_SetConfig+0x194>
        pclk = HAL_RCC_GetPCLK1Freq();
 80123d0:	f7ff fc58 	bl	8011c84 <HAL_RCC_GetPCLK1Freq>
        break;
 80123d4:	e7d3      	b.n	801237e <UART_SetConfig+0x6e>
  UART_GETCLOCKSOURCE(huart, clocksource);
 80123d6:	2b0c      	cmp	r3, #12
 80123d8:	d079      	beq.n	80124ce <UART_SetConfig+0x1be>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80123da:	2001      	movs	r0, #1
 80123dc:	e042      	b.n	8012464 <UART_SetConfig+0x154>
  UART_GETCLOCKSOURCE(huart, clocksource);
 80123de:	4a4b      	ldr	r2, [pc, #300]	@ (801250c <UART_SetConfig+0x1fc>)
 80123e0:	4293      	cmp	r3, r2
 80123e2:	d109      	bne.n	80123f8 <UART_SetConfig+0xe8>
 80123e4:	4b47      	ldr	r3, [pc, #284]	@ (8012504 <UART_SetConfig+0x1f4>)
 80123e6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80123ea:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 80123ee:	2b20      	cmp	r3, #32
 80123f0:	d07a      	beq.n	80124e8 <UART_SetConfig+0x1d8>
 80123f2:	d9e7      	bls.n	80123c4 <UART_SetConfig+0xb4>
 80123f4:	2b30      	cmp	r3, #48	@ 0x30
 80123f6:	e7ef      	b.n	80123d8 <UART_SetConfig+0xc8>
 80123f8:	4a45      	ldr	r2, [pc, #276]	@ (8012510 <UART_SetConfig+0x200>)
 80123fa:	4293      	cmp	r3, r2
 80123fc:	d109      	bne.n	8012412 <UART_SetConfig+0x102>
 80123fe:	4b41      	ldr	r3, [pc, #260]	@ (8012504 <UART_SetConfig+0x1f4>)
 8012400:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8012404:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 8012408:	2b80      	cmp	r3, #128	@ 0x80
 801240a:	d06d      	beq.n	80124e8 <UART_SetConfig+0x1d8>
 801240c:	d9da      	bls.n	80123c4 <UART_SetConfig+0xb4>
 801240e:	2bc0      	cmp	r3, #192	@ 0xc0
 8012410:	e7e2      	b.n	80123d8 <UART_SetConfig+0xc8>
 8012412:	4a40      	ldr	r2, [pc, #256]	@ (8012514 <UART_SetConfig+0x204>)
 8012414:	4293      	cmp	r3, r2
 8012416:	d10b      	bne.n	8012430 <UART_SetConfig+0x120>
 8012418:	4b3a      	ldr	r3, [pc, #232]	@ (8012504 <UART_SetConfig+0x1f4>)
 801241a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 801241e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8012422:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8012426:	d05f      	beq.n	80124e8 <UART_SetConfig+0x1d8>
 8012428:	d9cc      	bls.n	80123c4 <UART_SetConfig+0xb4>
 801242a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801242e:	e7d3      	b.n	80123d8 <UART_SetConfig+0xc8>
 8012430:	4a32      	ldr	r2, [pc, #200]	@ (80124fc <UART_SetConfig+0x1ec>)
 8012432:	4293      	cmp	r3, r2
 8012434:	d1d1      	bne.n	80123da <UART_SetConfig+0xca>
 8012436:	4b33      	ldr	r3, [pc, #204]	@ (8012504 <UART_SetConfig+0x1f4>)
 8012438:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 801243c:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8012440:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8012444:	d012      	beq.n	801246c <UART_SetConfig+0x15c>
 8012446:	d803      	bhi.n	8012450 <UART_SetConfig+0x140>
 8012448:	b943      	cbnz	r3, 801245c <UART_SetConfig+0x14c>
        pclk = HAL_RCC_GetPCLK1Freq();
 801244a:	f7ff fc1b 	bl	8011c84 <HAL_RCC_GetPCLK1Freq>
        break;
 801244e:	e007      	b.n	8012460 <UART_SetConfig+0x150>
  UART_GETCLOCKSOURCE(huart, clocksource);
 8012450:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8012454:	d1c1      	bne.n	80123da <UART_SetConfig+0xca>
 8012456:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 801245a:	e008      	b.n	801246e <UART_SetConfig+0x15e>
        pclk = HAL_RCC_GetSysClockFreq();
 801245c:	f7ff f89a 	bl	8011594 <HAL_RCC_GetSysClockFreq>
    if (pclk != 0U)
 8012460:	b928      	cbnz	r0, 801246e <UART_SetConfig+0x15e>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8012462:	2000      	movs	r0, #0
  huart->RxISR = NULL;
 8012464:	2300      	movs	r3, #0
  huart->TxISR = NULL;
 8012466:	e9c4 331a 	strd	r3, r3, [r4, #104]	@ 0x68
}
 801246a:	bd38      	pop	{r3, r4, r5, pc}
        pclk = (uint32_t) HSI_VALUE;
 801246c:	482a      	ldr	r0, [pc, #168]	@ (8012518 <UART_SetConfig+0x208>)
      if ((pclk < (3U * huart->Init.BaudRate)) ||
 801246e:	6862      	ldr	r2, [r4, #4]
 8012470:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 8012474:	4283      	cmp	r3, r0
 8012476:	d8b0      	bhi.n	80123da <UART_SetConfig+0xca>
 8012478:	ebb0 3f02 	cmp.w	r0, r2, lsl #12
 801247c:	d8ad      	bhi.n	80123da <UART_SetConfig+0xca>
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate));
 801247e:	0851      	lsrs	r1, r2, #1
 8012480:	2300      	movs	r3, #0
 8012482:	468c      	mov	ip, r1
 8012484:	f44f 7580 	mov.w	r5, #256	@ 0x100
 8012488:	4619      	mov	r1, r3
 801248a:	fbe0 c105 	umlal	ip, r1, r0, r5
 801248e:	4660      	mov	r0, ip
 8012490:	f7fe fac2 	bl	8010a18 <__aeabi_uldivmod>
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 8012494:	4b21      	ldr	r3, [pc, #132]	@ (801251c <UART_SetConfig+0x20c>)
 8012496:	f5a0 7240 	sub.w	r2, r0, #768	@ 0x300
 801249a:	429a      	cmp	r2, r3
 801249c:	d89d      	bhi.n	80123da <UART_SetConfig+0xca>
          huart->Instance->BRR = usartdiv;
 801249e:	6823      	ldr	r3, [r4, #0]
 80124a0:	60d8      	str	r0, [r3, #12]
 80124a2:	e7de      	b.n	8012462 <UART_SetConfig+0x152>
        pclk = HAL_RCC_GetPCLK1Freq();
 80124a4:	f7ff fbee 	bl	8011c84 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 80124a8:	2800      	cmp	r0, #0
 80124aa:	d0da      	beq.n	8012462 <UART_SetConfig+0x152>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 80124ac:	6862      	ldr	r2, [r4, #4]
 80124ae:	eb00 0352 	add.w	r3, r0, r2, lsr #1
 80124b2:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 80124b6:	f64f 72ef 	movw	r2, #65519	@ 0xffef
 80124ba:	f1a3 0110 	sub.w	r1, r3, #16
 80124be:	4291      	cmp	r1, r2
 80124c0:	d88b      	bhi.n	80123da <UART_SetConfig+0xca>
        huart->Instance->BRR = (uint16_t)usartdiv;
 80124c2:	6822      	ldr	r2, [r4, #0]
 80124c4:	60d3      	str	r3, [r2, #12]
 80124c6:	e7cc      	b.n	8012462 <UART_SetConfig+0x152>
        pclk = HAL_RCC_GetSysClockFreq();
 80124c8:	f7ff f864 	bl	8011594 <HAL_RCC_GetSysClockFreq>
        break;
 80124cc:	e7ec      	b.n	80124a8 <UART_SetConfig+0x198>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80124ce:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 80124d2:	f43f af56 	beq.w	8012382 <UART_SetConfig+0x72>
        pclk = (uint32_t) LSE_VALUE;
 80124d6:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 80124da:	e7e7      	b.n	80124ac <UART_SetConfig+0x19c>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80124dc:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 80124e0:	d1f2      	bne.n	80124c8 <UART_SetConfig+0x1b8>
        pclk = HAL_RCC_GetSysClockFreq();
 80124e2:	f7ff f857 	bl	8011594 <HAL_RCC_GetSysClockFreq>
        break;
 80124e6:	e74a      	b.n	801237e <UART_SetConfig+0x6e>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80124e8:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 80124ec:	480a      	ldr	r0, [pc, #40]	@ (8012518 <UART_SetConfig+0x208>)
 80124ee:	d1dd      	bne.n	80124ac <UART_SetConfig+0x19c>
 80124f0:	e747      	b.n	8012382 <UART_SetConfig+0x72>
        pclk = HAL_RCC_GetPCLK2Freq();
 80124f2:	f7ff fbd9 	bl	8011ca8 <HAL_RCC_GetPCLK2Freq>
        break;
 80124f6:	e7d7      	b.n	80124a8 <UART_SetConfig+0x198>
 80124f8:	efff69f3 	.word	0xefff69f3
 80124fc:	40008000 	.word	0x40008000
 8012500:	40013800 	.word	0x40013800
 8012504:	40021000 	.word	0x40021000
 8012508:	40004400 	.word	0x40004400
 801250c:	40004800 	.word	0x40004800
 8012510:	40004c00 	.word	0x40004c00
 8012514:	40005000 	.word	0x40005000
 8012518:	00f42400 	.word	0x00f42400
 801251c:	000ffcff 	.word	0x000ffcff

08012520 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8012520:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8012522:	071a      	lsls	r2, r3, #28
{
 8012524:	b510      	push	{r4, lr}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8012526:	d506      	bpl.n	8012536 <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8012528:	6801      	ldr	r1, [r0, #0]
 801252a:	6b44      	ldr	r4, [r0, #52]	@ 0x34
 801252c:	684a      	ldr	r2, [r1, #4]
 801252e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8012532:	4322      	orrs	r2, r4
 8012534:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8012536:	07dc      	lsls	r4, r3, #31
 8012538:	d506      	bpl.n	8012548 <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 801253a:	6801      	ldr	r1, [r0, #0]
 801253c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 801253e:	684a      	ldr	r2, [r1, #4]
 8012540:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
 8012544:	4322      	orrs	r2, r4
 8012546:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8012548:	0799      	lsls	r1, r3, #30
 801254a:	d506      	bpl.n	801255a <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 801254c:	6801      	ldr	r1, [r0, #0]
 801254e:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
 8012550:	684a      	ldr	r2, [r1, #4]
 8012552:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8012556:	4322      	orrs	r2, r4
 8012558:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 801255a:	075a      	lsls	r2, r3, #29
 801255c:	d506      	bpl.n	801256c <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 801255e:	6801      	ldr	r1, [r0, #0]
 8012560:	6b04      	ldr	r4, [r0, #48]	@ 0x30
 8012562:	684a      	ldr	r2, [r1, #4]
 8012564:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8012568:	4322      	orrs	r2, r4
 801256a:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 801256c:	06dc      	lsls	r4, r3, #27
 801256e:	d506      	bpl.n	801257e <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8012570:	6801      	ldr	r1, [r0, #0]
 8012572:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 8012574:	688a      	ldr	r2, [r1, #8]
 8012576:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 801257a:	4322      	orrs	r2, r4
 801257c:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 801257e:	0699      	lsls	r1, r3, #26
 8012580:	d506      	bpl.n	8012590 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8012582:	6801      	ldr	r1, [r0, #0]
 8012584:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8012586:	688a      	ldr	r2, [r1, #8]
 8012588:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 801258c:	4322      	orrs	r2, r4
 801258e:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8012590:	065a      	lsls	r2, r3, #25
 8012592:	d50f      	bpl.n	80125b4 <UART_AdvFeatureConfig+0x94>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8012594:	6801      	ldr	r1, [r0, #0]
 8012596:	6c04      	ldr	r4, [r0, #64]	@ 0x40
 8012598:	684a      	ldr	r2, [r1, #4]
 801259a:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
 801259e:	4322      	orrs	r2, r4
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 80125a0:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 80125a4:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 80125a6:	d105      	bne.n	80125b4 <UART_AdvFeatureConfig+0x94>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 80125a8:	684a      	ldr	r2, [r1, #4]
 80125aa:	6c44      	ldr	r4, [r0, #68]	@ 0x44
 80125ac:	f422 02c0 	bic.w	r2, r2, #6291456	@ 0x600000
 80125b0:	4322      	orrs	r2, r4
 80125b2:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 80125b4:	061b      	lsls	r3, r3, #24
 80125b6:	d506      	bpl.n	80125c6 <UART_AdvFeatureConfig+0xa6>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 80125b8:	6802      	ldr	r2, [r0, #0]
 80125ba:	6c81      	ldr	r1, [r0, #72]	@ 0x48
 80125bc:	6853      	ldr	r3, [r2, #4]
 80125be:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 80125c2:	430b      	orrs	r3, r1
 80125c4:	6053      	str	r3, [r2, #4]
}
 80125c6:	bd10      	pop	{r4, pc}

080125c8 <UART_WaitOnFlagUntilTimeout>:
{
 80125c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80125cc:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80125d0:	4604      	mov	r4, r0
 80125d2:	460d      	mov	r5, r1
 80125d4:	4617      	mov	r7, r2
 80125d6:	4698      	mov	r8, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80125d8:	6822      	ldr	r2, [r4, #0]
 80125da:	69d3      	ldr	r3, [r2, #28]
 80125dc:	ea35 0303 	bics.w	r3, r5, r3
 80125e0:	bf0c      	ite	eq
 80125e2:	2301      	moveq	r3, #1
 80125e4:	2300      	movne	r3, #0
 80125e6:	42bb      	cmp	r3, r7
 80125e8:	d001      	beq.n	80125ee <UART_WaitOnFlagUntilTimeout+0x26>
  return HAL_OK;
 80125ea:	2000      	movs	r0, #0
 80125ec:	e022      	b.n	8012634 <UART_WaitOnFlagUntilTimeout+0x6c>
    if (Timeout != HAL_MAX_DELAY)
 80125ee:	f1b9 3fff 	cmp.w	r9, #4294967295	@ 0xffffffff
 80125f2:	d0f2      	beq.n	80125da <UART_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80125f4:	f7fe fdf0 	bl	80111d8 <HAL_GetTick>
 80125f8:	eba0 0008 	sub.w	r0, r0, r8
 80125fc:	4548      	cmp	r0, r9
 80125fe:	d829      	bhi.n	8012654 <UART_WaitOnFlagUntilTimeout+0x8c>
 8012600:	f1b9 0f00 	cmp.w	r9, #0
 8012604:	d026      	beq.n	8012654 <UART_WaitOnFlagUntilTimeout+0x8c>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 8012606:	6821      	ldr	r1, [r4, #0]
 8012608:	680b      	ldr	r3, [r1, #0]
 801260a:	075a      	lsls	r2, r3, #29
 801260c:	d5e4      	bpl.n	80125d8 <UART_WaitOnFlagUntilTimeout+0x10>
 801260e:	2d80      	cmp	r5, #128	@ 0x80
 8012610:	d0e2      	beq.n	80125d8 <UART_WaitOnFlagUntilTimeout+0x10>
 8012612:	2d40      	cmp	r5, #64	@ 0x40
 8012614:	d0e0      	beq.n	80125d8 <UART_WaitOnFlagUntilTimeout+0x10>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 8012616:	69ce      	ldr	r6, [r1, #28]
 8012618:	f016 0608 	ands.w	r6, r6, #8
 801261c:	d00c      	beq.n	8012638 <UART_WaitOnFlagUntilTimeout+0x70>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 801261e:	2508      	movs	r5, #8
          UART_EndRxTransfer(huart);
 8012620:	4620      	mov	r0, r4
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 8012622:	620d      	str	r5, [r1, #32]
          UART_EndRxTransfer(huart);
 8012624:	f7ff fe4c 	bl	80122c0 <UART_EndRxTransfer>
          __HAL_UNLOCK(huart);
 8012628:	2300      	movs	r3, #0
          huart->ErrorCode = HAL_UART_ERROR_ORE;
 801262a:	f8c4 5084 	str.w	r5, [r4, #132]	@ 0x84
          __HAL_UNLOCK(huart);
 801262e:	f884 3078 	strb.w	r3, [r4, #120]	@ 0x78
          return HAL_ERROR;
 8012632:	2001      	movs	r0, #1
}
 8012634:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8012638:	69cb      	ldr	r3, [r1, #28]
 801263a:	051b      	lsls	r3, r3, #20
 801263c:	d5cc      	bpl.n	80125d8 <UART_WaitOnFlagUntilTimeout+0x10>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 801263e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8012642:	620b      	str	r3, [r1, #32]
          UART_EndRxTransfer(huart);
 8012644:	4620      	mov	r0, r4
 8012646:	f7ff fe3b 	bl	80122c0 <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 801264a:	2320      	movs	r3, #32
 801264c:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
          __HAL_UNLOCK(huart);
 8012650:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
        return HAL_TIMEOUT;
 8012654:	2003      	movs	r0, #3
 8012656:	e7ed      	b.n	8012634 <UART_WaitOnFlagUntilTimeout+0x6c>

08012658 <HAL_UART_Transmit>:
{
 8012658:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801265c:	4698      	mov	r8, r3
  if (huart->gState == HAL_UART_STATE_READY)
 801265e:	6fc3      	ldr	r3, [r0, #124]	@ 0x7c
 8012660:	2b20      	cmp	r3, #32
{
 8012662:	4604      	mov	r4, r0
 8012664:	460e      	mov	r6, r1
 8012666:	4617      	mov	r7, r2
  if (huart->gState == HAL_UART_STATE_READY)
 8012668:	d143      	bne.n	80126f2 <HAL_UART_Transmit+0x9a>
    if ((pData == NULL) || (Size == 0U))
 801266a:	2900      	cmp	r1, #0
 801266c:	d043      	beq.n	80126f6 <HAL_UART_Transmit+0x9e>
 801266e:	2a00      	cmp	r2, #0
 8012670:	d041      	beq.n	80126f6 <HAL_UART_Transmit+0x9e>
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8012672:	2321      	movs	r3, #33	@ 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8012674:	2500      	movs	r5, #0
 8012676:	f8c0 5084 	str.w	r5, [r0, #132]	@ 0x84
    huart->gState = HAL_UART_STATE_BUSY_TX;
 801267a:	67c3      	str	r3, [r0, #124]	@ 0x7c
    tickstart = HAL_GetTick();
 801267c:	f7fe fdac 	bl	80111d8 <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8012680:	68a3      	ldr	r3, [r4, #8]
    huart->TxXferSize  = Size;
 8012682:	f8a4 7050 	strh.w	r7, [r4, #80]	@ 0x50
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8012686:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    tickstart = HAL_GetTick();
 801268a:	4681      	mov	r9, r0
    huart->TxXferCount = Size;
 801268c:	f8a4 7052 	strh.w	r7, [r4, #82]	@ 0x52
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8012690:	d103      	bne.n	801269a <HAL_UART_Transmit+0x42>
 8012692:	6923      	ldr	r3, [r4, #16]
 8012694:	b90b      	cbnz	r3, 801269a <HAL_UART_Transmit+0x42>
      pdata16bits = (const uint16_t *) pData;
 8012696:	4635      	mov	r5, r6
      pdata8bits  = NULL;
 8012698:	461e      	mov	r6, r3
    while (huart->TxXferCount > 0U)
 801269a:	f8b4 2052 	ldrh.w	r2, [r4, #82]	@ 0x52
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 801269e:	f8cd 8000 	str.w	r8, [sp]
    while (huart->TxXferCount > 0U)
 80126a2:	b292      	uxth	r2, r2
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80126a4:	464b      	mov	r3, r9
    while (huart->TxXferCount > 0U)
 80126a6:	b93a      	cbnz	r2, 80126b8 <HAL_UART_Transmit+0x60>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80126a8:	2140      	movs	r1, #64	@ 0x40
 80126aa:	4620      	mov	r0, r4
 80126ac:	f7ff ff8c 	bl	80125c8 <UART_WaitOnFlagUntilTimeout>
 80126b0:	2320      	movs	r3, #32
 80126b2:	b940      	cbnz	r0, 80126c6 <HAL_UART_Transmit+0x6e>
    huart->gState = HAL_UART_STATE_READY;
 80126b4:	67e3      	str	r3, [r4, #124]	@ 0x7c
    return HAL_OK;
 80126b6:	e008      	b.n	80126ca <HAL_UART_Transmit+0x72>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80126b8:	2200      	movs	r2, #0
 80126ba:	2180      	movs	r1, #128	@ 0x80
 80126bc:	4620      	mov	r0, r4
 80126be:	f7ff ff83 	bl	80125c8 <UART_WaitOnFlagUntilTimeout>
 80126c2:	b128      	cbz	r0, 80126d0 <HAL_UART_Transmit+0x78>
        huart->gState = HAL_UART_STATE_READY;
 80126c4:	2320      	movs	r3, #32
 80126c6:	67e3      	str	r3, [r4, #124]	@ 0x7c
        return HAL_TIMEOUT;
 80126c8:	2003      	movs	r0, #3
}
 80126ca:	b003      	add	sp, #12
 80126cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 80126d0:	6822      	ldr	r2, [r4, #0]
      if (pdata8bits == NULL)
 80126d2:	b95e      	cbnz	r6, 80126ec <HAL_UART_Transmit+0x94>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 80126d4:	f835 3b02 	ldrh.w	r3, [r5], #2
 80126d8:	f3c3 0308 	ubfx	r3, r3, #0, #9
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 80126dc:	8513      	strh	r3, [r2, #40]	@ 0x28
      huart->TxXferCount--;
 80126de:	f8b4 2052 	ldrh.w	r2, [r4, #82]	@ 0x52
 80126e2:	3a01      	subs	r2, #1
 80126e4:	b292      	uxth	r2, r2
 80126e6:	f8a4 2052 	strh.w	r2, [r4, #82]	@ 0x52
 80126ea:	e7d6      	b.n	801269a <HAL_UART_Transmit+0x42>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 80126ec:	f816 3b01 	ldrb.w	r3, [r6], #1
 80126f0:	e7f4      	b.n	80126dc <HAL_UART_Transmit+0x84>
    return HAL_BUSY;
 80126f2:	2002      	movs	r0, #2
 80126f4:	e7e9      	b.n	80126ca <HAL_UART_Transmit+0x72>
      return  HAL_ERROR;
 80126f6:	2001      	movs	r0, #1
 80126f8:	e7e7      	b.n	80126ca <HAL_UART_Transmit+0x72>

080126fa <HAL_UART_Receive>:
{
 80126fa:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80126fe:	4698      	mov	r8, r3
  if (huart->RxState == HAL_UART_STATE_READY)
 8012700:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
 8012704:	2b20      	cmp	r3, #32
{
 8012706:	4604      	mov	r4, r0
 8012708:	460f      	mov	r7, r1
 801270a:	4616      	mov	r6, r2
  if (huart->RxState == HAL_UART_STATE_READY)
 801270c:	d15c      	bne.n	80127c8 <HAL_UART_Receive+0xce>
    if ((pData == NULL) || (Size == 0U))
 801270e:	2900      	cmp	r1, #0
 8012710:	d05c      	beq.n	80127cc <HAL_UART_Receive+0xd2>
 8012712:	2a00      	cmp	r2, #0
 8012714:	d05a      	beq.n	80127cc <HAL_UART_Receive+0xd2>
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 8012716:	2322      	movs	r3, #34	@ 0x22
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8012718:	2500      	movs	r5, #0
 801271a:	f8c0 5084 	str.w	r5, [r0, #132]	@ 0x84
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 801271e:	f8c0 3080 	str.w	r3, [r0, #128]	@ 0x80
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8012722:	6605      	str	r5, [r0, #96]	@ 0x60
    tickstart = HAL_GetTick();
 8012724:	f7fe fd58 	bl	80111d8 <HAL_GetTick>
    UART_MASK_COMPUTATION(huart);
 8012728:	68a3      	ldr	r3, [r4, #8]
    huart->RxXferSize  = Size;
 801272a:	f8a4 6058 	strh.w	r6, [r4, #88]	@ 0x58
    UART_MASK_COMPUTATION(huart);
 801272e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    tickstart = HAL_GetTick();
 8012732:	4681      	mov	r9, r0
    huart->RxXferCount = Size;
 8012734:	f8a4 605a 	strh.w	r6, [r4, #90]	@ 0x5a
    UART_MASK_COMPUTATION(huart);
 8012738:	d10d      	bne.n	8012756 <HAL_UART_Receive+0x5c>
 801273a:	6923      	ldr	r3, [r4, #16]
 801273c:	b1db      	cbz	r3, 8012776 <HAL_UART_Receive+0x7c>
 801273e:	22ff      	movs	r2, #255	@ 0xff
    uhMask = huart->Mask;
 8012740:	4616      	mov	r6, r2
    UART_MASK_COMPUTATION(huart);
 8012742:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
    while (huart->RxXferCount > 0U)
 8012746:	f8b4 005a 	ldrh.w	r0, [r4, #90]	@ 0x5a
 801274a:	b280      	uxth	r0, r0
 801274c:	b9e0      	cbnz	r0, 8012788 <HAL_UART_Receive+0x8e>
    huart->RxState = HAL_UART_STATE_READY;
 801274e:	2320      	movs	r3, #32
 8012750:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
    return HAL_OK;
 8012754:	e025      	b.n	80127a2 <HAL_UART_Receive+0xa8>
    UART_MASK_COMPUTATION(huart);
 8012756:	b933      	cbnz	r3, 8012766 <HAL_UART_Receive+0x6c>
 8012758:	6925      	ldr	r5, [r4, #16]
 801275a:	2d00      	cmp	r5, #0
 801275c:	d0ef      	beq.n	801273e <HAL_UART_Receive+0x44>
 801275e:	227f      	movs	r2, #127	@ 0x7f
    uhMask = huart->Mask;
 8012760:	4616      	mov	r6, r2
      pdata16bits = NULL;
 8012762:	461d      	mov	r5, r3
 8012764:	e7ed      	b.n	8012742 <HAL_UART_Receive+0x48>
    UART_MASK_COMPUTATION(huart);
 8012766:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 801276a:	d10a      	bne.n	8012782 <HAL_UART_Receive+0x88>
 801276c:	6923      	ldr	r3, [r4, #16]
 801276e:	2b00      	cmp	r3, #0
 8012770:	d0f5      	beq.n	801275e <HAL_UART_Receive+0x64>
 8012772:	223f      	movs	r2, #63	@ 0x3f
 8012774:	e7e4      	b.n	8012740 <HAL_UART_Receive+0x46>
 8012776:	f240 12ff 	movw	r2, #511	@ 0x1ff
      pdata16bits = (uint16_t *) pData;
 801277a:	463d      	mov	r5, r7
    uhMask = huart->Mask;
 801277c:	4616      	mov	r6, r2
      pdata8bits  = NULL;
 801277e:	461f      	mov	r7, r3
 8012780:	e7df      	b.n	8012742 <HAL_UART_Receive+0x48>
 8012782:	462a      	mov	r2, r5
    uhMask = huart->Mask;
 8012784:	462e      	mov	r6, r5
 8012786:	e7dc      	b.n	8012742 <HAL_UART_Receive+0x48>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 8012788:	f8cd 8000 	str.w	r8, [sp]
 801278c:	464b      	mov	r3, r9
 801278e:	2200      	movs	r2, #0
 8012790:	2120      	movs	r1, #32
 8012792:	4620      	mov	r0, r4
 8012794:	f7ff ff18 	bl	80125c8 <UART_WaitOnFlagUntilTimeout>
 8012798:	b130      	cbz	r0, 80127a8 <HAL_UART_Receive+0xae>
        huart->RxState = HAL_UART_STATE_READY;
 801279a:	2320      	movs	r3, #32
 801279c:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
        return HAL_TIMEOUT;
 80127a0:	2003      	movs	r0, #3
}
 80127a2:	b003      	add	sp, #12
 80127a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 80127a8:	6823      	ldr	r3, [r4, #0]
 80127aa:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 80127ac:	4033      	ands	r3, r6
      if (pdata8bits == NULL)
 80127ae:	b947      	cbnz	r7, 80127c2 <HAL_UART_Receive+0xc8>
        *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 80127b0:	f825 3b02 	strh.w	r3, [r5], #2
      huart->RxXferCount--;
 80127b4:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 80127b8:	3b01      	subs	r3, #1
 80127ba:	b29b      	uxth	r3, r3
 80127bc:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80127c0:	e7c1      	b.n	8012746 <HAL_UART_Receive+0x4c>
        *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 80127c2:	f807 3b01 	strb.w	r3, [r7], #1
        pdata8bits++;
 80127c6:	e7f5      	b.n	80127b4 <HAL_UART_Receive+0xba>
    return HAL_BUSY;
 80127c8:	2002      	movs	r0, #2
 80127ca:	e7ea      	b.n	80127a2 <HAL_UART_Receive+0xa8>
      return  HAL_ERROR;
 80127cc:	2001      	movs	r0, #1
 80127ce:	e7e8      	b.n	80127a2 <HAL_UART_Receive+0xa8>

080127d0 <UART_CheckIdleState>:
{
 80127d0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80127d2:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80127d4:	2600      	movs	r6, #0
 80127d6:	f8c0 6084 	str.w	r6, [r0, #132]	@ 0x84
  tickstart = HAL_GetTick();
 80127da:	f7fe fcfd 	bl	80111d8 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 80127de:	6823      	ldr	r3, [r4, #0]
 80127e0:	681b      	ldr	r3, [r3, #0]
 80127e2:	071a      	lsls	r2, r3, #28
  tickstart = HAL_GetTick();
 80127e4:	4605      	mov	r5, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 80127e6:	d51b      	bpl.n	8012820 <UART_CheckIdleState+0x50>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 80127e8:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 80127ec:	9300      	str	r3, [sp, #0]
 80127ee:	4632      	mov	r2, r6
 80127f0:	4603      	mov	r3, r0
 80127f2:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 80127f6:	4620      	mov	r0, r4
 80127f8:	f7ff fee6 	bl	80125c8 <UART_WaitOnFlagUntilTimeout>
 80127fc:	b180      	cbz	r0, 8012820 <UART_CheckIdleState+0x50>
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE));
 80127fe:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8012800:	e852 3f00 	ldrex	r3, [r2]
 8012804:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8012808:	e842 3100 	strex	r1, r3, [r2]
 801280c:	2900      	cmp	r1, #0
 801280e:	d1f6      	bne.n	80127fe <UART_CheckIdleState+0x2e>
      huart->gState = HAL_UART_STATE_READY;
 8012810:	2320      	movs	r3, #32
 8012812:	67e3      	str	r3, [r4, #124]	@ 0x7c
      return HAL_TIMEOUT;
 8012814:	2003      	movs	r0, #3
      __HAL_UNLOCK(huart);
 8012816:	2300      	movs	r3, #0
 8012818:	f884 3078 	strb.w	r3, [r4, #120]	@ 0x78
}
 801281c:	b002      	add	sp, #8
 801281e:	bd70      	pop	{r4, r5, r6, pc}
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 8012820:	6823      	ldr	r3, [r4, #0]
 8012822:	681b      	ldr	r3, [r3, #0]
 8012824:	075b      	lsls	r3, r3, #29
 8012826:	d524      	bpl.n	8012872 <UART_CheckIdleState+0xa2>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8012828:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 801282c:	9300      	str	r3, [sp, #0]
 801282e:	2200      	movs	r2, #0
 8012830:	462b      	mov	r3, r5
 8012832:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 8012836:	4620      	mov	r0, r4
 8012838:	f7ff fec6 	bl	80125c8 <UART_WaitOnFlagUntilTimeout>
 801283c:	b1c8      	cbz	r0, 8012872 <UART_CheckIdleState+0xa2>
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 801283e:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8012840:	e852 3f00 	ldrex	r3, [r2]
 8012844:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8012848:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 801284c:	6822      	ldr	r2, [r4, #0]
 801284e:	2900      	cmp	r1, #0
 8012850:	d1f5      	bne.n	801283e <UART_CheckIdleState+0x6e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8012852:	f102 0308 	add.w	r3, r2, #8
 8012856:	e853 3f00 	ldrex	r3, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 801285a:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 801285e:	f102 0008 	add.w	r0, r2, #8
 8012862:	e840 3100 	strex	r1, r3, [r0]
 8012866:	2900      	cmp	r1, #0
 8012868:	d1f3      	bne.n	8012852 <UART_CheckIdleState+0x82>
      huart->RxState = HAL_UART_STATE_READY;
 801286a:	2320      	movs	r3, #32
 801286c:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
      return HAL_TIMEOUT;
 8012870:	e7d0      	b.n	8012814 <UART_CheckIdleState+0x44>
  huart->gState = HAL_UART_STATE_READY;
 8012872:	2320      	movs	r3, #32
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8012874:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 8012876:	67e3      	str	r3, [r4, #124]	@ 0x7c
  huart->RxState = HAL_UART_STATE_READY;
 8012878:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 801287c:	6620      	str	r0, [r4, #96]	@ 0x60
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 801287e:	6660      	str	r0, [r4, #100]	@ 0x64
  return HAL_OK;
 8012880:	e7c9      	b.n	8012816 <UART_CheckIdleState+0x46>

08012882 <HAL_UART_Init>:
{
 8012882:	b510      	push	{r4, lr}
  if (huart == NULL)
 8012884:	4604      	mov	r4, r0
 8012886:	b340      	cbz	r0, 80128da <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 8012888:	6fc3      	ldr	r3, [r0, #124]	@ 0x7c
 801288a:	b91b      	cbnz	r3, 8012894 <HAL_UART_Init+0x12>
    huart->Lock = HAL_UNLOCKED;
 801288c:	f880 3078 	strb.w	r3, [r0, #120]	@ 0x78
    HAL_UART_MspInit(huart);
 8012890:	f7fe fbb4 	bl	8010ffc <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 8012894:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8012896:	2324      	movs	r3, #36	@ 0x24
 8012898:	67e3      	str	r3, [r4, #124]	@ 0x7c
  __HAL_UART_DISABLE(huart);
 801289a:	6813      	ldr	r3, [r2, #0]
 801289c:	f023 0301 	bic.w	r3, r3, #1
 80128a0:	6013      	str	r3, [r2, #0]
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 80128a2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80128a4:	b113      	cbz	r3, 80128ac <HAL_UART_Init+0x2a>
    UART_AdvFeatureConfig(huart);
 80128a6:	4620      	mov	r0, r4
 80128a8:	f7ff fe3a 	bl	8012520 <UART_AdvFeatureConfig>
  if (UART_SetConfig(huart) == HAL_ERROR)
 80128ac:	4620      	mov	r0, r4
 80128ae:	f7ff fd2f 	bl	8012310 <UART_SetConfig>
 80128b2:	2801      	cmp	r0, #1
 80128b4:	d011      	beq.n	80128da <HAL_UART_Init+0x58>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80128b6:	6823      	ldr	r3, [r4, #0]
 80128b8:	685a      	ldr	r2, [r3, #4]
 80128ba:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 80128be:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 80128c0:	689a      	ldr	r2, [r3, #8]
 80128c2:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 80128c6:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 80128c8:	681a      	ldr	r2, [r3, #0]
 80128ca:	f042 0201 	orr.w	r2, r2, #1
  return (UART_CheckIdleState(huart));
 80128ce:	4620      	mov	r0, r4
  __HAL_UART_ENABLE(huart);
 80128d0:	601a      	str	r2, [r3, #0]
}
 80128d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  return (UART_CheckIdleState(huart));
 80128d6:	f7ff bf7b 	b.w	80127d0 <UART_CheckIdleState>
}
 80128da:	2001      	movs	r0, #1
 80128dc:	bd10      	pop	{r4, pc}
	...

080128e0 <_write>:
#if defined(_IS_GCC_COMPILER) && _IS_GCC_COMPILER

int _write(int fd, const void *buff, int count);

int _write(int fd, const void *buff, int count)
{
 80128e0:	b510      	push	{r4, lr}
  bool status = true;

  if ((count < 0) && (fd != STDOUT_FILENO) && (fd != STDERR_FILENO)) {
 80128e2:	1e14      	subs	r4, r2, #0
 80128e4:	da0a      	bge.n	80128fc <_write+0x1c>
 80128e6:	3801      	subs	r0, #1
 80128e8:	2801      	cmp	r0, #1
 80128ea:	d907      	bls.n	80128fc <_write+0x1c>
    errno = EBADF;
 80128ec:	f011 fb8e 	bl	802400c <__errno>
 80128f0:	2309      	movs	r3, #9
 80128f2:	6003      	str	r3, [r0, #0]
    return -1;
 80128f4:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
#endif /* SWO_OUTPUT */
  status = port_io_write((uint8_t *)buff, count);
#endif /* !HAS_DEDICATED_PRINT_PORT */

  return (status ? count : 0);
}
 80128f8:	4620      	mov	r0, r4
 80128fa:	bd10      	pop	{r4, pc}
  if (_ioWriteAllowed)
 80128fc:	4b06      	ldr	r3, [pc, #24]	@ (8012918 <_write+0x38>)
 80128fe:	781b      	ldrb	r3, [r3, #0]
 8012900:	2b00      	cmp	r3, #0
 8012902:	d0f9      	beq.n	80128f8 <_write+0x18>

__STATIC_INLINE bool port_io_write(uint8_t *buff, int count)
{
  HAL_StatusTypeDef status;

  status = HAL_UART_Transmit(&UartHandle, buff, count, HAL_MAX_DELAY);
 8012904:	b2a2      	uxth	r2, r4
 8012906:	4805      	ldr	r0, [pc, #20]	@ (801291c <_write+0x3c>)
 8012908:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 801290c:	f7ff fea4 	bl	8012658 <HAL_UART_Transmit>
  return (status ? count : 0);
 8012910:	2800      	cmp	r0, #0
 8012912:	bf18      	it	ne
 8012914:	2400      	movne	r4, #0
 8012916:	e7ef      	b.n	80128f8 <_write+0x18>
 8012918:	2000000c 	.word	0x2000000c
 801291c:	20002024 	.word	0x20002024

08012920 <lc_print>:
#endif 
#endif
}

void lc_print(const char* fmt, ... )
{
 8012920:	b40f      	push	{r0, r1, r2, r3}
  return;
  va_list ap;
  va_start(ap, fmt);
  vlc_print(&_put_c_driver, NULL, fmt, ap);
  va_end(ap);
}
 8012922:	b004      	add	sp, #16
 8012924:	4770      	bx	lr
	...

08012928 <__wrap_malloc>:

void* __real_malloc(size_t bytes);
void __real_free(void *ptr);

void* __wrap_malloc(size_t bytes)
{
 8012928:	b538      	push	{r3, r4, r5, lr}
  uint8_t *ptr;

  io_malloc.cfg |= 1 << 1;
 801292a:	4d11      	ldr	r5, [pc, #68]	@ (8012970 <__wrap_malloc+0x48>)

  /* ensure alignment for magic number */
  bytes = (bytes + 3) & ~3;
 801292c:	1cc4      	adds	r4, r0, #3
  io_malloc.cfg |= 1 << 1;
 801292e:	682b      	ldr	r3, [r5, #0]
  bytes = (bytes + 3) & ~3;
 8012930:	f024 0403 	bic.w	r4, r4, #3
  io_malloc.cfg |= 1 << 1;
 8012934:	f043 0302 	orr.w	r3, r3, #2

  /* add 2x32-bit for size and magic  number */
  ptr = (uint8_t*)__real_malloc(bytes + 8);
 8012938:	f104 0008 	add.w	r0, r4, #8
  io_malloc.cfg |= 1 << 1;
 801293c:	602b      	str	r3, [r5, #0]
  ptr = (uint8_t*)__real_malloc(bytes + 8);
 801293e:	f010 ffeb 	bl	8023918 <malloc>

  /* remember size */
  if (ptr) {
 8012942:	b1a0      	cbz	r0, 801296e <__wrap_malloc+0x46>
    *((uint32_t*)ptr) = bytes;
    *((uint32_t*)(ptr + 4 + bytes)) = MAGIC_MALLOC_NUMBER;
 8012944:	1903      	adds	r3, r0, r4
 8012946:	4a0b      	ldr	r2, [pc, #44]	@ (8012974 <__wrap_malloc+0x4c>)
    *((uint32_t*)ptr) = bytes;
 8012948:	6004      	str	r4, [r0, #0]
    *((uint32_t*)(ptr + 4 + bytes)) = MAGIC_MALLOC_NUMBER;
 801294a:	605a      	str	r2, [r3, #4]
  }

  if ((ptr) && (io_malloc.cfg & 1UL)) {
 801294c:	682b      	ldr	r3, [r5, #0]
 801294e:	07db      	lsls	r3, r3, #31
 8012950:	d50c      	bpl.n	801296c <__wrap_malloc+0x44>
    io_malloc.alloc_req++;
 8012952:	68eb      	ldr	r3, [r5, #12]
 8012954:	3301      	adds	r3, #1
 8012956:	60eb      	str	r3, [r5, #12]
    io_malloc.alloc += bytes;
 8012958:	686b      	ldr	r3, [r5, #4]
 801295a:	4423      	add	r3, r4
 801295c:	606b      	str	r3, [r5, #4]

    io_malloc.used += bytes;
 801295e:	69ab      	ldr	r3, [r5, #24]
 8012960:	441c      	add	r4, r3

    if (io_malloc.used > io_malloc.max) {
 8012962:	696b      	ldr	r3, [r5, #20]
    io_malloc.used += bytes;
 8012964:	61ac      	str	r4, [r5, #24]
    if (io_malloc.used > io_malloc.max) {
 8012966:	429c      	cmp	r4, r3
      io_malloc.max = io_malloc.used;
 8012968:	bf88      	it	hi
 801296a:	616c      	strhi	r4, [r5, #20]

    if (io_malloc.a_idx >= _IO_MALLOC_TRACK_MODE)
      io_malloc.a_idx = 0;
#endif
  }
  return ptr?(ptr + 4):NULL;
 801296c:	3004      	adds	r0, #4
}
 801296e:	bd38      	pop	{r3, r4, r5, pc}
 8012970:	200020c0 	.word	0x200020c0
 8012974:	efdcba98 	.word	0xefdcba98

08012978 <dwtCyclesToTime>:
 */

struct cyclesCount cyclesCount;

int dwtCyclesToTime(uint64_t clks, struct dwtTime *t)
{
 8012978:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801297c:	4604      	mov	r4, r0
 801297e:	468a      	mov	sl, r1
  if (!t)
 8012980:	4616      	mov	r6, r2
 8012982:	b38a      	cbz	r2, 80129e8 <dwtCyclesToTime+0x70>
    return -1;
  uint32_t fcpu = port_hal_get_frequency();
 8012984:	f7ff f978 	bl	8011c78 <HAL_RCC_GetHCLKFreq>
  uint64_t s  = clks / fcpu;
 8012988:	2300      	movs	r3, #0
  uint32_t fcpu = port_hal_get_frequency();
 801298a:	4607      	mov	r7, r0
  uint64_t s  = clks / fcpu;
 801298c:	4602      	mov	r2, r0
 801298e:	4651      	mov	r1, sl
 8012990:	4620      	mov	r0, r4
 8012992:	f7fe f841 	bl	8010a18 <__aeabi_uldivmod>
  uint64_t ms = (clks * 1000) / fcpu;
 8012996:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
  uint64_t s  = clks / fcpu;
 801299a:	4683      	mov	fp, r0
  uint64_t ms = (clks * 1000) / fcpu;
 801299c:	fba4 0105 	umull	r0, r1, r4, r5
 80129a0:	463a      	mov	r2, r7
 80129a2:	2300      	movs	r3, #0
 80129a4:	fb05 110a 	mla	r1, r5, sl, r1
 80129a8:	f7fe f836 	bl	8010a18 <__aeabi_uldivmod>
  uint64_t us = (clks * 1000 * 1000) / fcpu;
 80129ac:	f8df 9040 	ldr.w	r9, [pc, #64]	@ 80129f0 <dwtCyclesToTime+0x78>
  ms -= (s * 1000);
 80129b0:	fbab 3205 	umull	r3, r2, fp, r5
 80129b4:	1ac3      	subs	r3, r0, r3
  uint64_t us = (clks * 1000 * 1000) / fcpu;
 80129b6:	fba4 0109 	umull	r0, r1, r4, r9
  ms -= (s * 1000);
 80129ba:	9301      	str	r3, [sp, #4]
  uint64_t us = (clks * 1000 * 1000) / fcpu;
 80129bc:	fb09 110a 	mla	r1, r9, sl, r1
 80129c0:	2300      	movs	r3, #0
 80129c2:	463a      	mov	r2, r7
 80129c4:	f7fe f828 	bl	8010a18 <__aeabi_uldivmod>
  us -= (ms * 1000 + s * 1000000);
  t->fcpu = fcpu;
  t->s = s;
  t->ms = ms;
 80129c8:	9b01      	ldr	r3, [sp, #4]
 80129ca:	60b3      	str	r3, [r6, #8]
  us -= (ms * 1000 + s * 1000000);
 80129cc:	fbab 8909 	umull	r8, r9, fp, r9
 80129d0:	eba0 0008 	sub.w	r0, r0, r8
 80129d4:	fba3 3505 	umull	r3, r5, r3, r5
  t->s = s;
 80129d8:	e9c6 7b00 	strd	r7, fp, [r6]
  us -= (ms * 1000 + s * 1000000);
 80129dc:	1ac0      	subs	r0, r0, r3
  t->us = us;
 80129de:	60f0      	str	r0, [r6, #12]
  return 0;
 80129e0:	2000      	movs	r0, #0
}
 80129e2:	b003      	add	sp, #12
 80129e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    return -1;
 80129e8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80129ec:	e7f9      	b.n	80129e2 <dwtCyclesToTime+0x6a>
 80129ee:	bf00      	nop
 80129f0:	000f4240 	.word	0x000f4240

080129f4 <getFlashCacheConf>:

#if defined(STM32L4) || defined(STM32F4)

  mconf |= MCONF_L4_F4;

  __I uint32_t acr = FLASH->ACR ;
 80129f4:	4b0d      	ldr	r3, [pc, #52]	@ (8012a2c <getFlashCacheConf+0x38>)
{
 80129f6:	b082      	sub	sp, #8
  __I uint32_t acr = FLASH->ACR ;
 80129f8:	681b      	ldr	r3, [r3, #0]
 80129fa:	9301      	str	r3, [sp, #4]

  mconf |= ((acr & FLASH_ACR_LATENCY_Msk) >> FLASH_ACR_LATENCY_Pos);
 80129fc:	9801      	ldr	r0, [sp, #4]

  if ((acr & FLASH_ACR_PRFTEN_Msk) >> FLASH_ACR_PRFTEN_Pos)
 80129fe:	9b01      	ldr	r3, [sp, #4]
 8012a00:	05d9      	lsls	r1, r3, #23
    mconf |= MCONF_ART_DCACHE;
  if ((acr & FLASH_ACR_ICEN_Msk) >> FLASH_ACR_ICEN_Pos)
 8012a02:	9b01      	ldr	r3, [sp, #4]
  mconf |= ((acr & FLASH_ACR_LATENCY_Msk) >> FLASH_ACR_LATENCY_Pos);
 8012a04:	f000 0007 	and.w	r0, r0, #7
    mconf |= MCONF_ART_DCACHE;
 8012a08:	bf4c      	ite	mi
 8012a0a:	f040 2001 	orrmi.w	r0, r0, #16777472	@ 0x1000100
  mconf |= ((acr & FLASH_ACR_LATENCY_Msk) >> FLASH_ACR_LATENCY_Pos);
 8012a0e:	f040 7080 	orrpl.w	r0, r0, #16777216	@ 0x1000000
  if ((acr & FLASH_ACR_ICEN_Msk) >> FLASH_ACR_ICEN_Pos)
 8012a12:	059a      	lsls	r2, r3, #22
    mconf |= MCONF_ART_ICACHE;
  if ((acr & FLASH_ACR_DCEN_Msk) >> FLASH_ACR_DCEN_Pos)
 8012a14:	9b01      	ldr	r3, [sp, #4]
    mconf |= MCONF_ART_ICACHE;
 8012a16:	bf48      	it	mi
 8012a18:	f440 7000 	orrmi.w	r0, r0, #512	@ 0x200
  if ((acr & FLASH_ACR_DCEN_Msk) >> FLASH_ACR_DCEN_Pos)
 8012a1c:	055b      	lsls	r3, r3, #21
    mconf |= MCONF_ART_PREFETCH;
 8012a1e:	bf48      	it	mi
 8012a20:	f440 6080 	orrmi.w	r0, r0, #1024	@ 0x400
  mconf |= MCONF_CORE_DCACHE;

#endif

  return mconf;
}
 8012a24:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
 8012a28:	b002      	add	sp, #8
 8012a2a:	4770      	bx	lr
 8012a2c:	40022000 	.word	0x40022000

08012a30 <getSysConf.part.0>:
void getSysConf(struct mcu_conf *conf)
 8012a30:	b510      	push	{r4, lr}
 8012a32:	4604      	mov	r4, r0
  conf->sclk = port_hal_get_cpu_freq();
 8012a34:	f7ff f920 	bl	8011c78 <HAL_RCC_GetHCLKFreq>
 8012a38:	6020      	str	r0, [r4, #0]
  conf->hclk = port_hal_get_sys_freq();
 8012a3a:	f7ff f91d 	bl	8011c78 <HAL_RCC_GetHCLKFreq>
 8012a3e:	6060      	str	r0, [r4, #4]
  conf->conf = getFlashCacheConf();
 8012a40:	f7ff ffd8 	bl	80129f4 <getFlashCacheConf>
 8012a44:	60a0      	str	r0, [r4, #8]
  conf->devid = port_hal_get_dev_id();
 8012a46:	f7fe fbeb 	bl	8011220 <HAL_GetDEVID>
 8012a4a:	60e0      	str	r0, [r4, #12]
  conf->revid = port_hal_get_rev_id();
 8012a4c:	f7fe fbe2 	bl	8011214 <HAL_GetREVID>
 8012a50:	6120      	str	r0, [r4, #16]
}
 8012a52:	bd10      	pop	{r4, pc}

08012a54 <systemSettingLog>:

void systemSettingLog(void)
{
 8012a54:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  if (!conf)
 8012a56:	a801      	add	r0, sp, #4
 8012a58:	f7ff ffea 	bl	8012a30 <getSysConf.part.0>
#if defined(SR5E1)
  LC_PRINT(" ESDK version : %s\r\n", (char*)port_hal_get_hal_version());
#elif defined(SR6X)
  LC_PRINT(" SDK version  : %s\r\n", (char*)port_hal_get_hal_version());
#else
  LC_PRINT(" HAL version  : 0x%08x\r\n", (int)port_hal_get_hal_version());
 8012a5c:	f7fe fbd6 	bl	801120c <HAL_GetHalVersion>
      bitToStr(ccr & SCB_CCR_DC_Msk));
#endif
#endif

#if defined(STM32F4) || defined(STM32L4)
  uint32_t acr = FLASH->ACR;
 8012a60:	4b02      	ldr	r3, [pc, #8]	@ (8012a6c <systemSettingLog+0x18>)
 8012a62:	681b      	ldr	r3, [r3, #0]
  LC_PRINT(" CACHE conf.  : $I/$D=(%s,%s)\r\n",
      bitToStr(sys_conf.conf & MCONF_CORE_ICACHE),
      bitToStr(sys_conf.conf & MCONF_CORE_DCACHE));
#endif

}
 8012a64:	b007      	add	sp, #28
 8012a66:	f85d fb04 	ldr.w	pc, [sp], #4
 8012a6a:	bf00      	nop
 8012a6c:	40022000 	.word	0x40022000

08012a70 <aiValidationInit>:
 * Exported/Public functions
 * -----------------------------------------------------------------------------
 */

int aiValidationInit(void)
{
 8012a70:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  LC_PRINT("\r\n#\r\n");
 8012a72:	4c1f      	ldr	r4, [pc, #124]	@ (8012af0 <aiValidationInit+0x80>)
#else /* USE_SYSTICK_ONLY */
  struct dwtTime t;
  uint32_t st;

  port_dwt_init();
  port_dwt_reset();
 8012a74:	4e1f      	ldr	r6, [pc, #124]	@ (8012af4 <aiValidationInit+0x84>)
 8012a76:	f204 2019 	addw	r0, r4, #537	@ 0x219
 8012a7a:	f7ff ff51 	bl	8012920 <lc_print>
  LC_PRINT("# %s %d.%d\r\n", _APP_NAME_ , _APP_VERSION_MAJOR_, _APP_VERSION_MINOR_);
 8012a7e:	2301      	movs	r3, #1
 8012a80:	f204 211f 	addw	r1, r4, #543	@ 0x21f
 8012a84:	2207      	movs	r2, #7
 8012a86:	f204 202d 	addw	r0, r4, #557	@ 0x22d
 8012a8a:	f7ff ff49 	bl	8012920 <lc_print>
 8012a8e:	2500      	movs	r5, #0
  LC_PRINT("#\r\n");
 8012a90:	f204 203a 	addw	r0, r4, #570	@ 0x23a
 8012a94:	f7ff ff44 	bl	8012920 <lc_print>

  systemSettingLog();
 8012a98:	f7ff ffdc 	bl	8012a54 <systemSettingLog>
  port_dwt_init();
 8012a9c:	f000 f82e 	bl	8012afc <port_dwt_init_imp>
  port_dwt_reset();
 8012aa0:	6075      	str	r5, [r6, #4]
  port_hal_delay(100);
 8012aa2:	2064      	movs	r0, #100	@ 0x64
 8012aa4:	f7fe fb9e 	bl	80111e4 <HAL_Delay>
  st = port_dwt_get_cycles();
 8012aa8:	6870      	ldr	r0, [r6, #4]
  dwtCyclesToTime(st/100, &t);
 8012aaa:	466a      	mov	r2, sp
 8012aac:	2664      	movs	r6, #100	@ 0x64
 8012aae:	4629      	mov	r1, r5
 8012ab0:	fbb0 f0f6 	udiv	r0, r0, r6
 8012ab4:	f7ff ff60 	bl	8012978 <dwtCyclesToTime>

#if USE_CORE_CLOCK_ONLY == 1
  LC_PRINT(" Timestamp    : DWT only (delay(1)=%d.%03d ms)\r\n",
           t.s * 100 + t.ms, t.us);
#else /* USE_CORE_CLOCK_ONLY == 1 */
  LC_PRINT(" Timestamp    : SysTick + DWT (delay(1)=%d.%03d ms)\r\n",
 8012ab8:	e9dd 1301 	ldrd	r1, r3, [sp, #4]
 8012abc:	9a03      	ldr	r2, [sp, #12]
 8012abe:	fb06 3101 	mla	r1, r6, r1, r3
 8012ac2:	f204 203e 	addw	r0, r4, #574	@ 0x23e
 8012ac6:	f7ff ff2b 	bl	8012920 <lc_print>
           t.s * 100 + t.ms, t.us);
  dwtCyclesToTime(UINT32_MAX, &t);
 8012aca:	466a      	mov	r2, sp
 8012acc:	2100      	movs	r1, #0
 8012ace:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8012ad2:	f7ff ff51 	bl	8012978 <dwtCyclesToTime>
  cyclesCount.dwt_max = t.s * 1000 + t.ms;
 8012ad6:	9a01      	ldr	r2, [sp, #4]
 8012ad8:	9b02      	ldr	r3, [sp, #8]
 8012ada:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8012ade:	fb01 3302 	mla	r3, r1, r2, r3
 8012ae2:	4a05      	ldr	r2, [pc, #20]	@ (8012af8 <aiValidationInit+0x88>)
 8012ae4:	6013      	str	r3, [r2, #0]
#endif /* !USE_CORE_CLOCK_ONLY != 1 */
  port_dwt_init();
 8012ae6:	f000 f809 	bl	8012afc <port_dwt_init_imp>

  cyclesCounterInit();

  return 0;
}
 8012aea:	4628      	mov	r0, r5
 8012aec:	b004      	add	sp, #16
 8012aee:	bd70      	pop	{r4, r5, r6, pc}
 8012af0:	08025de0 	.word	0x08025de0
 8012af4:	e0001000 	.word	0xe0001000
 8012af8:	200020b4 	.word	0x200020b4

08012afc <port_dwt_init_imp>:

#if defined(HAS_DWT_CTRL) && HAS_DWT_CTRL == 1

void port_dwt_init_imp()
{
  CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 8012afc:	4a07      	ldr	r2, [pc, #28]	@ (8012b1c <port_dwt_init_imp+0x20>)
 8012afe:	f8d2 30fc 	ldr.w	r3, [r2, #252]	@ 0xfc
 8012b02:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8012b06:	f8c2 30fc 	str.w	r3, [r2, #252]	@ 0xfc
#ifdef STM32F7
  DWT->LAR = 0xC5ACCE55;
#endif
  DWT->CYCCNT = 0;
 8012b0a:	4b05      	ldr	r3, [pc, #20]	@ (8012b20 <port_dwt_init_imp+0x24>)
 8012b0c:	2200      	movs	r2, #0
 8012b0e:	605a      	str	r2, [r3, #4]
  DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 8012b10:	681a      	ldr	r2, [r3, #0]
 8012b12:	f042 0201 	orr.w	r2, r2, #1
 8012b16:	601a      	str	r2, [r3, #0]
}
 8012b18:	4770      	bx	lr
 8012b1a:	bf00      	nop
 8012b1c:	e000ed00 	.word	0xe000ed00
 8012b20:	e0001000 	.word	0xe0001000

08012b24 <MX_X_CUBE_AI_Init>:
ai_handle data_activations0[] = {pool0};

/* Entry points --------------------------------------------------------------*/

void MX_X_CUBE_AI_Init(void)
{
 8012b24:	b508      	push	{r3, lr}
    MX_UARTx_Init();
 8012b26:	f7fe fa33 	bl	8010f90 <MX_USART1_UART_Init>
    aiValidationInit();
    /* USER CODE BEGIN 5 */
    /* USER CODE END 5 */
}
 8012b2a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    aiValidationInit();
 8012b2e:	f7ff bf9f 	b.w	8012a70 <aiValidationInit>
	...

08012b34 <ai_cifar_model_create>:


AI_API_ENTRY
ai_error ai_cifar_model_create(
  ai_handle* network, const ai_buffer* network_config)
{
 8012b34:	b507      	push	{r0, r1, r2, lr}
  return ai_platform_network_create(
 8012b36:	2305      	movs	r3, #5
 8012b38:	2200      	movs	r2, #0
 8012b3a:	e9cd 3200 	strd	r3, r2, [sp]
 8012b3e:	4a03      	ldr	r2, [pc, #12]	@ (8012b4c <ai_cifar_model_create+0x18>)
 8012b40:	2301      	movs	r3, #1
 8012b42:	f000 fc6d 	bl	8013420 <ai_platform_network_create>
    network, network_config, 
    AI_CONTEXT_OBJ(&AI_NET_OBJ_INSTANCE),
    AI_TOOLS_API_VERSION_MAJOR, AI_TOOLS_API_VERSION_MINOR, AI_TOOLS_API_VERSION_MICRO);
}
 8012b46:	b003      	add	sp, #12
 8012b48:	f85d fb04 	ldr.w	pc, [sp], #4
 8012b4c:	20000010 	.word	0x20000010

08012b50 <ai_cifar_model_inputs_get>:


AI_API_ENTRY
ai_buffer* ai_cifar_model_inputs_get(ai_handle network, ai_u16 *n_buffer)
{
  if (network == AI_HANDLE_NULL) {
 8012b50:	b910      	cbnz	r0, 8012b58 <ai_cifar_model_inputs_get+0x8>
    network = (ai_handle)&AI_NET_OBJ_INSTANCE;
    AI_NETWORK_OBJ(network)->magic = AI_MAGIC_CONTEXT_TOKEN;
 8012b52:	4802      	ldr	r0, [pc, #8]	@ (8012b5c <ai_cifar_model_inputs_get+0xc>)
 8012b54:	4b02      	ldr	r3, [pc, #8]	@ (8012b60 <ai_cifar_model_inputs_get+0x10>)
 8012b56:	6003      	str	r3, [r0, #0]
  }
  return ai_platform_inputs_get(network, n_buffer);
 8012b58:	f000 bb78 	b.w	801324c <ai_platform_inputs_get>
 8012b5c:	20000010 	.word	0x20000010
 8012b60:	a1c00100 	.word	0xa1c00100

08012b64 <ai_cifar_model_outputs_get>:


AI_API_ENTRY
ai_buffer* ai_cifar_model_outputs_get(ai_handle network, ai_u16 *n_buffer)
{
  if (network == AI_HANDLE_NULL) {
 8012b64:	b910      	cbnz	r0, 8012b6c <ai_cifar_model_outputs_get+0x8>
    network = (ai_handle)&AI_NET_OBJ_INSTANCE;
    AI_NETWORK_OBJ(network)->magic = AI_MAGIC_CONTEXT_TOKEN;
 8012b66:	4802      	ldr	r0, [pc, #8]	@ (8012b70 <ai_cifar_model_outputs_get+0xc>)
 8012b68:	4b02      	ldr	r3, [pc, #8]	@ (8012b74 <ai_cifar_model_outputs_get+0x10>)
 8012b6a:	6003      	str	r3, [r0, #0]
  }
  return ai_platform_outputs_get(network, n_buffer);
 8012b6c:	f000 bbe4 	b.w	8013338 <ai_platform_outputs_get>
 8012b70:	20000010 	.word	0x20000010
 8012b74:	a1c00100 	.word	0xa1c00100

08012b78 <ai_cifar_model_init>:


AI_API_ENTRY
ai_bool ai_cifar_model_init(
  ai_handle network, const ai_network_params* params)
{
 8012b78:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012b7c:	4607      	mov	r7, r0
 8012b7e:	4688      	mov	r8, r1
  ai_network* net_ctx = AI_NETWORK_OBJ(ai_platform_network_init(network, params));
 8012b80:	f000 fc90 	bl	80134a4 <ai_platform_network_init>
  ai_bool ok = true;

  if (!net_ctx) return false;
 8012b84:	4604      	mov	r4, r0
 8012b86:	2800      	cmp	r0, #0
 8012b88:	f000 8224 	beq.w	8012fd4 <ai_cifar_model_init+0x45c>
  if (ai_platform_get_weights_map(g_cifar_model_weights_map, 1, params)) {
 8012b8c:	4ec4      	ldr	r6, [pc, #784]	@ (8012ea0 <ai_cifar_model_init+0x328>)
 8012b8e:	4642      	mov	r2, r8
 8012b90:	2101      	movs	r1, #1
 8012b92:	4630      	mov	r0, r6
 8012b94:	f000 faac 	bl	80130f0 <ai_platform_get_weights_map>
 8012b98:	4605      	mov	r5, r0
 8012b9a:	2800      	cmp	r0, #0
 8012b9c:	f000 821c 	beq.w	8012fd8 <ai_cifar_model_init+0x460>
    sequential_batch_normalization_5_FusedBatchNormV31_array.format |= AI_FMT_FLAG_CONST;
 8012ba0:	4ac0      	ldr	r2, [pc, #768]	@ (8012ea4 <ai_cifar_model_init+0x32c>)
 8012ba2:	6813      	ldr	r3, [r2, #0]
 8012ba4:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8012ba8:	6013      	str	r3, [r2, #0]
    sequential_batch_normalization_5_FusedBatchNormV31_array.data = AI_PTR(g_cifar_model_weights_map[0] + 0);
 8012baa:	6833      	ldr	r3, [r6, #0]
    sequential_batch_normalization_5_FusedBatchNormV31_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 0);
 8012bac:	e9c2 3302 	strd	r3, r3, [r2, #8]
    sequential_batch_normalization_5_FusedBatchNormV3_array.format |= AI_FMT_FLAG_CONST;
 8012bb0:	4abd      	ldr	r2, [pc, #756]	@ (8012ea8 <ai_cifar_model_init+0x330>)
 8012bb2:	6811      	ldr	r1, [r2, #0]
 8012bb4:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012bb8:	6011      	str	r1, [r2, #0]
    sequential_batch_normalization_5_FusedBatchNormV3_array.data = AI_PTR(g_cifar_model_weights_map[0] + 128);
 8012bba:	f103 0180 	add.w	r1, r3, #128	@ 0x80
    sequential_batch_normalization_5_FusedBatchNormV3_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 128);
 8012bbe:	e9c2 1102 	strd	r1, r1, [r2, #8]
    sequential_batch_normalization_4_FusedBatchNormV31_array.format |= AI_FMT_FLAG_CONST;
 8012bc2:	4aba      	ldr	r2, [pc, #744]	@ (8012eac <ai_cifar_model_init+0x334>)
 8012bc4:	6811      	ldr	r1, [r2, #0]
 8012bc6:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012bca:	6011      	str	r1, [r2, #0]
    sequential_batch_normalization_4_FusedBatchNormV31_array.data = AI_PTR(g_cifar_model_weights_map[0] + 256);
 8012bcc:	f503 7180 	add.w	r1, r3, #256	@ 0x100
    sequential_batch_normalization_4_FusedBatchNormV31_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 256);
 8012bd0:	e9c2 1102 	strd	r1, r1, [r2, #8]
    sequential_batch_normalization_4_FusedBatchNormV3_array.format |= AI_FMT_FLAG_CONST;
 8012bd4:	4ab6      	ldr	r2, [pc, #728]	@ (8012eb0 <ai_cifar_model_init+0x338>)
 8012bd6:	6811      	ldr	r1, [r2, #0]
 8012bd8:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012bdc:	6011      	str	r1, [r2, #0]
    sequential_batch_normalization_4_FusedBatchNormV3_array.data = AI_PTR(g_cifar_model_weights_map[0] + 384);
 8012bde:	f503 71c0 	add.w	r1, r3, #384	@ 0x180
    sequential_batch_normalization_4_FusedBatchNormV3_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 384);
 8012be2:	e9c2 1102 	strd	r1, r1, [r2, #8]
    sequential_batch_normalization_3_FusedBatchNormV31_array.format |= AI_FMT_FLAG_CONST;
 8012be6:	4ab3      	ldr	r2, [pc, #716]	@ (8012eb4 <ai_cifar_model_init+0x33c>)
 8012be8:	6811      	ldr	r1, [r2, #0]
 8012bea:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012bee:	6011      	str	r1, [r2, #0]
    sequential_batch_normalization_3_FusedBatchNormV31_array.data = AI_PTR(g_cifar_model_weights_map[0] + 512);
 8012bf0:	f503 7100 	add.w	r1, r3, #512	@ 0x200
    sequential_batch_normalization_3_FusedBatchNormV31_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 512);
 8012bf4:	e9c2 1102 	strd	r1, r1, [r2, #8]
    sequential_batch_normalization_3_FusedBatchNormV3_array.format |= AI_FMT_FLAG_CONST;
 8012bf8:	4aaf      	ldr	r2, [pc, #700]	@ (8012eb8 <ai_cifar_model_init+0x340>)
 8012bfa:	6811      	ldr	r1, [r2, #0]
 8012bfc:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012c00:	6011      	str	r1, [r2, #0]
    sequential_batch_normalization_3_FusedBatchNormV3_array.data = AI_PTR(g_cifar_model_weights_map[0] + 576);
 8012c02:	f503 7110 	add.w	r1, r3, #576	@ 0x240
    sequential_batch_normalization_3_FusedBatchNormV3_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 576);
 8012c06:	e9c2 1102 	strd	r1, r1, [r2, #8]
    sequential_batch_normalization_2_FusedBatchNormV31_array.format |= AI_FMT_FLAG_CONST;
 8012c0a:	4aac      	ldr	r2, [pc, #688]	@ (8012ebc <ai_cifar_model_init+0x344>)
 8012c0c:	6811      	ldr	r1, [r2, #0]
 8012c0e:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012c12:	6011      	str	r1, [r2, #0]
    sequential_batch_normalization_2_FusedBatchNormV31_array.data = AI_PTR(g_cifar_model_weights_map[0] + 640);
 8012c14:	f503 7120 	add.w	r1, r3, #640	@ 0x280
    sequential_batch_normalization_2_FusedBatchNormV31_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 640);
 8012c18:	e9c2 1102 	strd	r1, r1, [r2, #8]
    sequential_batch_normalization_2_FusedBatchNormV3_array.format |= AI_FMT_FLAG_CONST;
 8012c1c:	4aa8      	ldr	r2, [pc, #672]	@ (8012ec0 <ai_cifar_model_init+0x348>)
 8012c1e:	6811      	ldr	r1, [r2, #0]
 8012c20:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012c24:	6011      	str	r1, [r2, #0]
    sequential_batch_normalization_2_FusedBatchNormV3_array.data = AI_PTR(g_cifar_model_weights_map[0] + 704);
 8012c26:	f503 7130 	add.w	r1, r3, #704	@ 0x2c0
    sequential_batch_normalization_2_FusedBatchNormV3_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 704);
 8012c2a:	e9c2 1102 	strd	r1, r1, [r2, #8]
    sequential_batch_normalization_1_FusedBatchNormV31_array.format |= AI_FMT_FLAG_CONST;
 8012c2e:	4aa5      	ldr	r2, [pc, #660]	@ (8012ec4 <ai_cifar_model_init+0x34c>)
 8012c30:	6811      	ldr	r1, [r2, #0]
 8012c32:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012c36:	6011      	str	r1, [r2, #0]
    sequential_batch_normalization_1_FusedBatchNormV31_array.data = AI_PTR(g_cifar_model_weights_map[0] + 768);
 8012c38:	f503 7140 	add.w	r1, r3, #768	@ 0x300
    sequential_batch_normalization_1_FusedBatchNormV31_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 768);
 8012c3c:	e9c2 1102 	strd	r1, r1, [r2, #8]
    sequential_batch_normalization_1_FusedBatchNormV3_array.format |= AI_FMT_FLAG_CONST;
 8012c40:	4aa1      	ldr	r2, [pc, #644]	@ (8012ec8 <ai_cifar_model_init+0x350>)
 8012c42:	6811      	ldr	r1, [r2, #0]
 8012c44:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012c48:	6011      	str	r1, [r2, #0]
    sequential_batch_normalization_1_FusedBatchNormV3_array.data = AI_PTR(g_cifar_model_weights_map[0] + 800);
 8012c4a:	f503 7148 	add.w	r1, r3, #800	@ 0x320
    sequential_batch_normalization_1_FusedBatchNormV3_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 800);
 8012c4e:	e9c2 1102 	strd	r1, r1, [r2, #8]
    sequential_batch_normalization_FusedBatchNormV31_array.format |= AI_FMT_FLAG_CONST;
 8012c52:	4a9e      	ldr	r2, [pc, #632]	@ (8012ecc <ai_cifar_model_init+0x354>)
 8012c54:	6811      	ldr	r1, [r2, #0]
 8012c56:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012c5a:	6011      	str	r1, [r2, #0]
    sequential_batch_normalization_FusedBatchNormV31_array.data = AI_PTR(g_cifar_model_weights_map[0] + 832);
 8012c5c:	f503 7150 	add.w	r1, r3, #832	@ 0x340
    sequential_batch_normalization_FusedBatchNormV31_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 832);
 8012c60:	e9c2 1102 	strd	r1, r1, [r2, #8]
    sequential_batch_normalization_FusedBatchNormV3_array.format |= AI_FMT_FLAG_CONST;
 8012c64:	4a9a      	ldr	r2, [pc, #616]	@ (8012ed0 <ai_cifar_model_init+0x358>)
 8012c66:	6811      	ldr	r1, [r2, #0]
 8012c68:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012c6c:	6011      	str	r1, [r2, #0]
    sequential_batch_normalization_FusedBatchNormV3_array.data = AI_PTR(g_cifar_model_weights_map[0] + 864);
 8012c6e:	f503 7158 	add.w	r1, r3, #864	@ 0x360
    sequential_batch_normalization_FusedBatchNormV3_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 864);
 8012c72:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_0_weights_array.format |= AI_FMT_FLAG_CONST;
 8012c76:	4a97      	ldr	r2, [pc, #604]	@ (8012ed4 <ai_cifar_model_init+0x35c>)
 8012c78:	6811      	ldr	r1, [r2, #0]
 8012c7a:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012c7e:	6011      	str	r1, [r2, #0]
    conv2d_0_weights_array.data = AI_PTR(g_cifar_model_weights_map[0] + 896);
 8012c80:	f503 7160 	add.w	r1, r3, #896	@ 0x380
    conv2d_0_weights_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 896);
 8012c84:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_0_bias_array.format |= AI_FMT_FLAG_CONST;
 8012c88:	4a93      	ldr	r2, [pc, #588]	@ (8012ed8 <ai_cifar_model_init+0x360>)
 8012c8a:	6811      	ldr	r1, [r2, #0]
 8012c8c:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012c90:	6011      	str	r1, [r2, #0]
    conv2d_0_bias_array.data = AI_PTR(g_cifar_model_weights_map[0] + 1760);
 8012c92:	f503 61dc 	add.w	r1, r3, #1760	@ 0x6e0
    conv2d_0_bias_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 1760);
 8012c96:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_3_weights_array.format |= AI_FMT_FLAG_CONST;
 8012c9a:	4a90      	ldr	r2, [pc, #576]	@ (8012edc <ai_cifar_model_init+0x364>)
 8012c9c:	6811      	ldr	r1, [r2, #0]
 8012c9e:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012ca2:	6011      	str	r1, [r2, #0]
    conv2d_3_weights_array.data = AI_PTR(g_cifar_model_weights_map[0] + 1888);
 8012ca4:	f503 61ec 	add.w	r1, r3, #1888	@ 0x760
    conv2d_3_weights_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 1888);
 8012ca8:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_3_bias_array.format |= AI_FMT_FLAG_CONST;
 8012cac:	4a8c      	ldr	r2, [pc, #560]	@ (8012ee0 <ai_cifar_model_init+0x368>)
 8012cae:	6811      	ldr	r1, [r2, #0]
 8012cb0:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012cb4:	6011      	str	r1, [r2, #0]
    conv2d_3_bias_array.data = AI_PTR(g_cifar_model_weights_map[0] + 11104);
 8012cb6:	f503 512d 	add.w	r1, r3, #11072	@ 0x2b40
 8012cba:	3120      	adds	r1, #32
    conv2d_3_bias_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 11104);
 8012cbc:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_7_weights_array.format |= AI_FMT_FLAG_CONST;
 8012cc0:	4a88      	ldr	r2, [pc, #544]	@ (8012ee4 <ai_cifar_model_init+0x36c>)
 8012cc2:	6811      	ldr	r1, [r2, #0]
 8012cc4:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012cc8:	6011      	str	r1, [r2, #0]
    conv2d_7_weights_array.data = AI_PTR(g_cifar_model_weights_map[0] + 11232);
 8012cca:	f503 512f 	add.w	r1, r3, #11200	@ 0x2bc0
 8012cce:	3120      	adds	r1, #32
    conv2d_7_weights_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 11232);
 8012cd0:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_7_bias_array.format |= AI_FMT_FLAG_CONST;
 8012cd4:	4a84      	ldr	r2, [pc, #528]	@ (8012ee8 <ai_cifar_model_init+0x370>)
 8012cd6:	6811      	ldr	r1, [r2, #0]
 8012cd8:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012cdc:	6011      	str	r1, [r2, #0]
    conv2d_7_bias_array.data = AI_PTR(g_cifar_model_weights_map[0] + 29664);
 8012cde:	f503 41e7 	add.w	r1, r3, #29568	@ 0x7380
 8012ce2:	3160      	adds	r1, #96	@ 0x60
    conv2d_7_bias_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 29664);
 8012ce4:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_10_weights_array.format |= AI_FMT_FLAG_CONST;
 8012ce8:	4a80      	ldr	r2, [pc, #512]	@ (8012eec <ai_cifar_model_init+0x374>)
 8012cea:	6811      	ldr	r1, [r2, #0]
 8012cec:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012cf0:	6011      	str	r1, [r2, #0]
    conv2d_10_weights_array.data = AI_PTR(g_cifar_model_weights_map[0] + 29920);
 8012cf2:	f503 41e9 	add.w	r1, r3, #29824	@ 0x7480
 8012cf6:	3160      	adds	r1, #96	@ 0x60
    conv2d_10_weights_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 29920);
 8012cf8:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_10_bias_array.format |= AI_FMT_FLAG_CONST;
 8012cfc:	497c      	ldr	r1, [pc, #496]	@ (8012ef0 <ai_cifar_model_init+0x378>)
 8012cfe:	680a      	ldr	r2, [r1, #0]
 8012d00:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8012d04:	600a      	str	r2, [r1, #0]
    conv2d_10_bias_array.data = AI_PTR(g_cifar_model_weights_map[0] + 66784);
 8012d06:	f503 3282 	add.w	r2, r3, #66560	@ 0x10400
 8012d0a:	f102 00e0 	add.w	r0, r2, #224	@ 0xe0
    conv2d_10_bias_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 66784);
 8012d0e:	e9c1 0002 	strd	r0, r0, [r1, #8]
    conv2d_14_weights_array.format |= AI_FMT_FLAG_CONST;
 8012d12:	4978      	ldr	r1, [pc, #480]	@ (8012ef4 <ai_cifar_model_init+0x37c>)
 8012d14:	6808      	ldr	r0, [r1, #0]
    conv2d_14_weights_array.data = AI_PTR(g_cifar_model_weights_map[0] + 67040);
 8012d16:	f502 72f0 	add.w	r2, r2, #480	@ 0x1e0
    conv2d_14_weights_array.format |= AI_FMT_FLAG_CONST;
 8012d1a:	f040 4080 	orr.w	r0, r0, #1073741824	@ 0x40000000
 8012d1e:	6008      	str	r0, [r1, #0]
    conv2d_14_weights_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 67040);
 8012d20:	e9c1 2202 	strd	r2, r2, [r1, #8]
    conv2d_14_bias_array.format |= AI_FMT_FLAG_CONST;
 8012d24:	4974      	ldr	r1, [pc, #464]	@ (8012ef8 <ai_cifar_model_init+0x380>)
 8012d26:	680a      	ldr	r2, [r1, #0]
 8012d28:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8012d2c:	600a      	str	r2, [r1, #0]
    conv2d_14_bias_array.data = AI_PTR(g_cifar_model_weights_map[0] + 140768);
 8012d2e:	f503 3209 	add.w	r2, r3, #140288	@ 0x22400
 8012d32:	f502 70f0 	add.w	r0, r2, #480	@ 0x1e0
    conv2d_14_bias_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 140768);
 8012d36:	e9c1 0002 	strd	r0, r0, [r1, #8]
    conv2d_17_weights_array.format |= AI_FMT_FLAG_CONST;
 8012d3a:	4970      	ldr	r1, [pc, #448]	@ (8012efc <ai_cifar_model_init+0x384>)
    conv2d_17_weights_array.data = AI_PTR(g_cifar_model_weights_map[0] + 141280);
 8012d3c:	f502 7278 	add.w	r2, r2, #992	@ 0x3e0
    conv2d_17_weights_array.format |= AI_FMT_FLAG_CONST;
 8012d40:	6808      	ldr	r0, [r1, #0]
    conv2d_17_weights_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 141280);
 8012d42:	e9c1 2202 	strd	r2, r2, [r1, #8]
    conv2d_17_bias_array.format |= AI_FMT_FLAG_CONST;
 8012d46:	4a6e      	ldr	r2, [pc, #440]	@ (8012f00 <ai_cifar_model_init+0x388>)
    conv2d_17_weights_array.format |= AI_FMT_FLAG_CONST;
 8012d48:	f040 4080 	orr.w	r0, r0, #1073741824	@ 0x40000000
 8012d4c:	6008      	str	r0, [r1, #0]
    conv2d_17_bias_array.format |= AI_FMT_FLAG_CONST;
 8012d4e:	6811      	ldr	r1, [r2, #0]
 8012d50:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012d54:	6011      	str	r1, [r2, #0]
    conv2d_17_bias_array.data = AI_PTR(g_cifar_model_weights_map[0] + 288736);
 8012d56:	f503 218c 	add.w	r1, r3, #286720	@ 0x46000
 8012d5a:	f501 61fc 	add.w	r1, r1, #2016	@ 0x7e0
    conv2d_17_bias_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 288736);
 8012d5e:	e9c2 1102 	strd	r1, r1, [r2, #8]
    gemm_21_weights_array.format |= AI_FMT_FLAG_CONST;
 8012d62:	4a68      	ldr	r2, [pc, #416]	@ (8012f04 <ai_cifar_model_init+0x38c>)
 8012d64:	6811      	ldr	r1, [r2, #0]
 8012d66:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012d6a:	6011      	str	r1, [r2, #0]
    gemm_21_weights_array.data = AI_PTR(g_cifar_model_weights_map[0] + 289248);
 8012d6c:	f503 218d 	add.w	r1, r3, #288768	@ 0x46800
 8012d70:	f501 71f0 	add.w	r1, r1, #480	@ 0x1e0
    gemm_21_weights_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 289248);
 8012d74:	e9c2 1102 	strd	r1, r1, [r2, #8]
    gemm_21_bias_array.format |= AI_FMT_FLAG_CONST;
 8012d78:	4a63      	ldr	r2, [pc, #396]	@ (8012f08 <ai_cifar_model_init+0x390>)
 8012d7a:	6811      	ldr	r1, [r2, #0]
    gemm_21_bias_array.data = AI_PTR(g_cifar_model_weights_map[0] + 322016);
 8012d7c:	f503 269d 	add.w	r6, r3, #321536	@ 0x4e800
    gemm_21_bias_array.format |= AI_FMT_FLAG_CONST;
 8012d80:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012d84:	6011      	str	r1, [r2, #0]
    gemm_21_bias_array.data = AI_PTR(g_cifar_model_weights_map[0] + 322016);
 8012d86:	f506 71f0 	add.w	r1, r6, #480	@ 0x1e0
    gemm_21_bias_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 322016);
 8012d8a:	e9c2 1102 	strd	r1, r1, [r2, #8]
    gemm_22_weights_array.format |= AI_FMT_FLAG_CONST;
 8012d8e:	4a5f      	ldr	r2, [pc, #380]	@ (8012f0c <ai_cifar_model_init+0x394>)
 8012d90:	6811      	ldr	r1, [r2, #0]
    gemm_22_weights_array.data = AI_PTR(g_cifar_model_weights_map[0] + 323040);
 8012d92:	f506 66bc 	add.w	r6, r6, #1504	@ 0x5e0
    gemm_22_weights_array.format |= AI_FMT_FLAG_CONST;
 8012d96:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012d9a:	6011      	str	r1, [r2, #0]
    gemm_22_weights_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 323040);
 8012d9c:	e9c2 6602 	strd	r6, r6, [r2, #8]
    gemm_22_bias_array.format |= AI_FMT_FLAG_CONST;
 8012da0:	4a5b      	ldr	r2, [pc, #364]	@ (8012f10 <ai_cifar_model_init+0x398>)
    gemm_22_bias_array.data = AI_PTR(g_cifar_model_weights_map[0] + 325600);
 8012da2:	f503 239e 	add.w	r3, r3, #323584	@ 0x4f000
    gemm_22_bias_array.format |= AI_FMT_FLAG_CONST;
 8012da6:	6811      	ldr	r1, [r2, #0]
    gemm_22_bias_array.data = AI_PTR(g_cifar_model_weights_map[0] + 325600);
 8012da8:	f503 63fc 	add.w	r3, r3, #2016	@ 0x7e0
    gemm_22_bias_array.data_start = AI_PTR(g_cifar_model_weights_map[0] + 325600);
 8012dac:	e9c2 3302 	strd	r3, r3, [r2, #8]
    gemm_22_bias_array.format |= AI_FMT_FLAG_CONST;
 8012db0:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8012db4:	6011      	str	r1, [r2, #0]
  if (ai_platform_get_activations_map(g_cifar_model_activations_map, 1, params)) {
 8012db6:	f8df 91c4 	ldr.w	r9, [pc, #452]	@ 8012f7c <ai_cifar_model_init+0x404>
 8012dba:	4642      	mov	r2, r8
 8012dbc:	2101      	movs	r1, #1
 8012dbe:	4648      	mov	r0, r9
 8012dc0:	f000 f9ea 	bl	8013198 <ai_platform_get_activations_map>
 8012dc4:	4606      	mov	r6, r0
 8012dc6:	2800      	cmp	r0, #0
 8012dc8:	f000 810c 	beq.w	8012fe4 <ai_cifar_model_init+0x46c>
    serving_default_conv2d_input0_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 31980);
 8012dcc:	f8d9 3000 	ldr.w	r3, [r9]
 8012dd0:	4950      	ldr	r1, [pc, #320]	@ (8012f14 <ai_cifar_model_init+0x39c>)
    conv2d_0_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 896);
 8012dd2:	4851      	ldr	r0, [pc, #324]	@ (8012f18 <ai_cifar_model_init+0x3a0>)
    serving_default_conv2d_input0_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 31980);
 8012dd4:	f503 42f9 	add.w	r2, r3, #31872	@ 0x7c80
 8012dd8:	326c      	adds	r2, #108	@ 0x6c
    serving_default_conv2d_input0_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 31980);
 8012dda:	e9c1 2202 	strd	r2, r2, [r1, #8]
    conv2d_0_scratch0_array.data = AI_PTR(g_cifar_model_activations_map[0] + 29696);
 8012dde:	4a4f      	ldr	r2, [pc, #316]	@ (8012f1c <ai_cifar_model_init+0x3a4>)
 8012de0:	f503 41e8 	add.w	r1, r3, #29696	@ 0x7400
    conv2d_0_scratch0_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 29696);
 8012de4:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_0_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 896);
 8012de8:	f503 7260 	add.w	r2, r3, #896	@ 0x380
    conv2d_0_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 896);
 8012dec:	e9c0 2202 	strd	r2, r2, [r0, #8]
    eltwise_1_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 896);
 8012df0:	484b      	ldr	r0, [pc, #300]	@ (8012f20 <ai_cifar_model_init+0x3a8>)
    eltwise_1_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 896);
 8012df2:	e9c0 2202 	strd	r2, r2, [r0, #8]
    eltwise_2_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 896);
 8012df6:	484b      	ldr	r0, [pc, #300]	@ (8012f24 <ai_cifar_model_init+0x3ac>)
    eltwise_2_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 896);
 8012df8:	e9c0 2202 	strd	r2, r2, [r0, #8]
    conv2d_3_scratch0_array.data = AI_PTR(g_cifar_model_activations_map[0] + 29696);
 8012dfc:	4a4a      	ldr	r2, [pc, #296]	@ (8012f28 <ai_cifar_model_init+0x3b0>)
    conv2d_3_scratch0_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 29696);
 8012dfe:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_3_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012e02:	4a4a      	ldr	r2, [pc, #296]	@ (8012f2c <ai_cifar_model_init+0x3b4>)
    conv2d_3_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012e04:	e9c2 3302 	strd	r3, r3, [r2, #8]
    eltwise_4_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012e08:	4a49      	ldr	r2, [pc, #292]	@ (8012f30 <ai_cifar_model_init+0x3b8>)
    eltwise_4_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012e0a:	e9c2 3302 	strd	r3, r3, [r2, #8]
    eltwise_5_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012e0e:	4a49      	ldr	r2, [pc, #292]	@ (8012f34 <ai_cifar_model_init+0x3bc>)
    eltwise_5_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012e10:	e9c2 3302 	strd	r3, r3, [r2, #8]
    pool_6_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 25088);
 8012e14:	4a48      	ldr	r2, [pc, #288]	@ (8012f38 <ai_cifar_model_init+0x3c0>)
 8012e16:	f503 41c4 	add.w	r1, r3, #25088	@ 0x6200
    pool_6_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 25088);
 8012e1a:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_7_scratch0_array.data = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012e1e:	4a47      	ldr	r2, [pc, #284]	@ (8012f3c <ai_cifar_model_init+0x3c4>)
    conv2d_7_scratch0_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012e20:	e9c2 3302 	strd	r3, r3, [r2, #8]
    conv2d_7_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 7168);
 8012e24:	4a46      	ldr	r2, [pc, #280]	@ (8012f40 <ai_cifar_model_init+0x3c8>)
 8012e26:	f503 51e0 	add.w	r1, r3, #7168	@ 0x1c00
    conv2d_7_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 7168);
 8012e2a:	e9c2 1102 	strd	r1, r1, [r2, #8]
    eltwise_8_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 16384);
 8012e2e:	4a45      	ldr	r2, [pc, #276]	@ (8012f44 <ai_cifar_model_init+0x3cc>)
 8012e30:	f503 4180 	add.w	r1, r3, #16384	@ 0x4000
    eltwise_8_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 16384);
 8012e34:	e9c2 1102 	strd	r1, r1, [r2, #8]
    eltwise_9_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012e38:	4a43      	ldr	r2, [pc, #268]	@ (8012f48 <ai_cifar_model_init+0x3d0>)
    eltwise_9_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012e3a:	e9c2 3302 	strd	r3, r3, [r2, #8]
    conv2d_10_scratch0_array.data = AI_PTR(g_cifar_model_activations_map[0] + 9216);
 8012e3e:	4a43      	ldr	r2, [pc, #268]	@ (8012f4c <ai_cifar_model_init+0x3d4>)
 8012e40:	f503 5110 	add.w	r1, r3, #9216	@ 0x2400
    conv2d_10_scratch0_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 9216);
 8012e44:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_10_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 17536);
 8012e48:	4a41      	ldr	r2, [pc, #260]	@ (8012f50 <ai_cifar_model_init+0x3d8>)
 8012e4a:	f503 4189 	add.w	r1, r3, #17536	@ 0x4480
    conv2d_10_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 17536);
 8012e4e:	e9c2 1102 	strd	r1, r1, [r2, #8]
    eltwise_11_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012e52:	4a40      	ldr	r2, [pc, #256]	@ (8012f54 <ai_cifar_model_init+0x3dc>)
    eltwise_11_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012e54:	e9c2 3302 	strd	r3, r3, [r2, #8]
    eltwise_12_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 6400);
 8012e58:	4a3f      	ldr	r2, [pc, #252]	@ (8012f58 <ai_cifar_model_init+0x3e0>)
 8012e5a:	f503 51c8 	add.w	r1, r3, #6400	@ 0x1900
    eltwise_12_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 6400);
 8012e5e:	e9c2 1102 	strd	r1, r1, [r2, #8]
    pool_13_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012e62:	4a3e      	ldr	r2, [pc, #248]	@ (8012f5c <ai_cifar_model_init+0x3e4>)
    pool_13_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012e64:	e9c2 3302 	strd	r3, r3, [r2, #8]
    conv2d_14_scratch0_array.data = AI_PTR(g_cifar_model_activations_map[0] + 1600);
 8012e68:	4a3d      	ldr	r2, [pc, #244]	@ (8012f60 <ai_cifar_model_init+0x3e8>)
 8012e6a:	f503 61c8 	add.w	r1, r3, #1600	@ 0x640
    conv2d_14_scratch0_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 1600);
 8012e6e:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_14_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 10816);
 8012e72:	4a3c      	ldr	r2, [pc, #240]	@ (8012f64 <ai_cifar_model_init+0x3ec>)
 8012e74:	f503 5129 	add.w	r1, r3, #10816	@ 0x2a40
    conv2d_14_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 10816);
 8012e78:	e9c2 1102 	strd	r1, r1, [r2, #8]
    eltwise_15_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012e7c:	4a3a      	ldr	r2, [pc, #232]	@ (8012f68 <ai_cifar_model_init+0x3f0>)
    eltwise_15_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012e7e:	e9c2 3302 	strd	r3, r3, [r2, #8]
    eltwise_16_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 1152);
 8012e82:	4a3a      	ldr	r2, [pc, #232]	@ (8012f6c <ai_cifar_model_init+0x3f4>)
 8012e84:	f503 6190 	add.w	r1, r3, #1152	@ 0x480
    eltwise_16_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 1152);
 8012e88:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_17_scratch0_array.data = AI_PTR(g_cifar_model_activations_map[0] + 2304);
 8012e8c:	4a38      	ldr	r2, [pc, #224]	@ (8012f70 <ai_cifar_model_init+0x3f8>)
 8012e8e:	f503 6110 	add.w	r1, r3, #2304	@ 0x900
    conv2d_17_scratch0_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 2304);
 8012e92:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_17_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012e96:	4a37      	ldr	r2, [pc, #220]	@ (8012f74 <ai_cifar_model_init+0x3fc>)
    eltwise_18_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 128);
 8012e98:	4937      	ldr	r1, [pc, #220]	@ (8012f78 <ai_cifar_model_init+0x400>)
    conv2d_17_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012e9a:	e9c2 3302 	strd	r3, r3, [r2, #8]
 8012e9e:	e06f      	b.n	8012f80 <ai_cifar_model_init+0x408>
 8012ea0:	20002230 	.word	0x20002230
 8012ea4:	20001c0c 	.word	0x20001c0c
 8012ea8:	20001bfc 	.word	0x20001bfc
 8012eac:	20001bec 	.word	0x20001bec
 8012eb0:	20001bdc 	.word	0x20001bdc
 8012eb4:	20001bcc 	.word	0x20001bcc
 8012eb8:	20001bbc 	.word	0x20001bbc
 8012ebc:	20001bac 	.word	0x20001bac
 8012ec0:	20001b9c 	.word	0x20001b9c
 8012ec4:	20001b8c 	.word	0x20001b8c
 8012ec8:	20001b7c 	.word	0x20001b7c
 8012ecc:	20001b6c 	.word	0x20001b6c
 8012ed0:	20001b5c 	.word	0x20001b5c
 8012ed4:	20001b4c 	.word	0x20001b4c
 8012ed8:	20001b3c 	.word	0x20001b3c
 8012edc:	20001b2c 	.word	0x20001b2c
 8012ee0:	20001b1c 	.word	0x20001b1c
 8012ee4:	20001b0c 	.word	0x20001b0c
 8012ee8:	20001afc 	.word	0x20001afc
 8012eec:	20001aec 	.word	0x20001aec
 8012ef0:	20001adc 	.word	0x20001adc
 8012ef4:	20001acc 	.word	0x20001acc
 8012ef8:	20001abc 	.word	0x20001abc
 8012efc:	20001aac 	.word	0x20001aac
 8012f00:	20001a9c 	.word	0x20001a9c
 8012f04:	20001a8c 	.word	0x20001a8c
 8012f08:	20001a7c 	.word	0x20001a7c
 8012f0c:	20001a6c 	.word	0x20001a6c
 8012f10:	20001a5c 	.word	0x20001a5c
 8012f14:	20001d9c 	.word	0x20001d9c
 8012f18:	20001d8c 	.word	0x20001d8c
 8012f1c:	20001a4c 	.word	0x20001a4c
 8012f20:	20001d7c 	.word	0x20001d7c
 8012f24:	20001d6c 	.word	0x20001d6c
 8012f28:	20001a3c 	.word	0x20001a3c
 8012f2c:	20001d5c 	.word	0x20001d5c
 8012f30:	20001d4c 	.word	0x20001d4c
 8012f34:	20001d3c 	.word	0x20001d3c
 8012f38:	20001d2c 	.word	0x20001d2c
 8012f3c:	20001a2c 	.word	0x20001a2c
 8012f40:	20001d1c 	.word	0x20001d1c
 8012f44:	20001d0c 	.word	0x20001d0c
 8012f48:	20001cfc 	.word	0x20001cfc
 8012f4c:	20001a1c 	.word	0x20001a1c
 8012f50:	20001cec 	.word	0x20001cec
 8012f54:	20001cdc 	.word	0x20001cdc
 8012f58:	20001ccc 	.word	0x20001ccc
 8012f5c:	20001cbc 	.word	0x20001cbc
 8012f60:	20001a0c 	.word	0x20001a0c
 8012f64:	20001cac 	.word	0x20001cac
 8012f68:	20001c9c 	.word	0x20001c9c
 8012f6c:	20001c8c 	.word	0x20001c8c
 8012f70:	200019fc 	.word	0x200019fc
 8012f74:	20001c7c 	.word	0x20001c7c
 8012f78:	20001c6c 	.word	0x20001c6c
 8012f7c:	20002234 	.word	0x20002234
    eltwise_18_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 128);
 8012f80:	f103 0280 	add.w	r2, r3, #128	@ 0x80
    eltwise_18_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 128);
 8012f84:	e9c1 2202 	strd	r2, r2, [r1, #8]
    eltwise_19_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012f88:	4919      	ldr	r1, [pc, #100]	@ (8012ff0 <ai_cifar_model_init+0x478>)
    eltwise_19_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012f8a:	e9c1 3302 	strd	r3, r3, [r1, #8]
    pool_20_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 128);
 8012f8e:	4919      	ldr	r1, [pc, #100]	@ (8012ff4 <ai_cifar_model_init+0x47c>)
    pool_20_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 128);
 8012f90:	e9c1 2202 	strd	r2, r2, [r1, #8]
    gemm_21_scratch0_array.data = AI_PTR(g_cifar_model_activations_map[0] + 256);
 8012f94:	4a18      	ldr	r2, [pc, #96]	@ (8012ff8 <ai_cifar_model_init+0x480>)
 8012f96:	f503 7180 	add.w	r1, r3, #256	@ 0x100
    gemm_21_scratch0_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 256);
 8012f9a:	e9c2 1102 	strd	r1, r1, [r2, #8]
    gemm_21_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 512);
 8012f9e:	4a17      	ldr	r2, [pc, #92]	@ (8012ffc <ai_cifar_model_init+0x484>)
 8012fa0:	f503 7100 	add.w	r1, r3, #512	@ 0x200
    gemm_21_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 512);
 8012fa4:	e9c2 1102 	strd	r1, r1, [r2, #8]
    gemm_22_scratch0_array.data = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012fa8:	4a15      	ldr	r2, [pc, #84]	@ (8013000 <ai_cifar_model_init+0x488>)
    gemm_22_scratch0_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012faa:	e9c2 3302 	strd	r3, r3, [r2, #8]
    gemm_22_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 768);
 8012fae:	4a15      	ldr	r2, [pc, #84]	@ (8013004 <ai_cifar_model_init+0x48c>)
 8012fb0:	f503 7140 	add.w	r1, r3, #768	@ 0x300
    gemm_22_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 768);
 8012fb4:	e9c2 1102 	strd	r1, r1, [r2, #8]
    nl_23_scratch0_array.data = AI_PTR(g_cifar_model_activations_map[0] + 780);
 8012fb8:	4a13      	ldr	r2, [pc, #76]	@ (8013008 <ai_cifar_model_init+0x490>)
 8012fba:	f503 7143 	add.w	r1, r3, #780	@ 0x30c
    nl_23_scratch0_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 780);
 8012fbe:	e9c2 1102 	strd	r1, r1, [r2, #8]
    nl_23_output_array.data = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012fc2:	4a12      	ldr	r2, [pc, #72]	@ (801300c <ai_cifar_model_init+0x494>)
    nl_23_output_array.data_start = AI_PTR(g_cifar_model_activations_map[0] + 0);
 8012fc4:	e9c2 3302 	strd	r3, r3, [r2, #8]
  ok &= cifar_model_configure_weights(net_ctx, params);
  ok &= cifar_model_configure_activations(net_ctx, params);

  ok &= ai_platform_network_post_init(network);
 8012fc8:	4638      	mov	r0, r7
 8012fca:	f000 fb39 	bl	8013640 <ai_platform_network_post_init>
 8012fce:	4030      	ands	r0, r6
 8012fd0:	4005      	ands	r5, r0
 8012fd2:	b2e8      	uxtb	r0, r5

  return ok;
}
 8012fd4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  AI_ERROR_TRAP(net_ctx, INIT_FAILED, NETWORK_WEIGHTS);
 8012fd8:	2212      	movs	r2, #18
 8012fda:	2130      	movs	r1, #48	@ 0x30
 8012fdc:	4620      	mov	r0, r4
 8012fde:	f000 f92f 	bl	8013240 <ai_platform_network_set_error>
  return false;
 8012fe2:	e6e8      	b.n	8012db6 <ai_cifar_model_init+0x23e>
  AI_ERROR_TRAP(net_ctx, INIT_FAILED, NETWORK_ACTIVATIONS);
 8012fe4:	2213      	movs	r2, #19
 8012fe6:	2130      	movs	r1, #48	@ 0x30
 8012fe8:	4620      	mov	r0, r4
 8012fea:	f000 f929 	bl	8013240 <ai_platform_network_set_error>
  return false;
 8012fee:	e7eb      	b.n	8012fc8 <ai_cifar_model_init+0x450>
 8012ff0:	20001c5c 	.word	0x20001c5c
 8012ff4:	20001c4c 	.word	0x20001c4c
 8012ff8:	200019ec 	.word	0x200019ec
 8012ffc:	20001c3c 	.word	0x20001c3c
 8013000:	200019dc 	.word	0x200019dc
 8013004:	20001c2c 	.word	0x20001c2c
 8013008:	200019cc 	.word	0x200019cc
 801300c:	20001c1c 	.word	0x20001c1c

08013010 <ai_cifar_model_data_activations_buffer_get>:
  ai_buffer buf = AI_BUFFER_INIT(
    AI_FLAG_NONE, AI_BUFFER_FORMAT_U8,
    AI_BUFFER_SHAPE_INIT(AI_SHAPE_BCWH, 4, 1, AI_CIFAR_MODEL_DATA_ACTIVATIONS_SIZE, 1, AI_CIFAR_MODEL_DATA_ACTIVATIONS_COUNT),
    AI_CIFAR_MODEL_DATA_ACTIVATIONS_SIZE,
    NULL, ptr);
  return buf;
 8013010:	4a08      	ldr	r2, [pc, #32]	@ (8013034 <ai_cifar_model_data_activations_buffer_get+0x24>)
{
 8013012:	b084      	sub	sp, #16
  return buf;
 8013014:	e9c0 2100 	strd	r2, r1, [r0]
 8013018:	2200      	movs	r2, #0
 801301a:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801301e:	f648 6140 	movw	r1, #36416	@ 0x8e40
 8013022:	f240 4201 	movw	r2, #1025	@ 0x401
 8013026:	e9c0 1204 	strd	r1, r2, [r0, #16]
 801302a:	f8c0 d018 	str.w	sp, [r0, #24]
}
 801302e:	b004      	add	sp, #16
 8013030:	4770      	bx	lr
 8013032:	bf00      	nop
 8013034:	00040440 	.word	0x00040440

08013038 <ai_cifar_model_data_weights_buffer_get>:
  ai_buffer buf = AI_BUFFER_INIT(
    AI_FLAG_NONE, AI_BUFFER_FORMAT_U8|AI_BUFFER_FMT_FLAG_CONST,
    AI_BUFFER_SHAPE_INIT(AI_SHAPE_BCWH, 4, 1, AI_CIFAR_MODEL_DATA_WEIGHTS_SIZE, 1, AI_CIFAR_MODEL_DATA_WEIGHTS_COUNT),
    AI_CIFAR_MODEL_DATA_WEIGHTS_SIZE,
    NULL, ptr);
  return buf;
 8013038:	4a07      	ldr	r2, [pc, #28]	@ (8013058 <ai_cifar_model_data_weights_buffer_get+0x20>)
{
 801303a:	b084      	sub	sp, #16
  return buf;
 801303c:	e9c0 2100 	strd	r2, r1, [r0]
 8013040:	4906      	ldr	r1, [pc, #24]	@ (801305c <ai_cifar_model_data_weights_buffer_get+0x24>)
 8013042:	f8c0 d018 	str.w	sp, [r0, #24]
 8013046:	2200      	movs	r2, #0
 8013048:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801304c:	f240 4201 	movw	r2, #1025	@ 0x401
 8013050:	e9c0 1204 	strd	r1, r2, [r0, #16]
}
 8013054:	b004      	add	sp, #16
 8013056:	4770      	bx	lr
 8013058:	40040440 	.word	0x40040440
 801305c:	0004f808 	.word	0x0004f808

08013060 <ai_cifar_model_data_weights_get>:
AI_API_ENTRY
ai_handle ai_cifar_model_data_weights_get(void)
{
  return AI_HANDLE_PTR(g_cifar_model_weights_table);

}
 8013060:	4800      	ldr	r0, [pc, #0]	@ (8013064 <ai_cifar_model_data_weights_get+0x4>)
 8013062:	4770      	bx	lr
 8013064:	20001dac 	.word	0x20001dac

08013068 <ai_version_get>:
 8013068:	0212      	lsls	r2, r2, #8
 801306a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 801306e:	ea42 6000 	orr.w	r0, r2, r0, lsl #24
 8013072:	4770      	bx	lr

08013074 <ai_buffer_get_size>:
 8013074:	b378      	cbz	r0, 80130d6 <ai_buffer_get_size+0x62>
 8013076:	b410      	push	{r4}
 8013078:	6803      	ldr	r3, [r0, #0]
 801307a:	4a17      	ldr	r2, [pc, #92]	@ (80130d8 <ai_buffer_get_size+0x64>)
 801307c:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
 8013080:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8013084:	4293      	cmp	r3, r2
 8013086:	d01e      	beq.n	80130c6 <ai_buffer_get_size+0x52>
 8013088:	6984      	ldr	r4, [r0, #24]
 801308a:	6862      	ldr	r2, [r4, #4]
 801308c:	7d03      	ldrb	r3, [r0, #20]
 801308e:	6941      	ldr	r1, [r0, #20]
 8013090:	f1a3 0301 	sub.w	r3, r3, #1
 8013094:	fab3 f383 	clz	r3, r3
 8013098:	095b      	lsrs	r3, r3, #5
 801309a:	ebb3 2f11 	cmp.w	r3, r1, lsr #8
 801309e:	f3c1 2017 	ubfx	r0, r1, #8, #24
 80130a2:	da0b      	bge.n	80130bc <ai_buffer_get_size+0x48>
 80130a4:	2b01      	cmp	r3, #1
 80130a6:	d102      	bne.n	80130ae <ai_buffer_get_size+0x3a>
 80130a8:	2802      	cmp	r0, #2
 80130aa:	d007      	beq.n	80130bc <ai_buffer_get_size+0x48>
 80130ac:	2302      	movs	r3, #2
 80130ae:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 80130b2:	3301      	adds	r3, #1
 80130b4:	4298      	cmp	r0, r3
 80130b6:	fb01 f202 	mul.w	r2, r1, r2
 80130ba:	d1f3      	bne.n	80130a4 <ai_buffer_get_size+0x30>
 80130bc:	ea22 70e2 	bic.w	r0, r2, r2, asr #31
 80130c0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80130c4:	4770      	bx	lr
 80130c6:	2900      	cmp	r1, #0
 80130c8:	d0de      	beq.n	8013088 <ai_buffer_get_size+0x14>
 80130ca:	6984      	ldr	r4, [r0, #24]
 80130cc:	6862      	ldr	r2, [r4, #4]
 80130ce:	321f      	adds	r2, #31
 80130d0:	f022 021f 	bic.w	r2, r2, #31
 80130d4:	e7da      	b.n	801308c <ai_buffer_get_size+0x18>
 80130d6:	4770      	bx	lr
 80130d8:	000400c0 	.word	0x000400c0

080130dc <ai_buffer_array_sane>:
 80130dc:	b138      	cbz	r0, 80130ee <ai_buffer_array_sane+0x12>
 80130de:	6843      	ldr	r3, [r0, #4]
 80130e0:	b123      	cbz	r3, 80130ec <ai_buffer_array_sane+0x10>
 80130e2:	8840      	ldrh	r0, [r0, #2]
 80130e4:	3800      	subs	r0, #0
 80130e6:	bf18      	it	ne
 80130e8:	2001      	movne	r0, #1
 80130ea:	4770      	bx	lr
 80130ec:	4618      	mov	r0, r3
 80130ee:	4770      	bx	lr

080130f0 <ai_platform_get_weights_map>:
 80130f0:	2a00      	cmp	r2, #0
 80130f2:	d037      	beq.n	8013164 <ai_platform_get_weights_map+0x74>
 80130f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80130f6:	4604      	mov	r4, r0
 80130f8:	b1a0      	cbz	r0, 8013124 <ai_platform_get_weights_map+0x34>
 80130fa:	460f      	mov	r7, r1
 80130fc:	b191      	cbz	r1, 8013124 <ai_platform_get_weights_map+0x34>
 80130fe:	4b25      	ldr	r3, [pc, #148]	@ (8013194 <ai_platform_get_weights_map+0xa4>)
 8013100:	6810      	ldr	r0, [r2, #0]
 8013102:	4298      	cmp	r0, r3
 8013104:	4615      	mov	r5, r2
 8013106:	d00f      	beq.n	8013128 <ai_platform_get_weights_map+0x38>
 8013108:	6855      	ldr	r5, [r2, #4]
 801310a:	b15d      	cbz	r5, 8013124 <ai_platform_get_weights_map+0x34>
 801310c:	682e      	ldr	r6, [r5, #0]
 801310e:	429e      	cmp	r6, r3
 8013110:	d02a      	beq.n	8013168 <ai_platform_get_weights_map+0x78>
 8013112:	f1a1 0001 	sub.w	r0, r1, #1
 8013116:	6025      	str	r5, [r4, #0]
 8013118:	fab0 f080 	clz	r0, r0
 801311c:	0940      	lsrs	r0, r0, #5
 801311e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013120:	42a7      	cmp	r7, r4
 8013122:	d034      	beq.n	801318e <ai_platform_get_weights_map+0x9e>
 8013124:	2000      	movs	r0, #0
 8013126:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013128:	1d10      	adds	r0, r2, #4
 801312a:	f7ff ffd7 	bl	80130dc <ai_buffer_array_sane>
 801312e:	2800      	cmp	r0, #0
 8013130:	d0f8      	beq.n	8013124 <ai_platform_get_weights_map+0x34>
 8013132:	88eb      	ldrh	r3, [r5, #6]
 8013134:	429f      	cmp	r7, r3
 8013136:	d1f5      	bne.n	8013124 <ai_platform_get_weights_map+0x34>
 8013138:	f04f 0c00 	mov.w	ip, #0
 801313c:	1f20      	subs	r0, r4, #4
 801313e:	46e6      	mov	lr, ip
 8013140:	68ab      	ldr	r3, [r5, #8]
 8013142:	4463      	add	r3, ip
 8013144:	f10c 0c1c 	add.w	ip, ip, #28
 8013148:	685b      	ldr	r3, [r3, #4]
 801314a:	b12b      	cbz	r3, 8013158 <ai_platform_get_weights_map+0x68>
 801314c:	f10e 0e01 	add.w	lr, lr, #1
 8013150:	4577      	cmp	r7, lr
 8013152:	f840 3f04 	str.w	r3, [r0, #4]!
 8013156:	d1f3      	bne.n	8013140 <ai_platform_get_weights_map+0x50>
 8013158:	eba7 000e 	sub.w	r0, r7, lr
 801315c:	fab0 f080 	clz	r0, r0
 8013160:	0940      	lsrs	r0, r0, #5
 8013162:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013164:	2000      	movs	r0, #0
 8013166:	4770      	bx	lr
 8013168:	1f20      	subs	r0, r4, #4
 801316a:	462a      	mov	r2, r5
 801316c:	2400      	movs	r4, #0
 801316e:	e000      	b.n	8013172 <ai_platform_get_weights_map+0x82>
 8013170:	461c      	mov	r4, r3
 8013172:	f852 3f04 	ldr.w	r3, [r2, #4]!
 8013176:	42b3      	cmp	r3, r6
 8013178:	d0d2      	beq.n	8013120 <ai_platform_get_weights_map+0x30>
 801317a:	f840 3f04 	str.w	r3, [r0, #4]!
 801317e:	1c63      	adds	r3, r4, #1
 8013180:	429f      	cmp	r7, r3
 8013182:	d1f5      	bne.n	8013170 <ai_platform_get_weights_map+0x80>
 8013184:	3402      	adds	r4, #2
 8013186:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 801318a:	42b3      	cmp	r3, r6
 801318c:	d1ca      	bne.n	8013124 <ai_platform_get_weights_map+0x34>
 801318e:	2001      	movs	r0, #1
 8013190:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013192:	bf00      	nop
 8013194:	a1facade 	.word	0xa1facade

08013198 <ai_platform_get_activations_map>:
 8013198:	2a00      	cmp	r2, #0
 801319a:	d038      	beq.n	801320e <ai_platform_get_activations_map+0x76>
 801319c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801319e:	4604      	mov	r4, r0
 80131a0:	b1a0      	cbz	r0, 80131cc <ai_platform_get_activations_map+0x34>
 80131a2:	460f      	mov	r7, r1
 80131a4:	b191      	cbz	r1, 80131cc <ai_platform_get_activations_map+0x34>
 80131a6:	4b25      	ldr	r3, [pc, #148]	@ (801323c <ai_platform_get_activations_map+0xa4>)
 80131a8:	6810      	ldr	r0, [r2, #0]
 80131aa:	4298      	cmp	r0, r3
 80131ac:	4615      	mov	r5, r2
 80131ae:	d00f      	beq.n	80131d0 <ai_platform_get_activations_map+0x38>
 80131b0:	6a15      	ldr	r5, [r2, #32]
 80131b2:	b15d      	cbz	r5, 80131cc <ai_platform_get_activations_map+0x34>
 80131b4:	682e      	ldr	r6, [r5, #0]
 80131b6:	429e      	cmp	r6, r3
 80131b8:	d02b      	beq.n	8013212 <ai_platform_get_activations_map+0x7a>
 80131ba:	f1a1 0001 	sub.w	r0, r1, #1
 80131be:	6025      	str	r5, [r4, #0]
 80131c0:	fab0 f080 	clz	r0, r0
 80131c4:	0940      	lsrs	r0, r0, #5
 80131c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80131c8:	42a7      	cmp	r7, r4
 80131ca:	d035      	beq.n	8013238 <ai_platform_get_activations_map+0xa0>
 80131cc:	2000      	movs	r0, #0
 80131ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80131d0:	f102 000c 	add.w	r0, r2, #12
 80131d4:	f7ff ff82 	bl	80130dc <ai_buffer_array_sane>
 80131d8:	2800      	cmp	r0, #0
 80131da:	d0f7      	beq.n	80131cc <ai_platform_get_activations_map+0x34>
 80131dc:	89eb      	ldrh	r3, [r5, #14]
 80131de:	429f      	cmp	r7, r3
 80131e0:	d1f4      	bne.n	80131cc <ai_platform_get_activations_map+0x34>
 80131e2:	f04f 0c00 	mov.w	ip, #0
 80131e6:	1f20      	subs	r0, r4, #4
 80131e8:	46e6      	mov	lr, ip
 80131ea:	692b      	ldr	r3, [r5, #16]
 80131ec:	4463      	add	r3, ip
 80131ee:	f10c 0c1c 	add.w	ip, ip, #28
 80131f2:	685b      	ldr	r3, [r3, #4]
 80131f4:	b12b      	cbz	r3, 8013202 <ai_platform_get_activations_map+0x6a>
 80131f6:	f10e 0e01 	add.w	lr, lr, #1
 80131fa:	4577      	cmp	r7, lr
 80131fc:	f840 3f04 	str.w	r3, [r0, #4]!
 8013200:	d1f3      	bne.n	80131ea <ai_platform_get_activations_map+0x52>
 8013202:	eba7 000e 	sub.w	r0, r7, lr
 8013206:	fab0 f080 	clz	r0, r0
 801320a:	0940      	lsrs	r0, r0, #5
 801320c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801320e:	2000      	movs	r0, #0
 8013210:	4770      	bx	lr
 8013212:	1f20      	subs	r0, r4, #4
 8013214:	462a      	mov	r2, r5
 8013216:	2400      	movs	r4, #0
 8013218:	e000      	b.n	801321c <ai_platform_get_activations_map+0x84>
 801321a:	461c      	mov	r4, r3
 801321c:	f852 3f04 	ldr.w	r3, [r2, #4]!
 8013220:	42b3      	cmp	r3, r6
 8013222:	d0d1      	beq.n	80131c8 <ai_platform_get_activations_map+0x30>
 8013224:	f840 3f04 	str.w	r3, [r0, #4]!
 8013228:	1c63      	adds	r3, r4, #1
 801322a:	429f      	cmp	r7, r3
 801322c:	d1f5      	bne.n	801321a <ai_platform_get_activations_map+0x82>
 801322e:	3402      	adds	r4, #2
 8013230:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8013234:	42b3      	cmp	r3, r6
 8013236:	d1c9      	bne.n	80131cc <ai_platform_get_activations_map+0x34>
 8013238:	2001      	movs	r0, #1
 801323a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801323c:	a1facade 	.word	0xa1facade

08013240 <ai_platform_network_set_error>:
 8013240:	b110      	cbz	r0, 8013248 <ai_platform_network_set_error+0x8>
 8013242:	300c      	adds	r0, #12
 8013244:	f000 ba2e 	b.w	80136a4 <core_set_error>
 8013248:	4770      	bx	lr
 801324a:	bf00      	nop

0801324c <ai_platform_inputs_get>:
 801324c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013250:	4b38      	ldr	r3, [pc, #224]	@ (8013334 <ai_platform_inputs_get+0xe8>)
 8013252:	6802      	ldr	r2, [r0, #0]
 8013254:	b085      	sub	sp, #20
 8013256:	4393      	bics	r3, r2
 8013258:	9003      	str	r0, [sp, #12]
 801325a:	9102      	str	r1, [sp, #8]
 801325c:	d160      	bne.n	8013320 <ai_platform_inputs_get+0xd4>
 801325e:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 8013260:	2b00      	cmp	r3, #0
 8013262:	d04f      	beq.n	8013304 <ai_platform_inputs_get+0xb8>
 8013264:	f8d0 a034 	ldr.w	sl, [r0, #52]	@ 0x34
 8013268:	f1ba 0f00 	cmp.w	sl, #0
 801326c:	d04a      	beq.n	8013304 <ai_platform_inputs_get+0xb8>
 801326e:	f04f 0b00 	mov.w	fp, #0
 8013272:	465d      	mov	r5, fp
 8013274:	e016      	b.n	80132a4 <ai_platform_inputs_get+0x58>
 8013276:	9901      	ldr	r1, [sp, #4]
 8013278:	2201      	movs	r2, #1
 801327a:	507a      	str	r2, [r7, r1]
 801327c:	69b1      	ldr	r1, [r6, #24]
 801327e:	684e      	ldr	r6, [r1, #4]
 8013280:	60a3      	str	r3, [r4, #8]
 8013282:	f04f 0201 	mov.w	r2, #1
 8013286:	7522      	strb	r2, [r4, #20]
 8013288:	6961      	ldr	r1, [r4, #20]
 801328a:	6020      	str	r0, [r4, #0]
 801328c:	f369 211f 	bfi	r1, r9, #8, #24
 8013290:	2300      	movs	r3, #0
 8013292:	e9c4 3603 	strd	r3, r6, [r4, #12]
 8013296:	e9c4 1805 	strd	r1, r8, [r4, #20]
 801329a:	f8c4 c004 	str.w	ip, [r4, #4]
 801329e:	3501      	adds	r5, #1
 80132a0:	f10b 0b1c 	add.w	fp, fp, #28
 80132a4:	f8ba 3000 	ldrh.w	r3, [sl]
 80132a8:	42ab      	cmp	r3, r5
 80132aa:	b2aa      	uxth	r2, r5
 80132ac:	d93c      	bls.n	8013328 <ai_platform_inputs_get+0xdc>
 80132ae:	f8da 3004 	ldr.w	r3, [sl, #4]
 80132b2:	00e9      	lsls	r1, r5, #3
 80132b4:	9101      	str	r1, [sp, #4]
 80132b6:	2b00      	cmp	r3, #0
 80132b8:	d036      	beq.n	8013328 <ai_platform_inputs_get+0xdc>
 80132ba:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
 80132be:	2e00      	cmp	r6, #0
 80132c0:	d032      	beq.n	8013328 <ai_platform_inputs_get+0xdc>
 80132c2:	f8da 3008 	ldr.w	r3, [sl, #8]
 80132c6:	69b2      	ldr	r2, [r6, #24]
 80132c8:	f8d6 800c 	ldr.w	r8, [r6, #12]
 80132cc:	6810      	ldr	r0, [r2, #0]
 80132ce:	e9d3 4701 	ldrd	r4, r7, [r3, #4]
 80132d2:	68b3      	ldr	r3, [r6, #8]
 80132d4:	f3c3 2917 	ubfx	r9, r3, #8, #24
 80132d8:	f00e fa50 	bl	802177c <ai_array_to_buffer_fmt>
 80132dc:	69b1      	ldr	r1, [r6, #24]
 80132de:	eb07 03c5 	add.w	r3, r7, r5, lsl #3
 80132e2:	f8d1 c008 	ldr.w	ip, [r1, #8]
 80132e6:	445c      	add	r4, fp
 80132e8:	2b00      	cmp	r3, #0
 80132ea:	d0c8      	beq.n	801327e <ai_platform_inputs_get+0x32>
 80132ec:	2100      	movs	r1, #0
 80132ee:	f847 1035 	str.w	r1, [r7, r5, lsl #3]
 80132f2:	6831      	ldr	r1, [r6, #0]
 80132f4:	6059      	str	r1, [r3, #4]
 80132f6:	b111      	cbz	r1, 80132fe <ai_platform_inputs_get+0xb2>
 80132f8:	8849      	ldrh	r1, [r1, #2]
 80132fa:	2900      	cmp	r1, #0
 80132fc:	d1bb      	bne.n	8013276 <ai_platform_inputs_get+0x2a>
 80132fe:	69b1      	ldr	r1, [r6, #24]
 8013300:	2300      	movs	r3, #0
 8013302:	e7bc      	b.n	801327e <ai_platform_inputs_get+0x32>
 8013304:	9803      	ldr	r0, [sp, #12]
 8013306:	2218      	movs	r2, #24
 8013308:	2111      	movs	r1, #17
 801330a:	300c      	adds	r0, #12
 801330c:	f000 f9ca 	bl	80136a4 <core_set_error>
 8013310:	2200      	movs	r2, #0
 8013312:	4610      	mov	r0, r2
 8013314:	9b02      	ldr	r3, [sp, #8]
 8013316:	b103      	cbz	r3, 801331a <ai_platform_inputs_get+0xce>
 8013318:	801a      	strh	r2, [r3, #0]
 801331a:	b005      	add	sp, #20
 801331c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013320:	2000      	movs	r0, #0
 8013322:	b005      	add	sp, #20
 8013324:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013328:	2a00      	cmp	r2, #0
 801332a:	d0eb      	beq.n	8013304 <ai_platform_inputs_get+0xb8>
 801332c:	f8da 3008 	ldr.w	r3, [sl, #8]
 8013330:	6858      	ldr	r0, [r3, #4]
 8013332:	e7ef      	b.n	8013314 <ai_platform_inputs_get+0xc8>
 8013334:	a1c00100 	.word	0xa1c00100

08013338 <ai_platform_outputs_get>:
 8013338:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801333c:	4b37      	ldr	r3, [pc, #220]	@ (801341c <ai_platform_outputs_get+0xe4>)
 801333e:	6802      	ldr	r2, [r0, #0]
 8013340:	b085      	sub	sp, #20
 8013342:	4393      	bics	r3, r2
 8013344:	9003      	str	r0, [sp, #12]
 8013346:	9102      	str	r1, [sp, #8]
 8013348:	d15d      	bne.n	8013406 <ai_platform_outputs_get+0xce>
 801334a:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 801334c:	2b01      	cmp	r3, #1
 801334e:	d94c      	bls.n	80133ea <ai_platform_outputs_get+0xb2>
 8013350:	f04f 0b00 	mov.w	fp, #0
 8013354:	f8d0 a034 	ldr.w	sl, [r0, #52]	@ 0x34
 8013358:	465d      	mov	r5, fp
 801335a:	46d8      	mov	r8, fp
 801335c:	e016      	b.n	801338c <ai_platform_outputs_get+0x54>
 801335e:	9a01      	ldr	r2, [sp, #4]
 8013360:	2101      	movs	r1, #1
 8013362:	50b9      	str	r1, [r7, r2]
 8013364:	69b2      	ldr	r2, [r6, #24]
 8013366:	6856      	ldr	r6, [r2, #4]
 8013368:	6020      	str	r0, [r4, #0]
 801336a:	f04f 0201 	mov.w	r2, #1
 801336e:	7522      	strb	r2, [r4, #20]
 8013370:	6960      	ldr	r0, [r4, #20]
 8013372:	f8c4 c004 	str.w	ip, [r4, #4]
 8013376:	f369 201f 	bfi	r0, r9, #8, #24
 801337a:	e9c4 6004 	strd	r6, r0, [r4, #16]
 801337e:	e9c4 3802 	strd	r3, r8, [r4, #8]
 8013382:	9b00      	ldr	r3, [sp, #0]
 8013384:	61a3      	str	r3, [r4, #24]
 8013386:	3501      	adds	r5, #1
 8013388:	f10b 0b1c 	add.w	fp, fp, #28
 801338c:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 8013390:	42ab      	cmp	r3, r5
 8013392:	b2aa      	uxth	r2, r5
 8013394:	d93b      	bls.n	801340e <ai_platform_outputs_get+0xd6>
 8013396:	f8da 3010 	ldr.w	r3, [sl, #16]
 801339a:	00e9      	lsls	r1, r5, #3
 801339c:	9101      	str	r1, [sp, #4]
 801339e:	2b00      	cmp	r3, #0
 80133a0:	d035      	beq.n	801340e <ai_platform_outputs_get+0xd6>
 80133a2:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
 80133a6:	2e00      	cmp	r6, #0
 80133a8:	d031      	beq.n	801340e <ai_platform_outputs_get+0xd6>
 80133aa:	f8da 3014 	ldr.w	r3, [sl, #20]
 80133ae:	69b2      	ldr	r2, [r6, #24]
 80133b0:	e9d3 4701 	ldrd	r4, r7, [r3, #4]
 80133b4:	68b3      	ldr	r3, [r6, #8]
 80133b6:	6810      	ldr	r0, [r2, #0]
 80133b8:	f3c3 2917 	ubfx	r9, r3, #8, #24
 80133bc:	68f3      	ldr	r3, [r6, #12]
 80133be:	9300      	str	r3, [sp, #0]
 80133c0:	f00e f9dc 	bl	802177c <ai_array_to_buffer_fmt>
 80133c4:	69b2      	ldr	r2, [r6, #24]
 80133c6:	eb07 03c5 	add.w	r3, r7, r5, lsl #3
 80133ca:	f8d2 c008 	ldr.w	ip, [r2, #8]
 80133ce:	445c      	add	r4, fp
 80133d0:	2b00      	cmp	r3, #0
 80133d2:	d0c8      	beq.n	8013366 <ai_platform_outputs_get+0x2e>
 80133d4:	f847 8035 	str.w	r8, [r7, r5, lsl #3]
 80133d8:	6832      	ldr	r2, [r6, #0]
 80133da:	605a      	str	r2, [r3, #4]
 80133dc:	b112      	cbz	r2, 80133e4 <ai_platform_outputs_get+0xac>
 80133de:	8852      	ldrh	r2, [r2, #2]
 80133e0:	2a00      	cmp	r2, #0
 80133e2:	d1bc      	bne.n	801335e <ai_platform_outputs_get+0x26>
 80133e4:	69b2      	ldr	r2, [r6, #24]
 80133e6:	2300      	movs	r3, #0
 80133e8:	e7bd      	b.n	8013366 <ai_platform_outputs_get+0x2e>
 80133ea:	9803      	ldr	r0, [sp, #12]
 80133ec:	2218      	movs	r2, #24
 80133ee:	2111      	movs	r1, #17
 80133f0:	300c      	adds	r0, #12
 80133f2:	f000 f957 	bl	80136a4 <core_set_error>
 80133f6:	2200      	movs	r2, #0
 80133f8:	4610      	mov	r0, r2
 80133fa:	9b02      	ldr	r3, [sp, #8]
 80133fc:	b103      	cbz	r3, 8013400 <ai_platform_outputs_get+0xc8>
 80133fe:	801a      	strh	r2, [r3, #0]
 8013400:	b005      	add	sp, #20
 8013402:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013406:	2000      	movs	r0, #0
 8013408:	b005      	add	sp, #20
 801340a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801340e:	2a00      	cmp	r2, #0
 8013410:	d0eb      	beq.n	80133ea <ai_platform_outputs_get+0xb2>
 8013412:	f8da 3014 	ldr.w	r3, [sl, #20]
 8013416:	6858      	ldr	r0, [r3, #4]
 8013418:	e7ef      	b.n	80133fa <ai_platform_outputs_get+0xc2>
 801341a:	bf00      	nop
 801341c:	a1c00100 	.word	0xa1c00100

08013420 <ai_platform_network_create>:
 8013420:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013424:	b083      	sub	sp, #12
 8013426:	f89d 9028 	ldrb.w	r9, [sp, #40]	@ 0x28
 801342a:	f89d 802c 	ldrb.w	r8, [sp, #44]	@ 0x2c
 801342e:	b320      	cbz	r0, 801347a <ai_platform_network_create+0x5a>
 8013430:	6002      	str	r2, [r0, #0]
 8013432:	4616      	mov	r6, r2
 8013434:	461f      	mov	r7, r3
 8013436:	4604      	mov	r4, r0
 8013438:	f000 f932 	bl	80136a0 <core_init>
 801343c:	b970      	cbnz	r0, 801345c <ai_platform_network_create+0x3c>
 801343e:	2530      	movs	r5, #48	@ 0x30
 8013440:	2300      	movs	r3, #0
 8013442:	6023      	str	r3, [r4, #0]
 8013444:	2410      	movs	r4, #16
 8013446:	4642      	mov	r2, r8
 8013448:	4649      	mov	r1, r9
 801344a:	4638      	mov	r0, r7
 801344c:	f7ff fe0c 	bl	8013068 <ai_version_get>
 8013450:	60b0      	str	r0, [r6, #8]
 8013452:	ea45 2004 	orr.w	r0, r5, r4, lsl #8
 8013456:	b003      	add	sp, #12
 8013458:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801345c:	2200      	movs	r2, #0
 801345e:	4649      	mov	r1, r9
 8013460:	4638      	mov	r0, r7
 8013462:	f7ff fe01 	bl	8013068 <ai_version_get>
 8013466:	2200      	movs	r2, #0
 8013468:	4605      	mov	r5, r0
 801346a:	2105      	movs	r1, #5
 801346c:	2001      	movs	r0, #1
 801346e:	f7ff fdfb 	bl	8013068 <ai_version_get>
 8013472:	4285      	cmp	r5, r0
 8013474:	d008      	beq.n	8013488 <ai_platform_network_create+0x68>
 8013476:	2501      	movs	r5, #1
 8013478:	e7e2      	b.n	8013440 <ai_platform_network_create+0x20>
 801347a:	2510      	movs	r5, #16
 801347c:	462c      	mov	r4, r5
 801347e:	ea45 2004 	orr.w	r0, r5, r4, lsl #8
 8013482:	b003      	add	sp, #12
 8013484:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013488:	4b05      	ldr	r3, [pc, #20]	@ (80134a0 <ai_platform_network_create+0x80>)
 801348a:	9301      	str	r3, [sp, #4]
 801348c:	a801      	add	r0, sp, #4
 801348e:	f000 f915 	bl	80136bc <ai_check_custom_types>
 8013492:	b110      	cbz	r0, 801349a <ai_platform_network_create+0x7a>
 8013494:	2400      	movs	r4, #0
 8013496:	4625      	mov	r5, r4
 8013498:	e7d5      	b.n	8013446 <ai_platform_network_create+0x26>
 801349a:	2502      	movs	r5, #2
 801349c:	e7d0      	b.n	8013440 <ai_platform_network_create+0x20>
 801349e:	bf00      	nop
 80134a0:	84048403 	.word	0x84048403

080134a4 <ai_platform_network_init>:
 80134a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80134a8:	4b63      	ldr	r3, [pc, #396]	@ (8013638 <ai_platform_network_init+0x194>)
 80134aa:	6802      	ldr	r2, [r0, #0]
 80134ac:	4393      	bics	r3, r2
 80134ae:	b083      	sub	sp, #12
 80134b0:	d156      	bne.n	8013560 <ai_platform_network_init+0xbc>
 80134b2:	4604      	mov	r4, r0
 80134b4:	460f      	mov	r7, r1
 80134b6:	2900      	cmp	r1, #0
 80134b8:	f000 80a9 	beq.w	801360e <ai_platform_network_init+0x16a>
 80134bc:	680b      	ldr	r3, [r1, #0]
 80134be:	495f      	ldr	r1, [pc, #380]	@ (801363c <ai_platform_network_init+0x198>)
 80134c0:	428b      	cmp	r3, r1
 80134c2:	d113      	bne.n	80134ec <ai_platform_network_init+0x48>
 80134c4:	495c      	ldr	r1, [pc, #368]	@ (8013638 <ai_platform_network_init+0x194>)
 80134c6:	89bd      	ldrh	r5, [r7, #12]
 80134c8:	f8b7 a00e 	ldrh.w	sl, [r7, #14]
 80134cc:	f8d7 8010 	ldr.w	r8, [r7, #16]
 80134d0:	f8b7 b004 	ldrh.w	fp, [r7, #4]
 80134d4:	f8b7 9006 	ldrh.w	r9, [r7, #6]
 80134d8:	68be      	ldr	r6, [r7, #8]
 80134da:	428a      	cmp	r2, r1
 80134dc:	d02c      	beq.n	8013538 <ai_platform_network_init+0x94>
 80134de:	2303      	movs	r3, #3
 80134e0:	6123      	str	r3, [r4, #16]
 80134e2:	4627      	mov	r7, r4
 80134e4:	4638      	mov	r0, r7
 80134e6:	b003      	add	sp, #12
 80134e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80134ec:	2101      	movs	r1, #1
 80134ee:	4638      	mov	r0, r7
 80134f0:	9301      	str	r3, [sp, #4]
 80134f2:	f8d7 b004 	ldr.w	fp, [r7, #4]
 80134f6:	f7ff fdbd 	bl	8013074 <ai_buffer_get_size>
 80134fa:	f107 081c 	add.w	r8, r7, #28
 80134fe:	4605      	mov	r5, r0
 8013500:	2101      	movs	r1, #1
 8013502:	4640      	mov	r0, r8
 8013504:	463e      	mov	r6, r7
 8013506:	6a3f      	ldr	r7, [r7, #32]
 8013508:	f7ff fdb4 	bl	8013074 <ai_buffer_get_size>
 801350c:	2d00      	cmp	r5, #0
 801350e:	9b01      	ldr	r3, [sp, #4]
 8013510:	bf0a      	itet	eq
 8013512:	46a9      	moveq	r9, r5
 8013514:	f04f 0901 	movne.w	r9, #1
 8013518:	462e      	moveq	r6, r5
 801351a:	b330      	cbz	r0, 801356a <ai_platform_network_init+0xc6>
 801351c:	2f00      	cmp	r7, #0
 801351e:	f000 8084 	beq.w	801362a <ai_platform_network_init+0x186>
 8013522:	f04f 0a01 	mov.w	sl, #1
 8013526:	f1bb 0f00 	cmp.w	fp, #0
 801352a:	d021      	beq.n	8013570 <ai_platform_network_init+0xcc>
 801352c:	2500      	movs	r5, #0
 801352e:	6822      	ldr	r2, [r4, #0]
 8013530:	4941      	ldr	r1, [pc, #260]	@ (8013638 <ai_platform_network_init+0x194>)
 8013532:	428a      	cmp	r2, r1
 8013534:	46ab      	mov	fp, r5
 8013536:	d1d2      	bne.n	80134de <ai_platform_network_init+0x3a>
 8013538:	8c62      	ldrh	r2, [r4, #34]	@ 0x22
 801353a:	454a      	cmp	r2, r9
 801353c:	4a3f      	ldr	r2, [pc, #252]	@ (801363c <ai_platform_network_init+0x198>)
 801353e:	d221      	bcs.n	8013584 <ai_platform_network_init+0xe0>
 8013540:	4293      	cmp	r3, r2
 8013542:	d15c      	bne.n	80135fe <ai_platform_network_init+0x15a>
 8013544:	6266      	str	r6, [r4, #36]	@ 0x24
 8013546:	f8a4 9022 	strh.w	r9, [r4, #34]	@ 0x22
 801354a:	f8a4 b020 	strh.w	fp, [r4, #32]
 801354e:	f8c4 802c 	str.w	r8, [r4, #44]	@ 0x2c
 8013552:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
 8013556:	8525      	strh	r5, [r4, #40]	@ 0x28
 8013558:	4620      	mov	r0, r4
 801355a:	f000 f8d9 	bl	8013710 <ai_layers_init_all>
 801355e:	e7be      	b.n	80134de <ai_platform_network_init+0x3a>
 8013560:	2700      	movs	r7, #0
 8013562:	4638      	mov	r0, r7
 8013564:	b003      	add	sp, #12
 8013566:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801356a:	4680      	mov	r8, r0
 801356c:	4682      	mov	sl, r0
 801356e:	e7da      	b.n	8013526 <ai_platform_network_init+0x82>
 8013570:	2d00      	cmp	r5, #0
 8013572:	d0dc      	beq.n	801352e <ai_platform_network_init+0x8a>
 8013574:	2212      	movs	r2, #18
 8013576:	2110      	movs	r1, #16
 8013578:	f104 000c 	add.w	r0, r4, #12
 801357c:	f000 f892 	bl	80136a4 <core_set_error>
 8013580:	465f      	mov	r7, fp
 8013582:	e7af      	b.n	80134e4 <ai_platform_network_init+0x40>
 8013584:	4293      	cmp	r3, r2
 8013586:	d0dd      	beq.n	8013544 <ai_platform_network_init+0xa0>
 8013588:	f1b9 0f00 	cmp.w	r9, #0
 801358c:	d018      	beq.n	80135c0 <ai_platform_network_init+0x11c>
 801358e:	ebc9 03c9 	rsb	r3, r9, r9, lsl #3
 8013592:	009b      	lsls	r3, r3, #2
 8013594:	f8cd 9004 	str.w	r9, [sp, #4]
 8013598:	2700      	movs	r7, #0
 801359a:	4699      	mov	r9, r3
 801359c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 801359e:	eb06 0e07 	add.w	lr, r6, r7
 80135a2:	eb03 0c07 	add.w	ip, r3, r7
 80135a6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80135aa:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80135ae:	e89e 0007 	ldmia.w	lr, {r0, r1, r2}
 80135b2:	371c      	adds	r7, #28
 80135b4:	45b9      	cmp	r9, r7
 80135b6:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 80135ba:	d1ef      	bne.n	801359c <ai_platform_network_init+0xf8>
 80135bc:	f8dd 9004 	ldr.w	r9, [sp, #4]
 80135c0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80135c2:	f8a4 9022 	strh.w	r9, [r4, #34]	@ 0x22
 80135c6:	4553      	cmp	r3, sl
 80135c8:	f8a4 b020 	strh.w	fp, [r4, #32]
 80135cc:	d325      	bcc.n	801361a <ai_platform_network_init+0x176>
 80135ce:	f1ba 0f00 	cmp.w	sl, #0
 80135d2:	d0be      	beq.n	8013552 <ai_platform_network_init+0xae>
 80135d4:	ebca 0eca 	rsb	lr, sl, sl, lsl #3
 80135d8:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80135dc:	f04f 0c00 	mov.w	ip, #0
 80135e0:	eb08 070c 	add.w	r7, r8, ip
 80135e4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80135e6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80135e8:	4466      	add	r6, ip
 80135ea:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80135ec:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80135f0:	f10c 0c1c 	add.w	ip, ip, #28
 80135f4:	45f4      	cmp	ip, lr
 80135f6:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 80135fa:	d1f1      	bne.n	80135e0 <ai_platform_network_init+0x13c>
 80135fc:	e7a9      	b.n	8013552 <ai_platform_network_init+0xae>
 80135fe:	2212      	movs	r2, #18
 8013600:	2116      	movs	r1, #22
 8013602:	f104 000c 	add.w	r0, r4, #12
 8013606:	f000 f84d 	bl	80136a4 <core_set_error>
 801360a:	2700      	movs	r7, #0
 801360c:	e76a      	b.n	80134e4 <ai_platform_network_init+0x40>
 801360e:	2211      	movs	r2, #17
 8013610:	2110      	movs	r1, #16
 8013612:	300c      	adds	r0, #12
 8013614:	f000 f846 	bl	80136a4 <core_set_error>
 8013618:	e764      	b.n	80134e4 <ai_platform_network_init+0x40>
 801361a:	2213      	movs	r2, #19
 801361c:	2116      	movs	r1, #22
 801361e:	f104 000c 	add.w	r0, r4, #12
 8013622:	f000 f83f 	bl	80136a4 <core_set_error>
 8013626:	2700      	movs	r7, #0
 8013628:	e75c      	b.n	80134e4 <ai_platform_network_init+0x40>
 801362a:	2213      	movs	r2, #19
 801362c:	2110      	movs	r1, #16
 801362e:	f104 000c 	add.w	r0, r4, #12
 8013632:	f000 f837 	bl	80136a4 <core_set_error>
 8013636:	e755      	b.n	80134e4 <ai_platform_network_init+0x40>
 8013638:	a1c00100 	.word	0xa1c00100
 801363c:	a1facade 	.word	0xa1facade

08013640 <ai_platform_network_post_init>:
 8013640:	b538      	push	{r3, r4, r5, lr}
 8013642:	4b16      	ldr	r3, [pc, #88]	@ (801369c <ai_platform_network_post_init+0x5c>)
 8013644:	6802      	ldr	r2, [r0, #0]
 8013646:	ea02 0103 	and.w	r1, r2, r3
 801364a:	4393      	bics	r3, r2
 801364c:	d108      	bne.n	8013660 <ai_platform_network_post_init+0x20>
 801364e:	6903      	ldr	r3, [r0, #16]
 8013650:	f013 0502 	ands.w	r5, r3, #2
 8013654:	4604      	mov	r4, r0
 8013656:	d005      	beq.n	8013664 <ai_platform_network_post_init+0x24>
 8013658:	428a      	cmp	r2, r1
 801365a:	d00a      	beq.n	8013672 <ai_platform_network_post_init+0x32>
 801365c:	2001      	movs	r0, #1
 801365e:	bd38      	pop	{r3, r4, r5, pc}
 8013660:	2000      	movs	r0, #0
 8013662:	bd38      	pop	{r3, r4, r5, pc}
 8013664:	2210      	movs	r2, #16
 8013666:	2111      	movs	r1, #17
 8013668:	300c      	adds	r0, #12
 801366a:	f000 f81b 	bl	80136a4 <core_set_error>
 801366e:	4628      	mov	r0, r5
 8013670:	bd38      	pop	{r3, r4, r5, pc}
 8013672:	f000 f85b 	bl	801372c <ai_layers_post_init_all>
 8013676:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8013678:	2b00      	cmp	r3, #0
 801367a:	d0ef      	beq.n	801365c <ai_platform_network_post_init+0x1c>
 801367c:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
 801367e:	e008      	b.n	8013692 <ai_platform_network_post_init+0x52>
 8013680:	e9d4 3210 	ldrd	r3, r2, [r4, #64]	@ 0x40
 8013684:	4798      	blx	r3
 8013686:	692b      	ldr	r3, [r5, #16]
 8013688:	42ab      	cmp	r3, r5
 801368a:	d0e7      	beq.n	801365c <ai_platform_network_post_init+0x1c>
 801368c:	2b00      	cmp	r3, #0
 801368e:	d0e5      	beq.n	801365c <ai_platform_network_post_init+0x1c>
 8013690:	461d      	mov	r5, r3
 8013692:	4629      	mov	r1, r5
 8013694:	2000      	movs	r0, #0
 8013696:	2d00      	cmp	r5, #0
 8013698:	d1f2      	bne.n	8013680 <ai_platform_network_post_init+0x40>
 801369a:	e7df      	b.n	801365c <ai_platform_network_post_init+0x1c>
 801369c:	a1c00100 	.word	0xa1c00100

080136a0 <core_init>:
 80136a0:	2001      	movs	r0, #1
 80136a2:	4770      	bx	lr

080136a4 <core_set_error>:
 80136a4:	4603      	mov	r3, r0
 80136a6:	7800      	ldrb	r0, [r0, #0]
 80136a8:	b108      	cbz	r0, 80136ae <core_set_error+0xa>
 80136aa:	2000      	movs	r0, #0
 80136ac:	4770      	bx	lr
 80136ae:	7019      	strb	r1, [r3, #0]
 80136b0:	6819      	ldr	r1, [r3, #0]
 80136b2:	f362 211f 	bfi	r1, r2, #8, #24
 80136b6:	2001      	movs	r0, #1
 80136b8:	6019      	str	r1, [r3, #0]
 80136ba:	4770      	bx	lr

080136bc <ai_check_custom_types>:
 80136bc:	b082      	sub	sp, #8
 80136be:	4b13      	ldr	r3, [pc, #76]	@ (801370c <ai_check_custom_types+0x50>)
 80136c0:	9301      	str	r3, [sp, #4]
 80136c2:	b118      	cbz	r0, 80136cc <ai_check_custom_types+0x10>
 80136c4:	7803      	ldrb	r3, [r0, #0]
 80136c6:	2b03      	cmp	r3, #3
 80136c8:	d002      	beq.n	80136d0 <ai_check_custom_types+0x14>
 80136ca:	2000      	movs	r0, #0
 80136cc:	b002      	add	sp, #8
 80136ce:	4770      	bx	lr
 80136d0:	f89d 2004 	ldrb.w	r2, [sp, #4]
 80136d4:	4293      	cmp	r3, r2
 80136d6:	d004      	beq.n	80136e2 <ai_check_custom_types+0x26>
 80136d8:	2001      	movs	r0, #1
 80136da:	f080 0001 	eor.w	r0, r0, #1
 80136de:	b002      	add	sp, #8
 80136e0:	4770      	bx	lr
 80136e2:	7842      	ldrb	r2, [r0, #1]
 80136e4:	f89d 3005 	ldrb.w	r3, [sp, #5]
 80136e8:	429a      	cmp	r2, r3
 80136ea:	f100 0001 	add.w	r0, r0, #1
 80136ee:	d1f3      	bne.n	80136d8 <ai_check_custom_types+0x1c>
 80136f0:	f810 2f01 	ldrb.w	r2, [r0, #1]!
 80136f4:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80136f8:	429a      	cmp	r2, r3
 80136fa:	d1ed      	bne.n	80136d8 <ai_check_custom_types+0x1c>
 80136fc:	7842      	ldrb	r2, [r0, #1]
 80136fe:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8013702:	429a      	cmp	r2, r3
 8013704:	d1e8      	bne.n	80136d8 <ai_check_custom_types+0x1c>
 8013706:	2000      	movs	r0, #0
 8013708:	e7e7      	b.n	80136da <ai_check_custom_types+0x1e>
 801370a:	bf00      	nop
 801370c:	84048403 	.word	0x84048403

08013710 <ai_layers_init_all>:
 8013710:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8013712:	2100      	movs	r1, #0
 8013714:	b143      	cbz	r3, 8013728 <ai_layers_init_all+0x18>
 8013716:	691a      	ldr	r2, [r3, #16]
 8013718:	60d8      	str	r0, [r3, #12]
 801371a:	429a      	cmp	r2, r3
 801371c:	f101 0101 	add.w	r1, r1, #1
 8013720:	d002      	beq.n	8013728 <ai_layers_init_all+0x18>
 8013722:	b10a      	cbz	r2, 8013728 <ai_layers_init_all+0x18>
 8013724:	4613      	mov	r3, r2
 8013726:	e7f5      	b.n	8013714 <ai_layers_init_all+0x4>
 8013728:	4608      	mov	r0, r1
 801372a:	4770      	bx	lr

0801372c <ai_layers_post_init_all>:
 801372c:	b538      	push	{r3, r4, r5, lr}
 801372e:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 8013730:	2500      	movs	r5, #0
 8013732:	b16c      	cbz	r4, 8013750 <ai_layers_post_init_all+0x24>
 8013734:	6863      	ldr	r3, [r4, #4]
 8013736:	07db      	lsls	r3, r3, #31
 8013738:	d504      	bpl.n	8013744 <ai_layers_post_init_all+0x18>
 801373a:	6a23      	ldr	r3, [r4, #32]
 801373c:	4620      	mov	r0, r4
 801373e:	b10b      	cbz	r3, 8013744 <ai_layers_post_init_all+0x18>
 8013740:	4798      	blx	r3
 8013742:	3501      	adds	r5, #1
 8013744:	6923      	ldr	r3, [r4, #16]
 8013746:	42a3      	cmp	r3, r4
 8013748:	d002      	beq.n	8013750 <ai_layers_post_init_all+0x24>
 801374a:	b10b      	cbz	r3, 8013750 <ai_layers_post_init_all+0x24>
 801374c:	461c      	mov	r4, r3
 801374e:	e7f0      	b.n	8013732 <ai_layers_post_init_all+0x6>
 8013750:	4628      	mov	r0, r5
 8013752:	bd38      	pop	{r3, r4, r5, pc}

08013754 <forward_conv2d_rgb_sssa8_ch>:
 8013754:	6982      	ldr	r2, [r0, #24]
 8013756:	8813      	ldrh	r3, [r2, #0]
 8013758:	2b00      	cmp	r3, #0
 801375a:	f000 80a8 	beq.w	80138ae <forward_conv2d_rgb_sssa8_ch+0x15a>
 801375e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013762:	6854      	ldr	r4, [r2, #4]
 8013764:	6861      	ldr	r1, [r4, #4]
 8013766:	b097      	sub	sp, #92	@ 0x5c
 8013768:	b101      	cbz	r1, 801376c <forward_conv2d_rgb_sssa8_ch+0x18>
 801376a:	6809      	ldr	r1, [r1, #0]
 801376c:	2b01      	cmp	r3, #1
 801376e:	f000 80b7 	beq.w	80138e0 <forward_conv2d_rgb_sssa8_ch+0x18c>
 8013772:	6922      	ldr	r2, [r4, #16]
 8013774:	b102      	cbz	r2, 8013778 <forward_conv2d_rgb_sssa8_ch+0x24>
 8013776:	6812      	ldr	r2, [r2, #0]
 8013778:	2b02      	cmp	r3, #2
 801377a:	f000 80ac 	beq.w	80138d6 <forward_conv2d_rgb_sssa8_ch+0x182>
 801377e:	69e5      	ldr	r5, [r4, #28]
 8013780:	2d00      	cmp	r5, #0
 8013782:	f000 80a0 	beq.w	80138c6 <forward_conv2d_rgb_sssa8_ch+0x172>
 8013786:	8b26      	ldrh	r6, [r4, #24]
 8013788:	f8d5 e000 	ldr.w	lr, [r5]
 801378c:	2e01      	cmp	r6, #1
 801378e:	f240 809c 	bls.w	80138ca <forward_conv2d_rgb_sssa8_ch+0x176>
 8013792:	686d      	ldr	r5, [r5, #4]
 8013794:	2b03      	cmp	r3, #3
 8013796:	f000 80a6 	beq.w	80138e6 <forward_conv2d_rgb_sssa8_ch+0x192>
 801379a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 801379c:	2b00      	cmp	r3, #0
 801379e:	f000 8096 	beq.w	80138ce <forward_conv2d_rgb_sssa8_ch+0x17a>
 80137a2:	6a44      	ldr	r4, [r0, #36]	@ 0x24
 80137a4:	b104      	cbz	r4, 80137a8 <forward_conv2d_rgb_sssa8_ch+0x54>
 80137a6:	685a      	ldr	r2, [r3, #4]
 80137a8:	681c      	ldr	r4, [r3, #0]
 80137aa:	69ab      	ldr	r3, [r5, #24]
 80137ac:	f8d4 c018 	ldr.w	ip, [r4, #24]
 80137b0:	689b      	ldr	r3, [r3, #8]
 80137b2:	9314      	str	r3, [sp, #80]	@ 0x50
 80137b4:	68cb      	ldr	r3, [r1, #12]
 80137b6:	68d4      	ldr	r4, [r2, #12]
 80137b8:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80137bc:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 80137be:	680d      	ldr	r5, [r1, #0]
 80137c0:	889b      	ldrh	r3, [r3, #4]
 80137c2:	9313      	str	r3, [sp, #76]	@ 0x4c
 80137c4:	f8de 300c 	ldr.w	r3, [lr, #12]
 80137c8:	f8de 6000 	ldr.w	r6, [lr]
 80137cc:	f8d3 a004 	ldr.w	sl, [r3, #4]
 80137d0:	88a3      	ldrh	r3, [r4, #4]
 80137d2:	68a4      	ldr	r4, [r4, #8]
 80137d4:	9411      	str	r4, [sp, #68]	@ 0x44
 80137d6:	8d04      	ldrh	r4, [r0, #40]	@ 0x28
 80137d8:	9412      	str	r4, [sp, #72]	@ 0x48
 80137da:	f8dc 4008 	ldr.w	r4, [ip, #8]
 80137de:	9415      	str	r4, [sp, #84]	@ 0x54
 80137e0:	6814      	ldr	r4, [r2, #0]
 80137e2:	2d00      	cmp	r5, #0
 80137e4:	d068      	beq.n	80138b8 <forward_conv2d_rgb_sssa8_ch+0x164>
 80137e6:	686f      	ldr	r7, [r5, #4]
 80137e8:	2f00      	cmp	r7, #0
 80137ea:	d065      	beq.n	80138b8 <forward_conv2d_rgb_sssa8_ch+0x164>
 80137ec:	f8b5 8002 	ldrh.w	r8, [r5, #2]
 80137f0:	f1b8 0f00 	cmp.w	r8, #0
 80137f4:	d060      	beq.n	80138b8 <forward_conv2d_rgb_sssa8_ch+0x164>
 80137f6:	683f      	ldr	r7, [r7, #0]
 80137f8:	ed97 0a00 	vldr	s0, [r7]
 80137fc:	2c00      	cmp	r4, #0
 80137fe:	d058      	beq.n	80138b2 <forward_conv2d_rgb_sssa8_ch+0x15e>
 8013800:	6867      	ldr	r7, [r4, #4]
 8013802:	2f00      	cmp	r7, #0
 8013804:	d055      	beq.n	80138b2 <forward_conv2d_rgb_sssa8_ch+0x15e>
 8013806:	f8b4 8002 	ldrh.w	r8, [r4, #2]
 801380a:	f1b8 0f00 	cmp.w	r8, #0
 801380e:	d050      	beq.n	80138b2 <forward_conv2d_rgb_sssa8_ch+0x15e>
 8013810:	683f      	ldr	r7, [r7, #0]
 8013812:	edd7 0a00 	vldr	s1, [r7]
 8013816:	6997      	ldr	r7, [r2, #24]
 8013818:	6989      	ldr	r1, [r1, #24]
 801381a:	f8de 2018 	ldr.w	r2, [lr, #24]
 801381e:	f8d7 b008 	ldr.w	fp, [r7, #8]
 8013822:	f890 8041 	ldrb.w	r8, [r0, #65]	@ 0x41
 8013826:	688f      	ldr	r7, [r1, #8]
 8013828:	6892      	ldr	r2, [r2, #8]
 801382a:	b116      	cbz	r6, 8013832 <forward_conv2d_rgb_sssa8_ch+0xde>
 801382c:	6876      	ldr	r6, [r6, #4]
 801382e:	b106      	cbz	r6, 8013832 <forward_conv2d_rgb_sssa8_ch+0xde>
 8013830:	6836      	ldr	r6, [r6, #0]
 8013832:	b13d      	cbz	r5, 8013844 <forward_conv2d_rgb_sssa8_ch+0xf0>
 8013834:	6869      	ldr	r1, [r5, #4]
 8013836:	2900      	cmp	r1, #0
 8013838:	d041      	beq.n	80138be <forward_conv2d_rgb_sssa8_ch+0x16a>
 801383a:	886d      	ldrh	r5, [r5, #2]
 801383c:	b115      	cbz	r5, 8013844 <forward_conv2d_rgb_sssa8_ch+0xf0>
 801383e:	6849      	ldr	r1, [r1, #4]
 8013840:	f991 5000 	ldrsb.w	r5, [r1]
 8013844:	b13c      	cbz	r4, 8013856 <forward_conv2d_rgb_sssa8_ch+0x102>
 8013846:	6861      	ldr	r1, [r4, #4]
 8013848:	2900      	cmp	r1, #0
 801384a:	d03a      	beq.n	80138c2 <forward_conv2d_rgb_sssa8_ch+0x16e>
 801384c:	8864      	ldrh	r4, [r4, #2]
 801384e:	b114      	cbz	r4, 8013856 <forward_conv2d_rgb_sssa8_ch+0x102>
 8013850:	6849      	ldr	r1, [r1, #4]
 8013852:	f991 4000 	ldrsb.w	r4, [r1]
 8013856:	edcd 0a0e 	vstr	s1, [sp, #56]	@ 0x38
 801385a:	e9dc 0100 	ldrd	r0, r1, [ip]
 801385e:	e9cd 320f 	strd	r3, r2, [sp, #60]	@ 0x3c
 8013862:	ed8d 0a0d 	vstr	s0, [sp, #52]	@ 0x34
 8013866:	f00d fff9 	bl	802185c <ai_array_get_byte_size>
 801386a:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801386c:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 8013870:	9109      	str	r1, [sp, #36]	@ 0x24
 8013872:	e9cd 030a 	strd	r0, r3, [sp, #40]	@ 0x28
 8013876:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8013878:	9303      	str	r3, [sp, #12]
 801387a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801387c:	9302      	str	r3, [sp, #8]
 801387e:	fa1f f18a 	uxth.w	r1, sl
 8013882:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8013884:	9301      	str	r3, [sp, #4]
 8013886:	9100      	str	r1, [sp, #0]
 8013888:	e9cd 8b07 	strd	r8, fp, [sp, #28]
 801388c:	e9cd 4605 	strd	r4, r6, [sp, #20]
 8013890:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	@ 0x3c
 8013894:	eddd 0a0e 	vldr	s1, [sp, #56]	@ 0x38
 8013898:	ed9d 0a0d 	vldr	s0, [sp, #52]	@ 0x34
 801389c:	9504      	str	r5, [sp, #16]
 801389e:	fa1f f189 	uxth.w	r1, r9
 80138a2:	4638      	mov	r0, r7
 80138a4:	f001 f83a 	bl	801491c <forward_lite_conv2d_rgb_sssa8_ch>
 80138a8:	b017      	add	sp, #92	@ 0x5c
 80138aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80138ae:	685b      	ldr	r3, [r3, #4]
 80138b0:	deff      	udf	#255	@ 0xff
 80138b2:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 80138b6:	e7ae      	b.n	8013816 <forward_conv2d_rgb_sssa8_ch+0xc2>
 80138b8:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80138bc:	e79e      	b.n	80137fc <forward_conv2d_rgb_sssa8_ch+0xa8>
 80138be:	460d      	mov	r5, r1
 80138c0:	e7c0      	b.n	8013844 <forward_conv2d_rgb_sssa8_ch+0xf0>
 80138c2:	460c      	mov	r4, r1
 80138c4:	e7c7      	b.n	8013856 <forward_conv2d_rgb_sssa8_ch+0x102>
 80138c6:	46ae      	mov	lr, r5
 80138c8:	e764      	b.n	8013794 <forward_conv2d_rgb_sssa8_ch+0x40>
 80138ca:	2500      	movs	r5, #0
 80138cc:	e762      	b.n	8013794 <forward_conv2d_rgb_sssa8_ch+0x40>
 80138ce:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 80138d0:	b922      	cbnz	r2, 80138dc <forward_conv2d_rgb_sssa8_ch+0x188>
 80138d2:	6993      	ldr	r3, [r2, #24]
 80138d4:	deff      	udf	#255	@ 0xff
 80138d6:	2300      	movs	r3, #0
 80138d8:	685b      	ldr	r3, [r3, #4]
 80138da:	deff      	udf	#255	@ 0xff
 80138dc:	68db      	ldr	r3, [r3, #12]
 80138de:	deff      	udf	#255	@ 0xff
 80138e0:	2300      	movs	r3, #0
 80138e2:	685b      	ldr	r3, [r3, #4]
 80138e4:	deff      	udf	#255	@ 0xff
 80138e6:	2300      	movs	r3, #0
 80138e8:	685b      	ldr	r3, [r3, #4]
 80138ea:	deff      	udf	#255	@ 0xff

080138ec <forward_conv2d_deep_3x3_sssa8_ch>:
 80138ec:	6982      	ldr	r2, [r0, #24]
 80138ee:	8813      	ldrh	r3, [r2, #0]
 80138f0:	2b00      	cmp	r3, #0
 80138f2:	f000 80a6 	beq.w	8013a42 <forward_conv2d_deep_3x3_sssa8_ch+0x156>
 80138f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80138fa:	6854      	ldr	r4, [r2, #4]
 80138fc:	6861      	ldr	r1, [r4, #4]
 80138fe:	b099      	sub	sp, #100	@ 0x64
 8013900:	b101      	cbz	r1, 8013904 <forward_conv2d_deep_3x3_sssa8_ch+0x18>
 8013902:	6809      	ldr	r1, [r1, #0]
 8013904:	2b01      	cmp	r3, #1
 8013906:	f000 80b5 	beq.w	8013a74 <forward_conv2d_deep_3x3_sssa8_ch+0x188>
 801390a:	6922      	ldr	r2, [r4, #16]
 801390c:	b102      	cbz	r2, 8013910 <forward_conv2d_deep_3x3_sssa8_ch+0x24>
 801390e:	6812      	ldr	r2, [r2, #0]
 8013910:	2b02      	cmp	r3, #2
 8013912:	f000 80aa 	beq.w	8013a6a <forward_conv2d_deep_3x3_sssa8_ch+0x17e>
 8013916:	69e5      	ldr	r5, [r4, #28]
 8013918:	2d00      	cmp	r5, #0
 801391a:	f000 809e 	beq.w	8013a5a <forward_conv2d_deep_3x3_sssa8_ch+0x16e>
 801391e:	8b26      	ldrh	r6, [r4, #24]
 8013920:	f8d5 e000 	ldr.w	lr, [r5]
 8013924:	2e01      	cmp	r6, #1
 8013926:	f240 809a 	bls.w	8013a5e <forward_conv2d_deep_3x3_sssa8_ch+0x172>
 801392a:	686d      	ldr	r5, [r5, #4]
 801392c:	2b03      	cmp	r3, #3
 801392e:	f000 80a4 	beq.w	8013a7a <forward_conv2d_deep_3x3_sssa8_ch+0x18e>
 8013932:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8013934:	2b00      	cmp	r3, #0
 8013936:	f000 8094 	beq.w	8013a62 <forward_conv2d_deep_3x3_sssa8_ch+0x176>
 801393a:	6a44      	ldr	r4, [r0, #36]	@ 0x24
 801393c:	b104      	cbz	r4, 8013940 <forward_conv2d_deep_3x3_sssa8_ch+0x54>
 801393e:	685a      	ldr	r2, [r3, #4]
 8013940:	681c      	ldr	r4, [r3, #0]
 8013942:	69ab      	ldr	r3, [r5, #24]
 8013944:	f8d4 c018 	ldr.w	ip, [r4, #24]
 8013948:	68cc      	ldr	r4, [r1, #12]
 801394a:	689b      	ldr	r3, [r3, #8]
 801394c:	68d6      	ldr	r6, [r2, #12]
 801394e:	9316      	str	r3, [sp, #88]	@ 0x58
 8013950:	88a3      	ldrh	r3, [r4, #4]
 8013952:	88b7      	ldrh	r7, [r6, #4]
 8013954:	680d      	ldr	r5, [r1, #0]
 8013956:	9712      	str	r7, [sp, #72]	@ 0x48
 8013958:	e9d4 4b02 	ldrd	r4, fp, [r4, #8]
 801395c:	68f7      	ldr	r7, [r6, #12]
 801395e:	9415      	str	r4, [sp, #84]	@ 0x54
 8013960:	68b6      	ldr	r6, [r6, #8]
 8013962:	f8dc 4008 	ldr.w	r4, [ip, #8]
 8013966:	9614      	str	r6, [sp, #80]	@ 0x50
 8013968:	9417      	str	r4, [sp, #92]	@ 0x5c
 801396a:	f8de 6000 	ldr.w	r6, [lr]
 801396e:	6814      	ldr	r4, [r2, #0]
 8013970:	9713      	str	r7, [sp, #76]	@ 0x4c
 8013972:	2d00      	cmp	r5, #0
 8013974:	d06a      	beq.n	8013a4c <forward_conv2d_deep_3x3_sssa8_ch+0x160>
 8013976:	686f      	ldr	r7, [r5, #4]
 8013978:	2f00      	cmp	r7, #0
 801397a:	d067      	beq.n	8013a4c <forward_conv2d_deep_3x3_sssa8_ch+0x160>
 801397c:	f8b5 8002 	ldrh.w	r8, [r5, #2]
 8013980:	f1b8 0f00 	cmp.w	r8, #0
 8013984:	d062      	beq.n	8013a4c <forward_conv2d_deep_3x3_sssa8_ch+0x160>
 8013986:	683f      	ldr	r7, [r7, #0]
 8013988:	ed97 0a00 	vldr	s0, [r7]
 801398c:	2c00      	cmp	r4, #0
 801398e:	d05a      	beq.n	8013a46 <forward_conv2d_deep_3x3_sssa8_ch+0x15a>
 8013990:	6867      	ldr	r7, [r4, #4]
 8013992:	2f00      	cmp	r7, #0
 8013994:	d057      	beq.n	8013a46 <forward_conv2d_deep_3x3_sssa8_ch+0x15a>
 8013996:	f8b4 8002 	ldrh.w	r8, [r4, #2]
 801399a:	f1b8 0f00 	cmp.w	r8, #0
 801399e:	d052      	beq.n	8013a46 <forward_conv2d_deep_3x3_sssa8_ch+0x15a>
 80139a0:	683f      	ldr	r7, [r7, #0]
 80139a2:	edd7 0a00 	vldr	s1, [r7]
 80139a6:	698f      	ldr	r7, [r1, #24]
 80139a8:	6992      	ldr	r2, [r2, #24]
 80139aa:	f8de 1018 	ldr.w	r1, [lr, #24]
 80139ae:	f890 9041 	ldrb.w	r9, [r0, #65]	@ 0x41
 80139b2:	f8d2 a008 	ldr.w	sl, [r2, #8]
 80139b6:	68bf      	ldr	r7, [r7, #8]
 80139b8:	f8d1 8008 	ldr.w	r8, [r1, #8]
 80139bc:	b116      	cbz	r6, 80139c4 <forward_conv2d_deep_3x3_sssa8_ch+0xd8>
 80139be:	6876      	ldr	r6, [r6, #4]
 80139c0:	b106      	cbz	r6, 80139c4 <forward_conv2d_deep_3x3_sssa8_ch+0xd8>
 80139c2:	6836      	ldr	r6, [r6, #0]
 80139c4:	b13d      	cbz	r5, 80139d6 <forward_conv2d_deep_3x3_sssa8_ch+0xea>
 80139c6:	6869      	ldr	r1, [r5, #4]
 80139c8:	2900      	cmp	r1, #0
 80139ca:	d042      	beq.n	8013a52 <forward_conv2d_deep_3x3_sssa8_ch+0x166>
 80139cc:	886d      	ldrh	r5, [r5, #2]
 80139ce:	b115      	cbz	r5, 80139d6 <forward_conv2d_deep_3x3_sssa8_ch+0xea>
 80139d0:	6849      	ldr	r1, [r1, #4]
 80139d2:	f991 5000 	ldrsb.w	r5, [r1]
 80139d6:	b13c      	cbz	r4, 80139e8 <forward_conv2d_deep_3x3_sssa8_ch+0xfc>
 80139d8:	6861      	ldr	r1, [r4, #4]
 80139da:	2900      	cmp	r1, #0
 80139dc:	d03b      	beq.n	8013a56 <forward_conv2d_deep_3x3_sssa8_ch+0x16a>
 80139de:	8864      	ldrh	r4, [r4, #2]
 80139e0:	b114      	cbz	r4, 80139e8 <forward_conv2d_deep_3x3_sssa8_ch+0xfc>
 80139e2:	6849      	ldr	r1, [r1, #4]
 80139e4:	f991 4000 	ldrsb.w	r4, [r1]
 80139e8:	9311      	str	r3, [sp, #68]	@ 0x44
 80139ea:	e9dc 0100 	ldrd	r0, r1, [ip]
 80139ee:	edcd 0a10 	vstr	s1, [sp, #64]	@ 0x40
 80139f2:	ed8d 0a0f 	vstr	s0, [sp, #60]	@ 0x3c
 80139f6:	f00d ff31 	bl	802185c <ai_array_get_byte_size>
 80139fa:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80139fc:	f8bd 204c 	ldrh.w	r2, [sp, #76]	@ 0x4c
 8013a00:	9209      	str	r2, [sp, #36]	@ 0x24
 8013a02:	e9cd 030b 	strd	r0, r3, [sp, #44]	@ 0x2c
 8013a06:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8013a08:	9302      	str	r3, [sp, #8]
 8013a0a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8013a0c:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 8013a10:	9208      	str	r2, [sp, #32]
 8013a12:	e9cd 4604 	strd	r4, r6, [sp, #16]
 8013a16:	e9cd 8300 	strd	r8, r3, [sp]
 8013a1a:	e9cd 9a06 	strd	r9, sl, [sp, #24]
 8013a1e:	eddd 0a10 	vldr	s1, [sp, #64]	@ 0x40
 8013a22:	ed9d 0a0f 	vldr	s0, [sp, #60]	@ 0x3c
 8013a26:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8013a28:	f8bd 1054 	ldrh.w	r1, [sp, #84]	@ 0x54
 8013a2c:	9503      	str	r5, [sp, #12]
 8013a2e:	fa1f f28b 	uxth.w	r2, fp
 8013a32:	4638      	mov	r0, r7
 8013a34:	2401      	movs	r4, #1
 8013a36:	940a      	str	r4, [sp, #40]	@ 0x28
 8013a38:	f000 fec8 	bl	80147cc <forward_lite_conv2d_deep_3x3_sssa8_ch>
 8013a3c:	b019      	add	sp, #100	@ 0x64
 8013a3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a42:	685b      	ldr	r3, [r3, #4]
 8013a44:	deff      	udf	#255	@ 0xff
 8013a46:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 8013a4a:	e7ac      	b.n	80139a6 <forward_conv2d_deep_3x3_sssa8_ch+0xba>
 8013a4c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8013a50:	e79c      	b.n	801398c <forward_conv2d_deep_3x3_sssa8_ch+0xa0>
 8013a52:	460d      	mov	r5, r1
 8013a54:	e7bf      	b.n	80139d6 <forward_conv2d_deep_3x3_sssa8_ch+0xea>
 8013a56:	460c      	mov	r4, r1
 8013a58:	e7c6      	b.n	80139e8 <forward_conv2d_deep_3x3_sssa8_ch+0xfc>
 8013a5a:	46ae      	mov	lr, r5
 8013a5c:	e766      	b.n	801392c <forward_conv2d_deep_3x3_sssa8_ch+0x40>
 8013a5e:	2500      	movs	r5, #0
 8013a60:	e764      	b.n	801392c <forward_conv2d_deep_3x3_sssa8_ch+0x40>
 8013a62:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 8013a64:	b922      	cbnz	r2, 8013a70 <forward_conv2d_deep_3x3_sssa8_ch+0x184>
 8013a66:	6993      	ldr	r3, [r2, #24]
 8013a68:	deff      	udf	#255	@ 0xff
 8013a6a:	2300      	movs	r3, #0
 8013a6c:	685b      	ldr	r3, [r3, #4]
 8013a6e:	deff      	udf	#255	@ 0xff
 8013a70:	68db      	ldr	r3, [r3, #12]
 8013a72:	deff      	udf	#255	@ 0xff
 8013a74:	2300      	movs	r3, #0
 8013a76:	685b      	ldr	r3, [r3, #4]
 8013a78:	deff      	udf	#255	@ 0xff
 8013a7a:	2300      	movs	r3, #0
 8013a7c:	685b      	ldr	r3, [r3, #4]
 8013a7e:	deff      	udf	#255	@ 0xff

08013a80 <forward_dense_integer_SSSA>:
 8013a80:	6983      	ldr	r3, [r0, #24]
 8013a82:	8819      	ldrh	r1, [r3, #0]
 8013a84:	2900      	cmp	r1, #0
 8013a86:	f000 8085 	beq.w	8013b94 <forward_dense_integer_SSSA+0x114>
 8013a8a:	6858      	ldr	r0, [r3, #4]
 8013a8c:	6842      	ldr	r2, [r0, #4]
 8013a8e:	b102      	cbz	r2, 8013a92 <forward_dense_integer_SSSA+0x12>
 8013a90:	6812      	ldr	r2, [r2, #0]
 8013a92:	2901      	cmp	r1, #1
 8013a94:	f000 8106 	beq.w	8013ca4 <forward_dense_integer_SSSA+0x224>
 8013a98:	6903      	ldr	r3, [r0, #16]
 8013a9a:	b103      	cbz	r3, 8013a9e <forward_dense_integer_SSSA+0x1e>
 8013a9c:	681b      	ldr	r3, [r3, #0]
 8013a9e:	2902      	cmp	r1, #2
 8013aa0:	f000 8103 	beq.w	8013caa <forward_dense_integer_SSSA+0x22a>
 8013aa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013aa8:	69c5      	ldr	r5, [r0, #28]
 8013aaa:	b089      	sub	sp, #36	@ 0x24
 8013aac:	2d00      	cmp	r5, #0
 8013aae:	f000 80b4 	beq.w	8013c1a <forward_dense_integer_SSSA+0x19a>
 8013ab2:	8b04      	ldrh	r4, [r0, #24]
 8013ab4:	682f      	ldr	r7, [r5, #0]
 8013ab6:	2c01      	cmp	r4, #1
 8013ab8:	f240 80d6 	bls.w	8013c68 <forward_dense_integer_SSSA+0x1e8>
 8013abc:	686d      	ldr	r5, [r5, #4]
 8013abe:	2903      	cmp	r1, #3
 8013ac0:	f000 80f6 	beq.w	8013cb0 <forward_dense_integer_SSSA+0x230>
 8013ac4:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8013ac6:	69a9      	ldr	r1, [r5, #24]
 8013ac8:	2c00      	cmp	r4, #0
 8013aca:	f000 80bd 	beq.w	8013c48 <forward_dense_integer_SSSA+0x1c8>
 8013ace:	f8d1 e008 	ldr.w	lr, [r1, #8]
 8013ad2:	68d1      	ldr	r1, [r2, #12]
 8013ad4:	68dd      	ldr	r5, [r3, #12]
 8013ad6:	8889      	ldrh	r1, [r1, #4]
 8013ad8:	9107      	str	r1, [sp, #28]
 8013ada:	e9d5 1002 	ldrd	r1, r0, [r5, #8]
 8013ade:	6824      	ldr	r4, [r4, #0]
 8013ae0:	f8b5 b004 	ldrh.w	fp, [r5, #4]
 8013ae4:	f8d2 9018 	ldr.w	r9, [r2, #24]
 8013ae8:	fb00 fa01 	mul.w	sl, r0, r1
 8013aec:	6998      	ldr	r0, [r3, #24]
 8013aee:	b10c      	cbz	r4, 8013af4 <forward_dense_integer_SSSA+0x74>
 8013af0:	69a1      	ldr	r1, [r4, #24]
 8013af2:	688c      	ldr	r4, [r1, #8]
 8013af4:	6815      	ldr	r5, [r2, #0]
 8013af6:	681e      	ldr	r6, [r3, #0]
 8013af8:	f8d7 c018 	ldr.w	ip, [r7, #24]
 8013afc:	683b      	ldr	r3, [r7, #0]
 8013afe:	2d00      	cmp	r5, #0
 8013b00:	d04a      	beq.n	8013b98 <forward_dense_integer_SSSA+0x118>
 8013b02:	686a      	ldr	r2, [r5, #4]
 8013b04:	2a00      	cmp	r2, #0
 8013b06:	d06f      	beq.n	8013be8 <forward_dense_integer_SSSA+0x168>
 8013b08:	886f      	ldrh	r7, [r5, #2]
 8013b0a:	2f00      	cmp	r7, #0
 8013b0c:	d05d      	beq.n	8013bca <forward_dense_integer_SSSA+0x14a>
 8013b0e:	6811      	ldr	r1, [r2, #0]
 8013b10:	ed91 0a00 	vldr	s0, [r1]
 8013b14:	2e00      	cmp	r6, #0
 8013b16:	d05c      	beq.n	8013bd2 <forward_dense_integer_SSSA+0x152>
 8013b18:	f8d6 8004 	ldr.w	r8, [r6, #4]
 8013b1c:	f1b8 0f00 	cmp.w	r8, #0
 8013b20:	d06a      	beq.n	8013bf8 <forward_dense_integer_SSSA+0x178>
 8013b22:	8877      	ldrh	r7, [r6, #2]
 8013b24:	2f00      	cmp	r7, #0
 8013b26:	d043      	beq.n	8013bb0 <forward_dense_integer_SSSA+0x130>
 8013b28:	f8d8 1000 	ldr.w	r1, [r8]
 8013b2c:	6880      	ldr	r0, [r0, #8]
 8013b2e:	f8d9 9008 	ldr.w	r9, [r9, #8]
 8013b32:	f8dc c008 	ldr.w	ip, [ip, #8]
 8013b36:	edd1 0a00 	vldr	s1, [r1]
 8013b3a:	2a00      	cmp	r2, #0
 8013b3c:	d043      	beq.n	8013bc6 <forward_dense_integer_SSSA+0x146>
 8013b3e:	886d      	ldrh	r5, [r5, #2]
 8013b40:	2d00      	cmp	r5, #0
 8013b42:	d064      	beq.n	8013c0e <forward_dense_integer_SSSA+0x18e>
 8013b44:	6852      	ldr	r2, [r2, #4]
 8013b46:	f992 5000 	ldrsb.w	r5, [r2]
 8013b4a:	2e00      	cmp	r6, #0
 8013b4c:	d063      	beq.n	8013c16 <forward_dense_integer_SSSA+0x196>
 8013b4e:	f1b8 0f00 	cmp.w	r8, #0
 8013b52:	d060      	beq.n	8013c16 <forward_dense_integer_SSSA+0x196>
 8013b54:	8877      	ldrh	r7, [r6, #2]
 8013b56:	b11f      	cbz	r7, 8013b60 <forward_dense_integer_SSSA+0xe0>
 8013b58:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8013b5c:	f992 7000 	ldrsb.w	r7, [r2]
 8013b60:	2b00      	cmp	r3, #0
 8013b62:	f000 809c 	beq.w	8013c9e <forward_dense_integer_SSSA+0x21e>
 8013b66:	685b      	ldr	r3, [r3, #4]
 8013b68:	2b00      	cmp	r3, #0
 8013b6a:	f000 8098 	beq.w	8013c9e <forward_dense_integer_SSSA+0x21e>
 8013b6e:	681b      	ldr	r3, [r3, #0]
 8013b70:	ed93 1a00 	vldr	s2, [r3]
 8013b74:	9b07      	ldr	r3, [sp, #28]
 8013b76:	f8cd b00c 	str.w	fp, [sp, #12]
 8013b7a:	e9cd 7301 	strd	r7, r3, [sp, #4]
 8013b7e:	e9cd a404 	strd	sl, r4, [sp, #16]
 8013b82:	9500      	str	r5, [sp, #0]
 8013b84:	4673      	mov	r3, lr
 8013b86:	4662      	mov	r2, ip
 8013b88:	4649      	mov	r1, r9
 8013b8a:	f000 fcd7 	bl	801453c <forward_lite_dense_is8os8ws8>
 8013b8e:	b009      	add	sp, #36	@ 0x24
 8013b90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013b94:	684b      	ldr	r3, [r1, #4]
 8013b96:	deff      	udf	#255	@ 0xff
 8013b98:	2e00      	cmp	r6, #0
 8013b9a:	d045      	beq.n	8013c28 <forward_dense_integer_SSSA+0x1a8>
 8013b9c:	f8d6 8004 	ldr.w	r8, [r6, #4]
 8013ba0:	f1b8 0f00 	cmp.w	r8, #0
 8013ba4:	d04c      	beq.n	8013c40 <forward_dense_integer_SSSA+0x1c0>
 8013ba6:	8877      	ldrh	r7, [r6, #2]
 8013ba8:	2f00      	cmp	r7, #0
 8013baa:	d15f      	bne.n	8013c6c <forward_dense_integer_SSSA+0x1ec>
 8013bac:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8013bb0:	6880      	ldr	r0, [r0, #8]
 8013bb2:	f8d9 9008 	ldr.w	r9, [r9, #8]
 8013bb6:	f8dc c008 	ldr.w	ip, [ip, #8]
 8013bba:	b38d      	cbz	r5, 8013c20 <forward_dense_integer_SSSA+0x1a0>
 8013bbc:	686a      	ldr	r2, [r5, #4]
 8013bbe:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 8013bc2:	2a00      	cmp	r2, #0
 8013bc4:	d1bb      	bne.n	8013b3e <forward_dense_integer_SSSA+0xbe>
 8013bc6:	4615      	mov	r5, r2
 8013bc8:	e7c5      	b.n	8013b56 <forward_dense_integer_SSSA+0xd6>
 8013bca:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8013bce:	2e00      	cmp	r6, #0
 8013bd0:	d1a2      	bne.n	8013b18 <forward_dense_integer_SSSA+0x98>
 8013bd2:	6880      	ldr	r0, [r0, #8]
 8013bd4:	f8d9 9008 	ldr.w	r9, [r9, #8]
 8013bd8:	f8dc c008 	ldr.w	ip, [ip, #8]
 8013bdc:	2f00      	cmp	r7, #0
 8013bde:	d151      	bne.n	8013c84 <forward_dense_integer_SSSA+0x204>
 8013be0:	463d      	mov	r5, r7
 8013be2:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 8013be6:	e7bb      	b.n	8013b60 <forward_dense_integer_SSSA+0xe0>
 8013be8:	b1f6      	cbz	r6, 8013c28 <forward_dense_integer_SSSA+0x1a8>
 8013bea:	f8d6 8004 	ldr.w	r8, [r6, #4]
 8013bee:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8013bf2:	f1b8 0f00 	cmp.w	r8, #0
 8013bf6:	d194      	bne.n	8013b22 <forward_dense_integer_SSSA+0xa2>
 8013bf8:	6880      	ldr	r0, [r0, #8]
 8013bfa:	f8d9 9008 	ldr.w	r9, [r9, #8]
 8013bfe:	f8dc c008 	ldr.w	ip, [ip, #8]
 8013c02:	b162      	cbz	r2, 8013c1e <forward_dense_integer_SSSA+0x19e>
 8013c04:	886d      	ldrh	r5, [r5, #2]
 8013c06:	2d00      	cmp	r5, #0
 8013c08:	d143      	bne.n	8013c92 <forward_dense_integer_SSSA+0x212>
 8013c0a:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 8013c0e:	2500      	movs	r5, #0
 8013c10:	f1b8 0f00 	cmp.w	r8, #0
 8013c14:	d19e      	bne.n	8013b54 <forward_dense_integer_SSSA+0xd4>
 8013c16:	2700      	movs	r7, #0
 8013c18:	e7a2      	b.n	8013b60 <forward_dense_integer_SSSA+0xe0>
 8013c1a:	462f      	mov	r7, r5
 8013c1c:	e74f      	b.n	8013abe <forward_dense_integer_SSSA+0x3e>
 8013c1e:	4615      	mov	r5, r2
 8013c20:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 8013c24:	462f      	mov	r7, r5
 8013c26:	e79b      	b.n	8013b60 <forward_dense_integer_SSSA+0xe0>
 8013c28:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8013c2c:	4635      	mov	r5, r6
 8013c2e:	6880      	ldr	r0, [r0, #8]
 8013c30:	f8d9 9008 	ldr.w	r9, [r9, #8]
 8013c34:	f8dc c008 	ldr.w	ip, [ip, #8]
 8013c38:	eef0 0a40 	vmov.f32	s1, s0
 8013c3c:	462f      	mov	r7, r5
 8013c3e:	e78f      	b.n	8013b60 <forward_dense_integer_SSSA+0xe0>
 8013c40:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8013c44:	4645      	mov	r5, r8
 8013c46:	e7f2      	b.n	8013c2e <forward_dense_integer_SSSA+0x1ae>
 8013c48:	f8d1 e008 	ldr.w	lr, [r1, #8]
 8013c4c:	68d1      	ldr	r1, [r2, #12]
 8013c4e:	68dd      	ldr	r5, [r3, #12]
 8013c50:	8889      	ldrh	r1, [r1, #4]
 8013c52:	9107      	str	r1, [sp, #28]
 8013c54:	e9d5 1002 	ldrd	r1, r0, [r5, #8]
 8013c58:	f8b5 b004 	ldrh.w	fp, [r5, #4]
 8013c5c:	f8d2 9018 	ldr.w	r9, [r2, #24]
 8013c60:	fb00 fa01 	mul.w	sl, r0, r1
 8013c64:	6998      	ldr	r0, [r3, #24]
 8013c66:	e745      	b.n	8013af4 <forward_dense_integer_SSSA+0x74>
 8013c68:	2500      	movs	r5, #0
 8013c6a:	e728      	b.n	8013abe <forward_dense_integer_SSSA+0x3e>
 8013c6c:	f8d8 2000 	ldr.w	r2, [r8]
 8013c70:	6880      	ldr	r0, [r0, #8]
 8013c72:	f8d9 9008 	ldr.w	r9, [r9, #8]
 8013c76:	f8dc c008 	ldr.w	ip, [ip, #8]
 8013c7a:	edd2 0a00 	vldr	s1, [r2]
 8013c7e:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8013c82:	e769      	b.n	8013b58 <forward_dense_integer_SSSA+0xd8>
 8013c84:	6852      	ldr	r2, [r2, #4]
 8013c86:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 8013c8a:	f992 5000 	ldrsb.w	r5, [r2]
 8013c8e:	4637      	mov	r7, r6
 8013c90:	e766      	b.n	8013b60 <forward_dense_integer_SSSA+0xe0>
 8013c92:	6852      	ldr	r2, [r2, #4]
 8013c94:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 8013c98:	f992 5000 	ldrsb.w	r5, [r2]
 8013c9c:	e7bb      	b.n	8013c16 <forward_dense_integer_SSSA+0x196>
 8013c9e:	2300      	movs	r3, #0
 8013ca0:	681b      	ldr	r3, [r3, #0]
 8013ca2:	deff      	udf	#255	@ 0xff
 8013ca4:	2300      	movs	r3, #0
 8013ca6:	685b      	ldr	r3, [r3, #4]
 8013ca8:	deff      	udf	#255	@ 0xff
 8013caa:	2300      	movs	r3, #0
 8013cac:	685b      	ldr	r3, [r3, #4]
 8013cae:	deff      	udf	#255	@ 0xff
 8013cb0:	2300      	movs	r3, #0
 8013cb2:	685b      	ldr	r3, [r3, #4]
 8013cb4:	deff      	udf	#255	@ 0xff
 8013cb6:	bf00      	nop

08013cb8 <forward_sm_integer>:
 8013cb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013cba:	6983      	ldr	r3, [r0, #24]
 8013cbc:	881e      	ldrh	r6, [r3, #0]
 8013cbe:	b087      	sub	sp, #28
 8013cc0:	2e00      	cmp	r6, #0
 8013cc2:	d04a      	beq.n	8013d5a <forward_sm_integer+0xa2>
 8013cc4:	f8d3 c004 	ldr.w	ip, [r3, #4]
 8013cc8:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8013ccc:	b105      	cbz	r5, 8013cd0 <forward_sm_integer+0x18>
 8013cce:	682d      	ldr	r5, [r5, #0]
 8013cd0:	2e01      	cmp	r6, #1
 8013cd2:	d04a      	beq.n	8013d6a <forward_sm_integer+0xb2>
 8013cd4:	f8dc 7010 	ldr.w	r7, [ip, #16]
 8013cd8:	b107      	cbz	r7, 8013cdc <forward_sm_integer+0x24>
 8013cda:	683f      	ldr	r7, [r7, #0]
 8013cdc:	68ab      	ldr	r3, [r5, #8]
 8013cde:	0a1b      	lsrs	r3, r3, #8
 8013ce0:	d041      	beq.n	8013d66 <forward_sm_integer+0xae>
 8013ce2:	68ec      	ldr	r4, [r5, #12]
 8013ce4:	2201      	movs	r2, #1
 8013ce6:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8013cea:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8013cee:	429c      	cmp	r4, r3
 8013cf0:	fb01 f202 	mul.w	r2, r1, r2
 8013cf4:	d1f9      	bne.n	8013cea <forward_sm_integer+0x32>
 8013cf6:	69c3      	ldr	r3, [r0, #28]
 8013cf8:	2e03      	cmp	r6, #3
 8013cfa:	689c      	ldr	r4, [r3, #8]
 8013cfc:	d935      	bls.n	8013d6a <forward_sm_integer+0xb2>
 8013cfe:	f8dc 3028 	ldr.w	r3, [ip, #40]	@ 0x28
 8013d02:	2b00      	cmp	r3, #0
 8013d04:	d034      	beq.n	8013d70 <forward_sm_integer+0xb8>
 8013d06:	6819      	ldr	r1, [r3, #0]
 8013d08:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8013d0c:	6989      	ldr	r1, [r1, #24]
 8013d0e:	69a8      	ldr	r0, [r5, #24]
 8013d10:	f8d1 c008 	ldr.w	ip, [r1, #8]
 8013d14:	68e9      	ldr	r1, [r5, #12]
 8013d16:	f851 6023 	ldr.w	r6, [r1, r3, lsl #2]
 8013d1a:	6929      	ldr	r1, [r5, #16]
 8013d1c:	ebb3 2f11 	cmp.w	r3, r1, lsr #8
 8013d20:	bf38      	it	cc
 8013d22:	6969      	ldrcc	r1, [r5, #20]
 8013d24:	4d13      	ldr	r5, [pc, #76]	@ (8013d74 <forward_sm_integer+0xbc>)
 8013d26:	bf38      	it	cc
 8013d28:	f851 3023 	ldrcc.w	r3, [r1, r3, lsl #2]
 8013d2c:	6801      	ldr	r1, [r0, #0]
 8013d2e:	f021 417e 	bic.w	r1, r1, #4261412864	@ 0xfe000000
 8013d32:	bf28      	it	cs
 8013d34:	2300      	movcs	r3, #0
 8013d36:	42a9      	cmp	r1, r5
 8013d38:	69bd      	ldr	r5, [r7, #24]
 8013d3a:	6881      	ldr	r1, [r0, #8]
 8013d3c:	68a8      	ldr	r0, [r5, #8]
 8013d3e:	f8cd c010 	str.w	ip, [sp, #16]
 8013d42:	68a5      	ldr	r5, [r4, #8]
 8013d44:	9503      	str	r5, [sp, #12]
 8013d46:	6865      	ldr	r5, [r4, #4]
 8013d48:	9502      	str	r5, [sp, #8]
 8013d4a:	6824      	ldr	r4, [r4, #0]
 8013d4c:	e9cd 6400 	strd	r6, r4, [sp]
 8013d50:	d005      	beq.n	8013d5e <forward_sm_integer+0xa6>
 8013d52:	f001 f945 	bl	8014fe0 <forward_lite_nl_softmax_iu8ou8>
 8013d56:	b007      	add	sp, #28
 8013d58:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013d5a:	6873      	ldr	r3, [r6, #4]
 8013d5c:	deff      	udf	#255	@ 0xff
 8013d5e:	f001 f935 	bl	8014fcc <forward_lite_nl_softmax_is8os8>
 8013d62:	b007      	add	sp, #28
 8013d64:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013d66:	2201      	movs	r2, #1
 8013d68:	e7c5      	b.n	8013cf6 <forward_sm_integer+0x3e>
 8013d6a:	2300      	movs	r3, #0
 8013d6c:	685b      	ldr	r3, [r3, #4]
 8013d6e:	deff      	udf	#255	@ 0xff
 8013d70:	699b      	ldr	r3, [r3, #24]
 8013d72:	deff      	udf	#255	@ 0xff
 8013d74:	00840440 	.word	0x00840440

08013d78 <forward_mp_integer_INT8>:
 8013d78:	6983      	ldr	r3, [r0, #24]
 8013d7a:	881a      	ldrh	r2, [r3, #0]
 8013d7c:	2a00      	cmp	r2, #0
 8013d7e:	d07d      	beq.n	8013e7c <forward_mp_integer_INT8+0x104>
 8013d80:	6859      	ldr	r1, [r3, #4]
 8013d82:	684b      	ldr	r3, [r1, #4]
 8013d84:	b103      	cbz	r3, 8013d88 <forward_mp_integer_INT8+0x10>
 8013d86:	681b      	ldr	r3, [r3, #0]
 8013d88:	2a01      	cmp	r2, #1
 8013d8a:	f000 8100 	beq.w	8013f8e <forward_mp_integer_INT8+0x216>
 8013d8e:	690a      	ldr	r2, [r1, #16]
 8013d90:	2a00      	cmp	r2, #0
 8013d92:	f000 80ff 	beq.w	8013f94 <forward_mp_integer_INT8+0x21c>
 8013d96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d9a:	68de      	ldr	r6, [r3, #12]
 8013d9c:	6811      	ldr	r1, [r2, #0]
 8013d9e:	6b07      	ldr	r7, [r0, #48]	@ 0x30
 8013da0:	681c      	ldr	r4, [r3, #0]
 8013da2:	f8d3 b018 	ldr.w	fp, [r3, #24]
 8013da6:	f8b6 8004 	ldrh.w	r8, [r6, #4]
 8013daa:	8932      	ldrh	r2, [r6, #8]
 8013dac:	89b3      	ldrh	r3, [r6, #12]
 8013dae:	8b86      	ldrh	r6, [r0, #28]
 8013db0:	68cd      	ldr	r5, [r1, #12]
 8013db2:	f8d1 a018 	ldr.w	sl, [r1, #24]
 8013db6:	f8b5 c008 	ldrh.w	ip, [r5, #8]
 8013dba:	f8b5 e00c 	ldrh.w	lr, [r5, #12]
 8013dbe:	b095      	sub	sp, #84	@ 0x54
 8013dc0:	960d      	str	r6, [sp, #52]	@ 0x34
 8013dc2:	8c06      	ldrh	r6, [r0, #32]
 8013dc4:	960e      	str	r6, [sp, #56]	@ 0x38
 8013dc6:	88be      	ldrh	r6, [r7, #4]
 8013dc8:	960f      	str	r6, [sp, #60]	@ 0x3c
 8013dca:	883e      	ldrh	r6, [r7, #0]
 8013dcc:	9610      	str	r6, [sp, #64]	@ 0x40
 8013dce:	8c86      	ldrh	r6, [r0, #36]	@ 0x24
 8013dd0:	8d00      	ldrh	r0, [r0, #40]	@ 0x28
 8013dd2:	9611      	str	r6, [sp, #68]	@ 0x44
 8013dd4:	9012      	str	r0, [sp, #72]	@ 0x48
 8013dd6:	680e      	ldr	r6, [r1, #0]
 8013dd8:	2c00      	cmp	r4, #0
 8013dda:	d069      	beq.n	8013eb0 <forward_mp_integer_INT8+0x138>
 8013ddc:	f8d4 9004 	ldr.w	r9, [r4, #4]
 8013de0:	f1b9 0f00 	cmp.w	r9, #0
 8013de4:	d04c      	beq.n	8013e80 <forward_mp_integer_INT8+0x108>
 8013de6:	8865      	ldrh	r5, [r4, #2]
 8013de8:	2d00      	cmp	r5, #0
 8013dea:	d079      	beq.n	8013ee0 <forward_mp_integer_INT8+0x168>
 8013dec:	f8d9 1000 	ldr.w	r1, [r9]
 8013df0:	ed91 0a00 	vldr	s0, [r1]
 8013df4:	2e00      	cmp	r6, #0
 8013df6:	d077      	beq.n	8013ee8 <forward_mp_integer_INT8+0x170>
 8013df8:	6877      	ldr	r7, [r6, #4]
 8013dfa:	2f00      	cmp	r7, #0
 8013dfc:	d047      	beq.n	8013e8e <forward_mp_integer_INT8+0x116>
 8013dfe:	8871      	ldrh	r1, [r6, #2]
 8013e00:	9113      	str	r1, [sp, #76]	@ 0x4c
 8013e02:	2900      	cmp	r1, #0
 8013e04:	d05e      	beq.n	8013ec4 <forward_mp_integer_INT8+0x14c>
 8013e06:	683d      	ldr	r5, [r7, #0]
 8013e08:	f8db 0008 	ldr.w	r0, [fp, #8]
 8013e0c:	ed95 7a00 	vldr	s14, [r5]
 8013e10:	f8da 1008 	ldr.w	r1, [sl, #8]
 8013e14:	eef0 7a40 	vmov.f32	s15, s0
 8013e18:	ee80 0a07 	vdiv.f32	s0, s0, s14
 8013e1c:	f1b9 0f00 	cmp.w	r9, #0
 8013e20:	d05c      	beq.n	8013edc <forward_mp_integer_INT8+0x164>
 8013e22:	8864      	ldrh	r4, [r4, #2]
 8013e24:	2c00      	cmp	r4, #0
 8013e26:	d03e      	beq.n	8013ea6 <forward_mp_integer_INT8+0x12e>
 8013e28:	f8d9 4004 	ldr.w	r4, [r9, #4]
 8013e2c:	f994 4000 	ldrsb.w	r4, [r4]
 8013e30:	2e00      	cmp	r6, #0
 8013e32:	d03b      	beq.n	8013eac <forward_mp_integer_INT8+0x134>
 8013e34:	2f00      	cmp	r7, #0
 8013e36:	d039      	beq.n	8013eac <forward_mp_integer_INT8+0x134>
 8013e38:	8875      	ldrh	r5, [r6, #2]
 8013e3a:	9513      	str	r5, [sp, #76]	@ 0x4c
 8013e3c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013e3e:	b115      	cbz	r5, 8013e46 <forward_mp_integer_INT8+0xce>
 8013e40:	687d      	ldr	r5, [r7, #4]
 8013e42:	f995 5000 	ldrsb.w	r5, [r5]
 8013e46:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8013e4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013e4e:	da5d      	bge.n	8013f0c <forward_mp_integer_INT8+0x194>
 8013e50:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
 8013e54:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8013e56:	9406      	str	r4, [sp, #24]
 8013e58:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8013e5a:	9405      	str	r4, [sp, #20]
 8013e5c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8013e5e:	9404      	str	r4, [sp, #16]
 8013e60:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8013e62:	9403      	str	r4, [sp, #12]
 8013e64:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8013e66:	9402      	str	r4, [sp, #8]
 8013e68:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8013e6a:	e9cd ce07 	strd	ip, lr, [sp, #28]
 8013e6e:	e9cd 8400 	strd	r8, r4, [sp]
 8013e72:	f000 ffcb 	bl	8014e0c <forward_lite_maxpool_is8os8_scaleneg>
 8013e76:	b015      	add	sp, #84	@ 0x54
 8013e78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e7c:	6853      	ldr	r3, [r2, #4]
 8013e7e:	deff      	udf	#255	@ 0xff
 8013e80:	2e00      	cmp	r6, #0
 8013e82:	d03b      	beq.n	8013efc <forward_mp_integer_INT8+0x184>
 8013e84:	6877      	ldr	r7, [r6, #4]
 8013e86:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8013e8a:	2f00      	cmp	r7, #0
 8013e8c:	d1b7      	bne.n	8013dfe <forward_mp_integer_INT8+0x86>
 8013e8e:	f8db 0008 	ldr.w	r0, [fp, #8]
 8013e92:	f8da 1008 	ldr.w	r1, [sl, #8]
 8013e96:	f1b9 0f00 	cmp.w	r9, #0
 8013e9a:	d073      	beq.n	8013f84 <forward_mp_integer_INT8+0x20c>
 8013e9c:	8864      	ldrh	r4, [r4, #2]
 8013e9e:	2c00      	cmp	r4, #0
 8013ea0:	d169      	bne.n	8013f76 <forward_mp_integer_INT8+0x1fe>
 8013ea2:	eef0 7a40 	vmov.f32	s15, s0
 8013ea6:	2400      	movs	r4, #0
 8013ea8:	2f00      	cmp	r7, #0
 8013eaa:	d1c5      	bne.n	8013e38 <forward_mp_integer_INT8+0xc0>
 8013eac:	2500      	movs	r5, #0
 8013eae:	e7ca      	b.n	8013e46 <forward_mp_integer_INT8+0xce>
 8013eb0:	2e00      	cmp	r6, #0
 8013eb2:	d041      	beq.n	8013f38 <forward_mp_integer_INT8+0x1c0>
 8013eb4:	6877      	ldr	r7, [r6, #4]
 8013eb6:	b30f      	cbz	r7, 8013efc <forward_mp_integer_INT8+0x184>
 8013eb8:	8871      	ldrh	r1, [r6, #2]
 8013eba:	9113      	str	r1, [sp, #76]	@ 0x4c
 8013ebc:	2900      	cmp	r1, #0
 8013ebe:	d14c      	bne.n	8013f5a <forward_mp_integer_INT8+0x1e2>
 8013ec0:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8013ec4:	f8db 0008 	ldr.w	r0, [fp, #8]
 8013ec8:	f8da 1008 	ldr.w	r1, [sl, #8]
 8013ecc:	b194      	cbz	r4, 8013ef4 <forward_mp_integer_INT8+0x17c>
 8013ece:	f8d4 9004 	ldr.w	r9, [r4, #4]
 8013ed2:	eef0 7a40 	vmov.f32	s15, s0
 8013ed6:	f1b9 0f00 	cmp.w	r9, #0
 8013eda:	d1a2      	bne.n	8013e22 <forward_mp_integer_INT8+0xaa>
 8013edc:	464c      	mov	r4, r9
 8013ede:	e7ad      	b.n	8013e3c <forward_mp_integer_INT8+0xc4>
 8013ee0:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8013ee4:	2e00      	cmp	r6, #0
 8013ee6:	d187      	bne.n	8013df8 <forward_mp_integer_INT8+0x80>
 8013ee8:	f8db 0008 	ldr.w	r0, [fp, #8]
 8013eec:	f8da 1008 	ldr.w	r1, [sl, #8]
 8013ef0:	bb5d      	cbnz	r5, 8013f4a <forward_mp_integer_INT8+0x1d2>
 8013ef2:	462c      	mov	r4, r5
 8013ef4:	eef0 7a40 	vmov.f32	s15, s0
 8013ef8:	4625      	mov	r5, r4
 8013efa:	e7a4      	b.n	8013e46 <forward_mp_integer_INT8+0xce>
 8013efc:	2400      	movs	r4, #0
 8013efe:	f8db 0008 	ldr.w	r0, [fp, #8]
 8013f02:	f8da 1008 	ldr.w	r1, [sl, #8]
 8013f06:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8013f0a:	4625      	mov	r5, r4
 8013f0c:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
 8013f10:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8013f12:	9406      	str	r4, [sp, #24]
 8013f14:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8013f16:	9405      	str	r4, [sp, #20]
 8013f18:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8013f1a:	9404      	str	r4, [sp, #16]
 8013f1c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8013f1e:	9403      	str	r4, [sp, #12]
 8013f20:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8013f22:	9402      	str	r4, [sp, #8]
 8013f24:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8013f26:	e9cd ce07 	strd	ip, lr, [sp, #28]
 8013f2a:	e9cd 8400 	strd	r8, r4, [sp]
 8013f2e:	f000 fb45 	bl	80145bc <forward_lite_maxpool_is8os8_scalepos>
 8013f32:	b015      	add	sp, #84	@ 0x54
 8013f34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f38:	f8db 0008 	ldr.w	r0, [fp, #8]
 8013f3c:	f8da 1008 	ldr.w	r1, [sl, #8]
 8013f40:	4634      	mov	r4, r6
 8013f42:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8013f46:	4635      	mov	r5, r6
 8013f48:	e7e0      	b.n	8013f0c <forward_mp_integer_INT8+0x194>
 8013f4a:	f8d9 4004 	ldr.w	r4, [r9, #4]
 8013f4e:	eef0 7a40 	vmov.f32	s15, s0
 8013f52:	f994 4000 	ldrsb.w	r4, [r4]
 8013f56:	4635      	mov	r5, r6
 8013f58:	e775      	b.n	8013e46 <forward_mp_integer_INT8+0xce>
 8013f5a:	683d      	ldr	r5, [r7, #0]
 8013f5c:	f8db 0008 	ldr.w	r0, [fp, #8]
 8013f60:	edd5 6a00 	vldr	s13, [r5]
 8013f64:	f8da 1008 	ldr.w	r1, [sl, #8]
 8013f68:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8013f6c:	ee87 0a26 	vdiv.f32	s0, s14, s13
 8013f70:	eef0 7a47 	vmov.f32	s15, s14
 8013f74:	e764      	b.n	8013e40 <forward_mp_integer_INT8+0xc8>
 8013f76:	f8d9 4004 	ldr.w	r4, [r9, #4]
 8013f7a:	eef0 7a40 	vmov.f32	s15, s0
 8013f7e:	f994 4000 	ldrsb.w	r4, [r4]
 8013f82:	e793      	b.n	8013eac <forward_mp_integer_INT8+0x134>
 8013f84:	464c      	mov	r4, r9
 8013f86:	eef0 7a40 	vmov.f32	s15, s0
 8013f8a:	464d      	mov	r5, r9
 8013f8c:	e75b      	b.n	8013e46 <forward_mp_integer_INT8+0xce>
 8013f8e:	2300      	movs	r3, #0
 8013f90:	685b      	ldr	r3, [r3, #4]
 8013f92:	deff      	udf	#255	@ 0xff
 8013f94:	68d3      	ldr	r3, [r2, #12]
 8013f96:	deff      	udf	#255	@ 0xff

08013f98 <forward_ap_integer_INT8>:
 8013f98:	6983      	ldr	r3, [r0, #24]
 8013f9a:	881a      	ldrh	r2, [r3, #0]
 8013f9c:	2a00      	cmp	r2, #0
 8013f9e:	d074      	beq.n	801408a <forward_ap_integer_INT8+0xf2>
 8013fa0:	6859      	ldr	r1, [r3, #4]
 8013fa2:	684b      	ldr	r3, [r1, #4]
 8013fa4:	b103      	cbz	r3, 8013fa8 <forward_ap_integer_INT8+0x10>
 8013fa6:	681b      	ldr	r3, [r3, #0]
 8013fa8:	2a01      	cmp	r2, #1
 8013faa:	f000 80e0 	beq.w	801416e <forward_ap_integer_INT8+0x1d6>
 8013fae:	690a      	ldr	r2, [r1, #16]
 8013fb0:	2a00      	cmp	r2, #0
 8013fb2:	f000 80df 	beq.w	8014174 <forward_ap_integer_INT8+0x1dc>
 8013fb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013fba:	68de      	ldr	r6, [r3, #12]
 8013fbc:	6811      	ldr	r1, [r2, #0]
 8013fbe:	6b07      	ldr	r7, [r0, #48]	@ 0x30
 8013fc0:	681c      	ldr	r4, [r3, #0]
 8013fc2:	f8d3 b018 	ldr.w	fp, [r3, #24]
 8013fc6:	f8b6 8004 	ldrh.w	r8, [r6, #4]
 8013fca:	8932      	ldrh	r2, [r6, #8]
 8013fcc:	89b3      	ldrh	r3, [r6, #12]
 8013fce:	8b86      	ldrh	r6, [r0, #28]
 8013fd0:	68cd      	ldr	r5, [r1, #12]
 8013fd2:	f8d1 a018 	ldr.w	sl, [r1, #24]
 8013fd6:	f8b5 c008 	ldrh.w	ip, [r5, #8]
 8013fda:	f8b5 e00c 	ldrh.w	lr, [r5, #12]
 8013fde:	b095      	sub	sp, #84	@ 0x54
 8013fe0:	960d      	str	r6, [sp, #52]	@ 0x34
 8013fe2:	8c06      	ldrh	r6, [r0, #32]
 8013fe4:	960e      	str	r6, [sp, #56]	@ 0x38
 8013fe6:	88be      	ldrh	r6, [r7, #4]
 8013fe8:	960f      	str	r6, [sp, #60]	@ 0x3c
 8013fea:	883e      	ldrh	r6, [r7, #0]
 8013fec:	9610      	str	r6, [sp, #64]	@ 0x40
 8013fee:	8c86      	ldrh	r6, [r0, #36]	@ 0x24
 8013ff0:	8d00      	ldrh	r0, [r0, #40]	@ 0x28
 8013ff2:	9611      	str	r6, [sp, #68]	@ 0x44
 8013ff4:	9012      	str	r0, [sp, #72]	@ 0x48
 8013ff6:	680e      	ldr	r6, [r1, #0]
 8013ff8:	2c00      	cmp	r4, #0
 8013ffa:	d060      	beq.n	80140be <forward_ap_integer_INT8+0x126>
 8013ffc:	f8d4 9004 	ldr.w	r9, [r4, #4]
 8014000:	f1b9 0f00 	cmp.w	r9, #0
 8014004:	d043      	beq.n	801408e <forward_ap_integer_INT8+0xf6>
 8014006:	8865      	ldrh	r5, [r4, #2]
 8014008:	2d00      	cmp	r5, #0
 801400a:	d06e      	beq.n	80140ea <forward_ap_integer_INT8+0x152>
 801400c:	f8d9 1000 	ldr.w	r1, [r9]
 8014010:	ed91 0a00 	vldr	s0, [r1]
 8014014:	2e00      	cmp	r6, #0
 8014016:	d06c      	beq.n	80140f2 <forward_ap_integer_INT8+0x15a>
 8014018:	6877      	ldr	r7, [r6, #4]
 801401a:	2f00      	cmp	r7, #0
 801401c:	d03e      	beq.n	801409c <forward_ap_integer_INT8+0x104>
 801401e:	8871      	ldrh	r1, [r6, #2]
 8014020:	9113      	str	r1, [sp, #76]	@ 0x4c
 8014022:	2900      	cmp	r1, #0
 8014024:	d053      	beq.n	80140ce <forward_ap_integer_INT8+0x136>
 8014026:	683d      	ldr	r5, [r7, #0]
 8014028:	f8db 0008 	ldr.w	r0, [fp, #8]
 801402c:	f8da 1008 	ldr.w	r1, [sl, #8]
 8014030:	edd5 0a00 	vldr	s1, [r5]
 8014034:	f1b9 0f00 	cmp.w	r9, #0
 8014038:	d055      	beq.n	80140e6 <forward_ap_integer_INT8+0x14e>
 801403a:	8864      	ldrh	r4, [r4, #2]
 801403c:	2c00      	cmp	r4, #0
 801403e:	d039      	beq.n	80140b4 <forward_ap_integer_INT8+0x11c>
 8014040:	f8d9 4004 	ldr.w	r4, [r9, #4]
 8014044:	f994 4000 	ldrsb.w	r4, [r4]
 8014048:	2e00      	cmp	r6, #0
 801404a:	d036      	beq.n	80140ba <forward_ap_integer_INT8+0x122>
 801404c:	2f00      	cmp	r7, #0
 801404e:	d034      	beq.n	80140ba <forward_ap_integer_INT8+0x122>
 8014050:	8875      	ldrh	r5, [r6, #2]
 8014052:	9513      	str	r5, [sp, #76]	@ 0x4c
 8014054:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8014056:	b115      	cbz	r5, 801405e <forward_ap_integer_INT8+0xc6>
 8014058:	687d      	ldr	r5, [r7, #4]
 801405a:	f995 5000 	ldrsb.w	r5, [r5]
 801405e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
 8014062:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8014064:	9406      	str	r4, [sp, #24]
 8014066:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8014068:	9405      	str	r4, [sp, #20]
 801406a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801406c:	9404      	str	r4, [sp, #16]
 801406e:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8014070:	9403      	str	r4, [sp, #12]
 8014072:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8014074:	9402      	str	r4, [sp, #8]
 8014076:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8014078:	e9cd ce07 	strd	ip, lr, [sp, #28]
 801407c:	e9cd 8400 	strd	r8, r4, [sp]
 8014080:	f000 fb7e 	bl	8014780 <forward_lite_avepool_is8os8>
 8014084:	b015      	add	sp, #84	@ 0x54
 8014086:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801408a:	6853      	ldr	r3, [r2, #4]
 801408c:	deff      	udf	#255	@ 0xff
 801408e:	2e00      	cmp	r6, #0
 8014090:	d039      	beq.n	8014106 <forward_ap_integer_INT8+0x16e>
 8014092:	6877      	ldr	r7, [r6, #4]
 8014094:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8014098:	2f00      	cmp	r7, #0
 801409a:	d1c0      	bne.n	801401e <forward_ap_integer_INT8+0x86>
 801409c:	f8db 0008 	ldr.w	r0, [fp, #8]
 80140a0:	f8da 1008 	ldr.w	r1, [sl, #8]
 80140a4:	f1b9 0f00 	cmp.w	r9, #0
 80140a8:	d05c      	beq.n	8014164 <forward_ap_integer_INT8+0x1cc>
 80140aa:	8864      	ldrh	r4, [r4, #2]
 80140ac:	2c00      	cmp	r4, #0
 80140ae:	d152      	bne.n	8014156 <forward_ap_integer_INT8+0x1be>
 80140b0:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 80140b4:	2400      	movs	r4, #0
 80140b6:	2f00      	cmp	r7, #0
 80140b8:	d1ca      	bne.n	8014050 <forward_ap_integer_INT8+0xb8>
 80140ba:	2500      	movs	r5, #0
 80140bc:	e7cf      	b.n	801405e <forward_ap_integer_INT8+0xc6>
 80140be:	b316      	cbz	r6, 8014106 <forward_ap_integer_INT8+0x16e>
 80140c0:	6877      	ldr	r7, [r6, #4]
 80140c2:	b35f      	cbz	r7, 801411c <forward_ap_integer_INT8+0x184>
 80140c4:	8871      	ldrh	r1, [r6, #2]
 80140c6:	9113      	str	r1, [sp, #76]	@ 0x4c
 80140c8:	bb99      	cbnz	r1, 8014132 <forward_ap_integer_INT8+0x19a>
 80140ca:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80140ce:	f8db 0008 	ldr.w	r0, [fp, #8]
 80140d2:	f8da 1008 	ldr.w	r1, [sl, #8]
 80140d6:	b194      	cbz	r4, 80140fe <forward_ap_integer_INT8+0x166>
 80140d8:	f8d4 9004 	ldr.w	r9, [r4, #4]
 80140dc:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 80140e0:	f1b9 0f00 	cmp.w	r9, #0
 80140e4:	d1a9      	bne.n	801403a <forward_ap_integer_INT8+0xa2>
 80140e6:	464c      	mov	r4, r9
 80140e8:	e7b4      	b.n	8014054 <forward_ap_integer_INT8+0xbc>
 80140ea:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80140ee:	2e00      	cmp	r6, #0
 80140f0:	d192      	bne.n	8014018 <forward_ap_integer_INT8+0x80>
 80140f2:	f8db 0008 	ldr.w	r0, [fp, #8]
 80140f6:	f8da 1008 	ldr.w	r1, [sl, #8]
 80140fa:	bb25      	cbnz	r5, 8014146 <forward_ap_integer_INT8+0x1ae>
 80140fc:	462c      	mov	r4, r5
 80140fe:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 8014102:	4625      	mov	r5, r4
 8014104:	e7ab      	b.n	801405e <forward_ap_integer_INT8+0xc6>
 8014106:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 801410a:	f8db 0008 	ldr.w	r0, [fp, #8]
 801410e:	f8da 1008 	ldr.w	r1, [sl, #8]
 8014112:	4634      	mov	r4, r6
 8014114:	eef0 0a40 	vmov.f32	s1, s0
 8014118:	4635      	mov	r5, r6
 801411a:	e7a0      	b.n	801405e <forward_ap_integer_INT8+0xc6>
 801411c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8014120:	f8db 0008 	ldr.w	r0, [fp, #8]
 8014124:	f8da 1008 	ldr.w	r1, [sl, #8]
 8014128:	463c      	mov	r4, r7
 801412a:	eef0 0a40 	vmov.f32	s1, s0
 801412e:	463d      	mov	r5, r7
 8014130:	e795      	b.n	801405e <forward_ap_integer_INT8+0xc6>
 8014132:	683d      	ldr	r5, [r7, #0]
 8014134:	f8db 0008 	ldr.w	r0, [fp, #8]
 8014138:	f8da 1008 	ldr.w	r1, [sl, #8]
 801413c:	edd5 0a00 	vldr	s1, [r5]
 8014140:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8014144:	e788      	b.n	8014058 <forward_ap_integer_INT8+0xc0>
 8014146:	f8d9 4004 	ldr.w	r4, [r9, #4]
 801414a:	4635      	mov	r5, r6
 801414c:	f994 4000 	ldrsb.w	r4, [r4]
 8014150:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 8014154:	e783      	b.n	801405e <forward_ap_integer_INT8+0xc6>
 8014156:	f8d9 4004 	ldr.w	r4, [r9, #4]
 801415a:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 801415e:	f994 4000 	ldrsb.w	r4, [r4]
 8014162:	e7aa      	b.n	80140ba <forward_ap_integer_INT8+0x122>
 8014164:	464c      	mov	r4, r9
 8014166:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 801416a:	464d      	mov	r5, r9
 801416c:	e777      	b.n	801405e <forward_ap_integer_INT8+0xc6>
 801416e:	2300      	movs	r3, #0
 8014170:	685b      	ldr	r3, [r3, #4]
 8014172:	deff      	udf	#255	@ 0xff
 8014174:	68d3      	ldr	r3, [r2, #12]
 8014176:	deff      	udf	#255	@ 0xff

08014178 <forward_eltwise_integer_INT8>:
 8014178:	6982      	ldr	r2, [r0, #24]
 801417a:	8813      	ldrh	r3, [r2, #0]
 801417c:	2b00      	cmp	r3, #0
 801417e:	f000 8107 	beq.w	8014390 <forward_eltwise_integer_INT8+0x218>
 8014182:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014186:	ed2d 8b02 	vpush	{d8}
 801418a:	6852      	ldr	r2, [r2, #4]
 801418c:	6854      	ldr	r4, [r2, #4]
 801418e:	b0ab      	sub	sp, #172	@ 0xac
 8014190:	2c00      	cmp	r4, #0
 8014192:	f000 810c 	beq.w	80143ae <forward_eltwise_integer_INT8+0x236>
 8014196:	e9d4 5400 	ldrd	r5, r4, [r4]
 801419a:	2b01      	cmp	r3, #1
 801419c:	f000 81c9 	beq.w	8014532 <forward_eltwise_integer_INT8+0x3ba>
 80141a0:	6916      	ldr	r6, [r2, #16]
 80141a2:	b106      	cbz	r6, 80141a6 <forward_eltwise_integer_INT8+0x2e>
 80141a4:	6836      	ldr	r6, [r6, #0]
 80141a6:	e9d0 7307 	ldrd	r7, r3, [r0, #28]
 80141aa:	68a0      	ldr	r0, [r4, #8]
 80141ac:	930d      	str	r3, [sp, #52]	@ 0x34
 80141ae:	68ab      	ldr	r3, [r5, #8]
 80141b0:	ea83 0200 	eor.w	r2, r3, r0
 80141b4:	f032 02ff 	bics.w	r2, r2, #255	@ 0xff
 80141b8:	f105 0108 	add.w	r1, r5, #8
 80141bc:	f104 0b08 	add.w	fp, r4, #8
 80141c0:	f3c3 2c17 	ubfx	ip, r3, #8, #24
 80141c4:	d10e      	bne.n	80141e4 <forward_eltwise_integer_INT8+0x6c>
 80141c6:	4663      	mov	r3, ip
 80141c8:	4686      	mov	lr, r0
 80141ca:	2b00      	cmp	r3, #0
 80141cc:	f000 80eb 	beq.w	80143a6 <forward_eltwise_integer_INT8+0x22e>
 80141d0:	3b01      	subs	r3, #1
 80141d2:	68e2      	ldr	r2, [r4, #12]
 80141d4:	68e8      	ldr	r0, [r5, #12]
 80141d6:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80141da:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 80141de:	4290      	cmp	r0, r2
 80141e0:	d0f3      	beq.n	80141ca <forward_eltwise_integer_INT8+0x52>
 80141e2:	4670      	mov	r0, lr
 80141e4:	f04f 0900 	mov.w	r9, #0
 80141e8:	f10c 33ff 	add.w	r3, ip, #4294967295	@ 0xffffffff
 80141ec:	009b      	lsls	r3, r3, #2
 80141ee:	e006      	b.n	80141fe <forward_eltwise_integer_INT8+0x86>
 80141f0:	68ea      	ldr	r2, [r5, #12]
 80141f2:	58d2      	ldr	r2, [r2, r3]
 80141f4:	2a01      	cmp	r2, #1
 80141f6:	f1a3 0304 	sub.w	r3, r3, #4
 80141fa:	f040 80d1 	bne.w	80143a0 <forward_eltwise_integer_INT8+0x228>
 80141fe:	1d1a      	adds	r2, r3, #4
 8014200:	d1f6      	bne.n	80141f0 <forward_eltwise_integer_INT8+0x78>
 8014202:	f04f 0a01 	mov.w	sl, #1
 8014206:	f3c0 2017 	ubfx	r0, r0, #8, #24
 801420a:	b140      	cbz	r0, 801421e <forward_eltwise_integer_INT8+0xa6>
 801420c:	68e3      	ldr	r3, [r4, #12]
 801420e:	3801      	subs	r0, #1
 8014210:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8014214:	2b01      	cmp	r3, #1
 8014216:	d0f8      	beq.n	801420a <forward_eltwise_integer_INT8+0x92>
 8014218:	2300      	movs	r3, #0
 801421a:	930a      	str	r3, [sp, #40]	@ 0x28
 801421c:	e001      	b.n	8014222 <forward_eltwise_integer_INT8+0xaa>
 801421e:	2301      	movs	r3, #1
 8014220:	930a      	str	r3, [sp, #40]	@ 0x28
 8014222:	6972      	ldr	r2, [r6, #20]
 8014224:	696b      	ldr	r3, [r5, #20]
 8014226:	f8d2 8004 	ldr.w	r8, [r2, #4]
 801422a:	685b      	ldr	r3, [r3, #4]
 801422c:	930c      	str	r3, [sp, #48]	@ 0x30
 801422e:	aa1b      	add	r2, sp, #108	@ 0x6c
 8014230:	2000      	movs	r0, #0
 8014232:	9216      	str	r2, [sp, #88]	@ 0x58
 8014234:	f240 5201 	movw	r2, #1281	@ 0x501
 8014238:	e9cd 001b 	strd	r0, r0, [sp, #108]	@ 0x6c
 801423c:	e9cd 001d 	strd	r0, r0, [sp, #116]	@ 0x74
 8014240:	901f      	str	r0, [sp, #124]	@ 0x7c
 8014242:	9215      	str	r2, [sp, #84]	@ 0x54
 8014244:	a815      	add	r0, sp, #84	@ 0x54
 8014246:	465a      	mov	r2, fp
 8014248:	910b      	str	r1, [sp, #44]	@ 0x2c
 801424a:	f00d fb2f 	bl	80218ac <core_get_broadcasted_shape>
 801424e:	f8d5 c000 	ldr.w	ip, [r5]
 8014252:	69ab      	ldr	r3, [r5, #24]
 8014254:	9309      	str	r3, [sp, #36]	@ 0x24
 8014256:	6832      	ldr	r2, [r6, #0]
 8014258:	6820      	ldr	r0, [r4, #0]
 801425a:	e9dd 130b 	ldrd	r1, r3, [sp, #44]	@ 0x2c
 801425e:	f1bc 0f00 	cmp.w	ip, #0
 8014262:	d019      	beq.n	8014298 <forward_eltwise_integer_INT8+0x120>
 8014264:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8014268:	b1b5      	cbz	r5, 8014298 <forward_eltwise_integer_INT8+0x120>
 801426a:	f8bc e002 	ldrh.w	lr, [ip, #2]
 801426e:	f1be 0f00 	cmp.w	lr, #0
 8014272:	d011      	beq.n	8014298 <forward_eltwise_integer_INT8+0x120>
 8014274:	682d      	ldr	r5, [r5, #0]
 8014276:	682d      	ldr	r5, [r5, #0]
 8014278:	950f      	str	r5, [sp, #60]	@ 0x3c
 801427a:	b990      	cbnz	r0, 80142a2 <forward_eltwise_integer_INT8+0x12a>
 801427c:	f04f 557e 	mov.w	r5, #1065353216	@ 0x3f800000
 8014280:	9510      	str	r5, [sp, #64]	@ 0x40
 8014282:	b1da      	cbz	r2, 80142bc <forward_eltwise_integer_INT8+0x144>
 8014284:	6855      	ldr	r5, [r2, #4]
 8014286:	b1cd      	cbz	r5, 80142bc <forward_eltwise_integer_INT8+0x144>
 8014288:	f8b2 e002 	ldrh.w	lr, [r2, #2]
 801428c:	f1be 0f00 	cmp.w	lr, #0
 8014290:	d014      	beq.n	80142bc <forward_eltwise_integer_INT8+0x144>
 8014292:	682d      	ldr	r5, [r5, #0]
 8014294:	682d      	ldr	r5, [r5, #0]
 8014296:	e013      	b.n	80142c0 <forward_eltwise_integer_INT8+0x148>
 8014298:	f04f 557e 	mov.w	r5, #1065353216	@ 0x3f800000
 801429c:	950f      	str	r5, [sp, #60]	@ 0x3c
 801429e:	2800      	cmp	r0, #0
 80142a0:	d0ec      	beq.n	801427c <forward_eltwise_integer_INT8+0x104>
 80142a2:	6845      	ldr	r5, [r0, #4]
 80142a4:	2d00      	cmp	r5, #0
 80142a6:	d0e9      	beq.n	801427c <forward_eltwise_integer_INT8+0x104>
 80142a8:	f8b0 e002 	ldrh.w	lr, [r0, #2]
 80142ac:	f1be 0f00 	cmp.w	lr, #0
 80142b0:	d0e4      	beq.n	801427c <forward_eltwise_integer_INT8+0x104>
 80142b2:	682d      	ldr	r5, [r5, #0]
 80142b4:	682d      	ldr	r5, [r5, #0]
 80142b6:	9510      	str	r5, [sp, #64]	@ 0x40
 80142b8:	2a00      	cmp	r2, #0
 80142ba:	d1e3      	bne.n	8014284 <forward_eltwise_integer_INT8+0x10c>
 80142bc:	f04f 557e 	mov.w	r5, #1065353216	@ 0x3f800000
 80142c0:	69b6      	ldr	r6, [r6, #24]
 80142c2:	9511      	str	r5, [sp, #68]	@ 0x44
 80142c4:	69a5      	ldr	r5, [r4, #24]
 80142c6:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 80142c8:	68ad      	ldr	r5, [r5, #8]
 80142ca:	68a4      	ldr	r4, [r4, #8]
 80142cc:	68b6      	ldr	r6, [r6, #8]
 80142ce:	f1bc 0f00 	cmp.w	ip, #0
 80142d2:	d00d      	beq.n	80142f0 <forward_eltwise_integer_INT8+0x178>
 80142d4:	f8dc e004 	ldr.w	lr, [ip, #4]
 80142d8:	f1be 0f00 	cmp.w	lr, #0
 80142dc:	d05c      	beq.n	8014398 <forward_eltwise_integer_INT8+0x220>
 80142de:	f8bc c002 	ldrh.w	ip, [ip, #2]
 80142e2:	f1bc 0f00 	cmp.w	ip, #0
 80142e6:	d003      	beq.n	80142f0 <forward_eltwise_integer_INT8+0x178>
 80142e8:	f8de c004 	ldr.w	ip, [lr, #4]
 80142ec:	f99c c000 	ldrsb.w	ip, [ip]
 80142f0:	f88d c039 	strb.w	ip, [sp, #57]	@ 0x39
 80142f4:	b150      	cbz	r0, 801430c <forward_eltwise_integer_INT8+0x194>
 80142f6:	f8d0 c004 	ldr.w	ip, [r0, #4]
 80142fa:	f1bc 0f00 	cmp.w	ip, #0
 80142fe:	d049      	beq.n	8014394 <forward_eltwise_integer_INT8+0x21c>
 8014300:	8840      	ldrh	r0, [r0, #2]
 8014302:	b118      	cbz	r0, 801430c <forward_eltwise_integer_INT8+0x194>
 8014304:	f8dc 0004 	ldr.w	r0, [ip, #4]
 8014308:	f990 0000 	ldrsb.w	r0, [r0]
 801430c:	f88d 003a 	strb.w	r0, [sp, #58]	@ 0x3a
 8014310:	b13a      	cbz	r2, 8014322 <forward_eltwise_integer_INT8+0x1aa>
 8014312:	6850      	ldr	r0, [r2, #4]
 8014314:	2800      	cmp	r0, #0
 8014316:	d041      	beq.n	801439c <forward_eltwise_integer_INT8+0x224>
 8014318:	8852      	ldrh	r2, [r2, #2]
 801431a:	b112      	cbz	r2, 8014322 <forward_eltwise_integer_INT8+0x1aa>
 801431c:	6842      	ldr	r2, [r0, #4]
 801431e:	f992 2000 	ldrsb.w	r2, [r2]
 8014322:	f88d 203b 	strb.w	r2, [sp, #59]	@ 0x3b
 8014326:	f1b9 0f00 	cmp.w	r9, #0
 801432a:	d12c      	bne.n	8014386 <forward_eltwise_integer_INT8+0x20e>
 801432c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801432e:	4552      	cmp	r2, sl
 8014330:	d03f      	beq.n	80143b2 <forward_eltwise_integer_INT8+0x23a>
 8014332:	f1ca 0702 	rsb	r7, sl, #2
 8014336:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8014338:	0a1b      	lsrs	r3, r3, #8
 801433a:	f000 80f8 	beq.w	801452e <forward_eltwise_integer_INT8+0x3b6>
 801433e:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8014340:	eb00 0283 	add.w	r2, r0, r3, lsl #2
 8014344:	2301      	movs	r3, #1
 8014346:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 801434a:	4290      	cmp	r0, r2
 801434c:	fb01 f303 	mul.w	r3, r1, r3
 8014350:	d1f9      	bne.n	8014346 <forward_eltwise_integer_INT8+0x1ce>
 8014352:	4621      	mov	r1, r4
 8014354:	f10d 043b 	add.w	r4, sp, #59	@ 0x3b
 8014358:	9405      	str	r4, [sp, #20]
 801435a:	ac11      	add	r4, sp, #68	@ 0x44
 801435c:	9404      	str	r4, [sp, #16]
 801435e:	f10d 043a 	add.w	r4, sp, #58	@ 0x3a
 8014362:	9403      	str	r4, [sp, #12]
 8014364:	ac10      	add	r4, sp, #64	@ 0x40
 8014366:	9402      	str	r4, [sp, #8]
 8014368:	f10d 0439 	add.w	r4, sp, #57	@ 0x39
 801436c:	9401      	str	r4, [sp, #4]
 801436e:	ac0f      	add	r4, sp, #60	@ 0x3c
 8014370:	9400      	str	r4, [sp, #0]
 8014372:	9706      	str	r7, [sp, #24]
 8014374:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8014376:	462a      	mov	r2, r5
 8014378:	4630      	mov	r0, r6
 801437a:	47a0      	blx	r4
 801437c:	b02b      	add	sp, #172	@ 0xac
 801437e:	ecbd 8b02 	vpop	{d8}
 8014382:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014386:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014388:	4553      	cmp	r3, sl
 801438a:	d1d2      	bne.n	8014332 <forward_eltwise_integer_INT8+0x1ba>
 801438c:	2700      	movs	r7, #0
 801438e:	e7d2      	b.n	8014336 <forward_eltwise_integer_INT8+0x1be>
 8014390:	685b      	ldr	r3, [r3, #4]
 8014392:	deff      	udf	#255	@ 0xff
 8014394:	4660      	mov	r0, ip
 8014396:	e7b9      	b.n	801430c <forward_eltwise_integer_INT8+0x194>
 8014398:	46f4      	mov	ip, lr
 801439a:	e7a9      	b.n	80142f0 <forward_eltwise_integer_INT8+0x178>
 801439c:	4602      	mov	r2, r0
 801439e:	e7c0      	b.n	8014322 <forward_eltwise_integer_INT8+0x1aa>
 80143a0:	f04f 0a00 	mov.w	sl, #0
 80143a4:	e72f      	b.n	8014206 <forward_eltwise_integer_INT8+0x8e>
 80143a6:	4670      	mov	r0, lr
 80143a8:	f04f 0901 	mov.w	r9, #1
 80143ac:	e71c      	b.n	80141e8 <forward_eltwise_integer_INT8+0x70>
 80143ae:	4625      	mov	r5, r4
 80143b0:	e6f3      	b.n	801419a <forward_eltwise_integer_INT8+0x22>
 80143b2:	aa20      	add	r2, sp, #128	@ 0x80
 80143b4:	9218      	str	r2, [sp, #96]	@ 0x60
 80143b6:	aa25      	add	r2, sp, #148	@ 0x94
 80143b8:	921a      	str	r2, [sp, #104]	@ 0x68
 80143ba:	f240 5202 	movw	r2, #1282	@ 0x502
 80143be:	9217      	str	r2, [sp, #92]	@ 0x5c
 80143c0:	9219      	str	r2, [sp, #100]	@ 0x64
 80143c2:	a817      	add	r0, sp, #92	@ 0x5c
 80143c4:	aa15      	add	r2, sp, #84	@ 0x54
 80143c6:	9309      	str	r3, [sp, #36]	@ 0x24
 80143c8:	e9cd 9921 	strd	r9, r9, [sp, #132]	@ 0x84
 80143cc:	e9cd 9923 	strd	r9, r9, [sp, #140]	@ 0x8c
 80143d0:	e9cd 9926 	strd	r9, r9, [sp, #152]	@ 0x98
 80143d4:	e9cd 9928 	strd	r9, r9, [sp, #160]	@ 0xa0
 80143d8:	f8cd 9080 	str.w	r9, [sp, #128]	@ 0x80
 80143dc:	f8cd 9094 	str.w	r9, [sp, #148]	@ 0x94
 80143e0:	f00d fa90 	bl	8021904 <core_compute_offsets>
 80143e4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80143e6:	aa15      	add	r2, sp, #84	@ 0x54
 80143e8:	4659      	mov	r1, fp
 80143ea:	a819      	add	r0, sp, #100	@ 0x64
 80143ec:	f00d fa8a 	bl	8021904 <core_compute_offsets>
 80143f0:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 80143f2:	68d3      	ldr	r3, [r2, #12]
 80143f4:	2b00      	cmp	r3, #0
 80143f6:	d0c1      	beq.n	801437c <forward_eltwise_integer_INT8+0x204>
 80143f8:	eddf 8a4f 	vldr	s17, [pc, #316]	@ 8014538 <forward_eltwise_integer_INT8+0x3c0>
 80143fc:	6891      	ldr	r1, [r2, #8]
 80143fe:	f8cd 9024 	str.w	r9, [sp, #36]	@ 0x24
 8014402:	2900      	cmp	r1, #0
 8014404:	d0ba      	beq.n	801437c <forward_eltwise_integer_INT8+0x204>
 8014406:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014408:	f04f 0b00 	mov.w	fp, #0
 801440c:	f3c0 2017 	ubfx	r0, r0, #8, #24
 8014410:	f04f 0a00 	mov.w	sl, #0
 8014414:	2804      	cmp	r0, #4
 8014416:	bf8c      	ite	hi
 8014418:	6911      	ldrhi	r1, [r2, #16]
 801441a:	2101      	movls	r1, #1
 801441c:	458a      	cmp	sl, r1
 801441e:	d26b      	bcs.n	80144f8 <forward_eltwise_integer_INT8+0x380>
 8014420:	6851      	ldr	r1, [r2, #4]
 8014422:	2900      	cmp	r1, #0
 8014424:	d057      	beq.n	80144d6 <forward_eltwise_integer_INT8+0x35e>
 8014426:	f04f 0900 	mov.w	r9, #0
 801442a:	eeb6 8a00 	vmov.f32	s16, #96	@ 0x3f000000  0.5
 801442e:	f994 2000 	ldrsb.w	r2, [r4]
 8014432:	f99d 1039 	ldrsb.w	r1, [sp, #57]	@ 0x39
 8014436:	eddd 6a0f 	vldr	s13, [sp, #60]	@ 0x3c
 801443a:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 801443e:	1a53      	subs	r3, r2, r1
 8014440:	ee07 3a90 	vmov	s15, r3
 8014444:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014448:	f99d 103a 	ldrsb.w	r1, [sp, #58]	@ 0x3a
 801444c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014450:	a814      	add	r0, sp, #80	@ 0x50
 8014452:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8014456:	f995 2000 	ldrsb.w	r2, [r5]
 801445a:	1a53      	subs	r3, r2, r1
 801445c:	ee07 3a90 	vmov	s15, r3
 8014460:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014464:	aa13      	add	r2, sp, #76	@ 0x4c
 8014466:	ee67 7a87 	vmul.f32	s15, s15, s14
 801446a:	a912      	add	r1, sp, #72	@ 0x48
 801446c:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 8014470:	47b8      	blx	r7
 8014472:	ed9d 6a14 	vldr	s12, [sp, #80]	@ 0x50
 8014476:	eddd 6a11 	vldr	s13, [sp, #68]	@ 0x44
 801447a:	f99d 303b 	ldrsb.w	r3, [sp, #59]	@ 0x3b
 801447e:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8014482:	ee07 3a10 	vmov	s14, r3
 8014486:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801448a:	ee77 7a87 	vadd.f32	s15, s15, s14
 801448e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014492:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014496:	bfd4      	ite	le
 8014498:	eeb0 7a68 	vmovle.f32	s14, s17
 801449c:	eeb0 7a48 	vmovgt.f32	s14, s16
 80144a0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80144a4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80144a8:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 80144ac:	ee17 2a10 	vmov	r2, s14
 80144b0:	f302 0207 	ssat	r2, #8, r2
 80144b4:	7032      	strb	r2, [r6, #0]
 80144b6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80144b8:	6852      	ldr	r2, [r2, #4]
 80144ba:	4414      	add	r4, r2
 80144bc:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 80144be:	6852      	ldr	r2, [r2, #4]
 80144c0:	4415      	add	r5, r2
 80144c2:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 80144c4:	6851      	ldr	r1, [r2, #4]
 80144c6:	f109 0901 	add.w	r9, r9, #1
 80144ca:	4549      	cmp	r1, r9
 80144cc:	4446      	add	r6, r8
 80144ce:	d8ae      	bhi.n	801442e <forward_eltwise_integer_INT8+0x2b6>
 80144d0:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80144d2:	f3c0 2017 	ubfx	r0, r0, #8, #24
 80144d6:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 80144d8:	f5b1 6fa0 	cmp.w	r1, #1280	@ 0x500
 80144dc:	d302      	bcc.n	80144e4 <forward_eltwise_integer_INT8+0x36c>
 80144de:	9918      	ldr	r1, [sp, #96]	@ 0x60
 80144e0:	6909      	ldr	r1, [r1, #16]
 80144e2:	440c      	add	r4, r1
 80144e4:	9919      	ldr	r1, [sp, #100]	@ 0x64
 80144e6:	f5b1 6fa0 	cmp.w	r1, #1280	@ 0x500
 80144ea:	d302      	bcc.n	80144f2 <forward_eltwise_integer_INT8+0x37a>
 80144ec:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80144ee:	6909      	ldr	r1, [r1, #16]
 80144f0:	440d      	add	r5, r1
 80144f2:	f10a 0a01 	add.w	sl, sl, #1
 80144f6:	e78d      	b.n	8014414 <forward_eltwise_integer_INT8+0x29c>
 80144f8:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80144fc:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80144fe:	f8de 1008 	ldr.w	r1, [lr, #8]
 8014502:	440c      	add	r4, r1
 8014504:	6899      	ldr	r1, [r3, #8]
 8014506:	440d      	add	r5, r1
 8014508:	6891      	ldr	r1, [r2, #8]
 801450a:	f10b 0b01 	add.w	fp, fp, #1
 801450e:	4559      	cmp	r1, fp
 8014510:	f63f af7e 	bhi.w	8014410 <forward_eltwise_integer_INT8+0x298>
 8014514:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014518:	4404      	add	r4, r0
 801451a:	68d8      	ldr	r0, [r3, #12]
 801451c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801451e:	4405      	add	r5, r0
 8014520:	68d0      	ldr	r0, [r2, #12]
 8014522:	3301      	adds	r3, #1
 8014524:	4298      	cmp	r0, r3
 8014526:	9309      	str	r3, [sp, #36]	@ 0x24
 8014528:	f63f af6b 	bhi.w	8014402 <forward_eltwise_integer_INT8+0x28a>
 801452c:	e726      	b.n	801437c <forward_eltwise_integer_INT8+0x204>
 801452e:	2301      	movs	r3, #1
 8014530:	e70f      	b.n	8014352 <forward_eltwise_integer_INT8+0x1da>
 8014532:	2300      	movs	r3, #0
 8014534:	685b      	ldr	r3, [r3, #4]
 8014536:	deff      	udf	#255	@ 0xff
 8014538:	befffffc 	.word	0xbefffffc

0801453c <forward_lite_dense_is8os8ws8>:
 801453c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014540:	b08f      	sub	sp, #60	@ 0x3c
 8014542:	ee21 0a00 	vmul.f32	s0, s2, s0
 8014546:	f99d 4060 	ldrsb.w	r4, [sp, #96]	@ 0x60
 801454a:	940a      	str	r4, [sp, #40]	@ 0x28
 801454c:	f10d 0932 	add.w	r9, sp, #50	@ 0x32
 8014550:	2400      	movs	r4, #0
 8014552:	ee80 0a20 	vdiv.f32	s0, s0, s1
 8014556:	4605      	mov	r5, r0
 8014558:	469b      	mov	fp, r3
 801455a:	4648      	mov	r0, r9
 801455c:	f99d 3064 	ldrsb.w	r3, [sp, #100]	@ 0x64
 8014560:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 8014564:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8014568:	f8bd 806c 	ldrh.w	r8, [sp, #108]	@ 0x6c
 801456c:	9209      	str	r2, [sp, #36]	@ 0x24
 801456e:	460e      	mov	r6, r1
 8014570:	f8ad 4032 	strh.w	r4, [sp, #50]	@ 0x32
 8014574:	940d      	str	r4, [sp, #52]	@ 0x34
 8014576:	930b      	str	r3, [sp, #44]	@ 0x2c
 8014578:	f000 fd3c 	bl	8014ff4 <align_factor>
 801457c:	900d      	str	r0, [sp, #52]	@ 0x34
 801457e:	f1ba 0f00 	cmp.w	sl, #0
 8014582:	d018      	beq.n	80145b6 <forward_lite_dense_is8os8ws8+0x7a>
 8014584:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8014586:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8014588:	9306      	str	r3, [sp, #24]
 801458a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801458c:	9303      	str	r3, [sp, #12]
 801458e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014590:	9505      	str	r5, [sp, #20]
 8014592:	e9cd 9301 	strd	r9, r3, [sp, #4]
 8014596:	ab0d      	add	r3, sp, #52	@ 0x34
 8014598:	9300      	str	r3, [sp, #0]
 801459a:	4630      	mov	r0, r6
 801459c:	f8cd b010 	str.w	fp, [sp, #16]
 80145a0:	3401      	adds	r4, #1
 80145a2:	4643      	mov	r3, r8
 80145a4:	463a      	mov	r2, r7
 80145a6:	9109      	str	r1, [sp, #36]	@ 0x24
 80145a8:	f001 f88e 	bl	80156c8 <st_sssa8_fully_connected>
 80145ac:	45a2      	cmp	sl, r4
 80145ae:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80145b0:	4445      	add	r5, r8
 80145b2:	443e      	add	r6, r7
 80145b4:	d1e7      	bne.n	8014586 <forward_lite_dense_is8os8ws8+0x4a>
 80145b6:	b00f      	add	sp, #60	@ 0x3c
 80145b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080145bc <forward_lite_maxpool_is8os8_scalepos>:
 80145bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80145c0:	b095      	sub	sp, #84	@ 0x54
 80145c2:	e9cd 010a 	strd	r0, r1, [sp, #40]	@ 0x28
 80145c6:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
 80145ca:	910d      	str	r1, [sp, #52]	@ 0x34
 80145cc:	f8bd 1080 	ldrh.w	r1, [sp, #128]	@ 0x80
 80145d0:	910e      	str	r1, [sp, #56]	@ 0x38
 80145d2:	f8bd 1084 	ldrh.w	r1, [sp, #132]	@ 0x84
 80145d6:	910f      	str	r1, [sp, #60]	@ 0x3c
 80145d8:	f8bd 1088 	ldrh.w	r1, [sp, #136]	@ 0x88
 80145dc:	9110      	str	r1, [sp, #64]	@ 0x40
 80145de:	f8bd 108c 	ldrh.w	r1, [sp, #140]	@ 0x8c
 80145e2:	f99d 009c 	ldrsb.w	r0, [sp, #156]	@ 0x9c
 80145e6:	930c      	str	r3, [sp, #48]	@ 0x30
 80145e8:	9111      	str	r1, [sp, #68]	@ 0x44
 80145ea:	f8bd 3098 	ldrh.w	r3, [sp, #152]	@ 0x98
 80145ee:	f8bd 1090 	ldrh.w	r1, [sp, #144]	@ 0x90
 80145f2:	9112      	str	r1, [sp, #72]	@ 0x48
 80145f4:	9001      	str	r0, [sp, #4]
 80145f6:	f8bd 1094 	ldrh.w	r1, [sp, #148]	@ 0x94
 80145fa:	f99d 00a0 	ldrsb.w	r0, [sp, #160]	@ 0xa0
 80145fe:	f8bd a078 	ldrh.w	sl, [sp, #120]	@ 0x78
 8014602:	9206      	str	r2, [sp, #24]
 8014604:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014606:	9107      	str	r1, [sp, #28]
 8014608:	9003      	str	r0, [sp, #12]
 801460a:	2b00      	cmp	r3, #0
 801460c:	f000 80ad 	beq.w	801476a <forward_lite_maxpool_is8os8_scalepos+0x1ae>
 8014610:	2900      	cmp	r1, #0
 8014612:	f000 80aa 	beq.w	801476a <forward_lite_maxpool_is8os8_scalepos+0x1ae>
 8014616:	f1ba 0f00 	cmp.w	sl, #0
 801461a:	f000 80a6 	beq.w	801476a <forward_lite_maxpool_is8os8_scalepos+0x1ae>
 801461e:	2300      	movs	r3, #0
 8014620:	ed9f 6a56 	vldr	s12, [pc, #344]	@ 801477c <forward_lite_maxpool_is8os8_scalepos+0x1c0>
 8014624:	9304      	str	r3, [sp, #16]
 8014626:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801462a:	fb02 fb0a 	mul.w	fp, r2, sl
 801462e:	9904      	ldr	r1, [sp, #16]
 8014630:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8014632:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8014634:	eddd 7a03 	vldr	s15, [sp, #12]
 8014638:	fb01 f303 	mul.w	r3, r1, r3
 801463c:	1a1a      	subs	r2, r3, r0
 801463e:	1ac3      	subs	r3, r0, r3
 8014640:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8014642:	2a00      	cmp	r2, #0
 8014644:	bfd8      	it	le
 8014646:	4699      	movle	r9, r3
 8014648:	4403      	add	r3, r0
 801464a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801464c:	bfc8      	it	gt
 801464e:	f04f 0900 	movgt.w	r9, #0
 8014652:	4298      	cmp	r0, r3
 8014654:	bfa8      	it	ge
 8014656:	4618      	movge	r0, r3
 8014658:	9b06      	ldr	r3, [sp, #24]
 801465a:	444a      	add	r2, r9
 801465c:	fb03 f302 	mul.w	r3, r3, r2
 8014660:	9309      	str	r3, [sp, #36]	@ 0x24
 8014662:	9b07      	ldr	r3, [sp, #28]
 8014664:	fb01 f303 	mul.w	r3, r1, r3
 8014668:	9308      	str	r3, [sp, #32]
 801466a:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 801466e:	2300      	movs	r3, #0
 8014670:	4684      	mov	ip, r0
 8014672:	9305      	str	r3, [sp, #20]
 8014674:	9905      	ldr	r1, [sp, #20]
 8014676:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8014678:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801467a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801467c:	fb03 f201 	mul.w	r2, r3, r1
 8014680:	1a13      	subs	r3, r2, r0
 8014682:	2b00      	cmp	r3, #0
 8014684:	eba0 0202 	sub.w	r2, r0, r2
 8014688:	bfd8      	it	le
 801468a:	4617      	movle	r7, r2
 801468c:	9806      	ldr	r0, [sp, #24]
 801468e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014690:	441a      	add	r2, r3
 8014692:	eba0 0303 	sub.w	r3, r0, r3
 8014696:	bfc8      	it	gt
 8014698:	2700      	movgt	r7, #0
 801469a:	429c      	cmp	r4, r3
 801469c:	bfa8      	it	ge
 801469e:	461c      	movge	r4, r3
 80146a0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80146a2:	443a      	add	r2, r7
 80146a4:	fb0a 3302 	mla	r3, sl, r2, r3
 80146a8:	9302      	str	r3, [sp, #8]
 80146aa:	9b08      	ldr	r3, [sp, #32]
 80146ac:	eb01 0803 	add.w	r8, r1, r3
 80146b0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80146b2:	eeb6 5a00 	vmov.f32	s10, #96	@ 0x3f000000  0.5
 80146b6:	fb0a 3808 	mla	r8, sl, r8, r3
 80146ba:	f04f 0e00 	mov.w	lr, #0
 80146be:	45e1      	cmp	r9, ip
 80146c0:	da59      	bge.n	8014776 <forward_lite_maxpool_is8os8_scalepos+0x1ba>
 80146c2:	9b02      	ldr	r3, [sp, #8]
 80146c4:	464d      	mov	r5, r9
 80146c6:	eb03 060e 	add.w	r6, r3, lr
 80146ca:	f06f 017f 	mvn.w	r1, #127	@ 0x7f
 80146ce:	42a7      	cmp	r7, r4
 80146d0:	da0a      	bge.n	80146e8 <forward_lite_maxpool_is8os8_scalepos+0x12c>
 80146d2:	4632      	mov	r2, r6
 80146d4:	463b      	mov	r3, r7
 80146d6:	f992 0000 	ldrsb.w	r0, [r2]
 80146da:	3301      	adds	r3, #1
 80146dc:	4281      	cmp	r1, r0
 80146de:	bfb8      	it	lt
 80146e0:	4601      	movlt	r1, r0
 80146e2:	429c      	cmp	r4, r3
 80146e4:	4452      	add	r2, sl
 80146e6:	d1f6      	bne.n	80146d6 <forward_lite_maxpool_is8os8_scalepos+0x11a>
 80146e8:	3501      	adds	r5, #1
 80146ea:	45ac      	cmp	ip, r5
 80146ec:	445e      	add	r6, fp
 80146ee:	d1ee      	bne.n	80146ce <forward_lite_maxpool_is8os8_scalepos+0x112>
 80146f0:	eeb4 0a66 	vcmp.f32	s0, s13
 80146f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80146f8:	d103      	bne.n	8014702 <forward_lite_maxpool_is8os8_scalepos+0x146>
 80146fa:	9b01      	ldr	r3, [sp, #4]
 80146fc:	9a03      	ldr	r2, [sp, #12]
 80146fe:	4293      	cmp	r3, r2
 8014700:	d036      	beq.n	8014770 <forward_lite_maxpool_is8os8_scalepos+0x1b4>
 8014702:	9b01      	ldr	r3, [sp, #4]
 8014704:	1ac9      	subs	r1, r1, r3
 8014706:	ee07 1a90 	vmov	s15, r1
 801470a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801470e:	eeb0 7a65 	vmov.f32	s14, s11
 8014712:	eea7 7a80 	vfma.f32	s14, s15, s0
 8014716:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801471a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801471e:	bfb4      	ite	lt
 8014720:	eef0 7a46 	vmovlt.f32	s15, s12
 8014724:	eef0 7a45 	vmovge.f32	s15, s10
 8014728:	ee77 7a87 	vadd.f32	s15, s15, s14
 801472c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014730:	ee17 3a90 	vmov	r3, s15
 8014734:	f303 0307 	ssat	r3, #8, r3
 8014738:	f888 3000 	strb.w	r3, [r8]
 801473c:	f10e 0e01 	add.w	lr, lr, #1
 8014740:	fa1f f38e 	uxth.w	r3, lr
 8014744:	459a      	cmp	sl, r3
 8014746:	f108 0801 	add.w	r8, r8, #1
 801474a:	d8b8      	bhi.n	80146be <forward_lite_maxpool_is8os8_scalepos+0x102>
 801474c:	9b05      	ldr	r3, [sp, #20]
 801474e:	9a07      	ldr	r2, [sp, #28]
 8014750:	3301      	adds	r3, #1
 8014752:	b29b      	uxth	r3, r3
 8014754:	429a      	cmp	r2, r3
 8014756:	9305      	str	r3, [sp, #20]
 8014758:	d88c      	bhi.n	8014674 <forward_lite_maxpool_is8os8_scalepos+0xb8>
 801475a:	9b04      	ldr	r3, [sp, #16]
 801475c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801475e:	3301      	adds	r3, #1
 8014760:	b29b      	uxth	r3, r3
 8014762:	429a      	cmp	r2, r3
 8014764:	9304      	str	r3, [sp, #16]
 8014766:	f63f af62 	bhi.w	801462e <forward_lite_maxpool_is8os8_scalepos+0x72>
 801476a:	b015      	add	sp, #84	@ 0x54
 801476c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014770:	f888 1000 	strb.w	r1, [r8]
 8014774:	e7e2      	b.n	801473c <forward_lite_maxpool_is8os8_scalepos+0x180>
 8014776:	f06f 017f 	mvn.w	r1, #127	@ 0x7f
 801477a:	e7b9      	b.n	80146f0 <forward_lite_maxpool_is8os8_scalepos+0x134>
 801477c:	befffffc 	.word	0xbefffffc

08014780 <forward_lite_avepool_is8os8>:
 8014780:	b410      	push	{r4}
 8014782:	f8bd 4004 	ldrh.w	r4, [sp, #4]
 8014786:	9401      	str	r4, [sp, #4]
 8014788:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 801478c:	9402      	str	r4, [sp, #8]
 801478e:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8014792:	9403      	str	r4, [sp, #12]
 8014794:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 8014798:	9404      	str	r4, [sp, #16]
 801479a:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801479e:	9405      	str	r4, [sp, #20]
 80147a0:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 80147a4:	9406      	str	r4, [sp, #24]
 80147a6:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80147aa:	9407      	str	r4, [sp, #28]
 80147ac:	f8bd 4020 	ldrh.w	r4, [sp, #32]
 80147b0:	9408      	str	r4, [sp, #32]
 80147b2:	f8bd 4024 	ldrh.w	r4, [sp, #36]	@ 0x24
 80147b6:	9409      	str	r4, [sp, #36]	@ 0x24
 80147b8:	f99d 4028 	ldrsb.w	r4, [sp, #40]	@ 0x28
 80147bc:	940a      	str	r4, [sp, #40]	@ 0x28
 80147be:	f99d 402c 	ldrsb.w	r4, [sp, #44]	@ 0x2c
 80147c2:	940b      	str	r4, [sp, #44]	@ 0x2c
 80147c4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80147c8:	f000 bdf4 	b.w	80153b4 <st_int8_avepool>

080147cc <forward_lite_conv2d_deep_3x3_sssa8_ch>:
 80147cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80147d0:	b097      	sub	sp, #92	@ 0x5c
 80147d2:	e9cd 130d 	strd	r1, r3, [sp, #52]	@ 0x34
 80147d6:	f8bd 10a4 	ldrh.w	r1, [sp, #164]	@ 0xa4
 80147da:	f8bd 30a0 	ldrh.w	r3, [sp, #160]	@ 0xa0
 80147de:	f8bd 9084 	ldrh.w	r9, [sp, #132]	@ 0x84
 80147e2:	9e27      	ldr	r6, [sp, #156]	@ 0x9c
 80147e4:	930f      	str	r3, [sp, #60]	@ 0x3c
 80147e6:	fb03 f301 	mul.w	r3, r3, r1
 80147ea:	9110      	str	r1, [sp, #64]	@ 0x40
 80147ec:	fb09 6303 	mla	r3, r9, r3, r6
 80147f0:	f99d 108c 	ldrsb.w	r1, [sp, #140]	@ 0x8c
 80147f4:	9113      	str	r1, [sp, #76]	@ 0x4c
 80147f6:	4298      	cmp	r0, r3
 80147f8:	f89d 1098 	ldrb.w	r1, [sp, #152]	@ 0x98
 80147fc:	f8dd b080 	ldr.w	fp, [sp, #128]	@ 0x80
 8014800:	f8dd a088 	ldr.w	sl, [sp, #136]	@ 0x88
 8014804:	f99d 7090 	ldrsb.w	r7, [sp, #144]	@ 0x90
 8014808:	9114      	str	r1, [sp, #80]	@ 0x50
 801480a:	4605      	mov	r5, r0
 801480c:	d207      	bcs.n	801481e <forward_lite_conv2d_deep_3x3_sssa8_ch+0x52>
 801480e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014810:	fb03 f202 	mul.w	r2, r3, r2
 8014814:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014816:	fb03 0202 	mla	r2, r3, r2, r0
 801481a:	4296      	cmp	r6, r2
 801481c:	d377      	bcc.n	801490e <forward_lite_conv2d_deep_3x3_sssa8_ch+0x142>
 801481e:	2301      	movs	r3, #1
 8014820:	9315      	str	r3, [sp, #84]	@ 0x54
 8014822:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8014824:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 8014826:	9825      	ldr	r0, [sp, #148]	@ 0x94
 8014828:	eba3 0449 	sub.w	r4, r3, r9, lsl #1
 801482c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801482e:	441c      	add	r4, r3
 8014830:	4623      	mov	r3, r4
 8014832:	4649      	mov	r1, r9
 8014834:	f000 fc32 	bl	801509c <align_factor_ch>
 8014838:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801483a:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 801483e:	9312      	str	r3, [sp, #72]	@ 0x48
 8014840:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8014842:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 8014846:	ea4f 0849 	mov.w	r8, r9, lsl #1
 801484a:	9211      	str	r2, [sp, #68]	@ 0x44
 801484c:	f1b9 0f00 	cmp.w	r9, #0
 8014850:	d062      	beq.n	8014918 <forward_lite_conv2d_deep_3x3_sssa8_ch+0x14c>
 8014852:	4623      	mov	r3, r4
 8014854:	1d10      	adds	r0, r2, #4
 8014856:	eb04 0e08 	add.w	lr, r4, r8
 801485a:	f04f 0c01 	mov.w	ip, #1
 801485e:	f933 2b02 	ldrsh.w	r2, [r3], #2
 8014862:	1e51      	subs	r1, r2, #1
 8014864:	b289      	uxth	r1, r1
 8014866:	fa0c f402 	lsl.w	r4, ip, r2
 801486a:	2914      	cmp	r1, #20
 801486c:	fa07 f202 	lsl.w	r2, r7, r2
 8014870:	eb02 0254 	add.w	r2, r2, r4, lsr #1
 8014874:	d844      	bhi.n	8014900 <forward_lite_conv2d_deep_3x3_sssa8_ch+0x134>
 8014876:	459e      	cmp	lr, r3
 8014878:	f840 2c04 	str.w	r2, [r0, #-4]
 801487c:	f100 0004 	add.w	r0, r0, #4
 8014880:	d1ed      	bne.n	801485e <forward_lite_conv2d_deep_3x3_sssa8_ch+0x92>
 8014882:	e9dd 232b 	ldrd	r2, r3, [sp, #172]	@ 0xac
 8014886:	189c      	adds	r4, r3, r2
 8014888:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	@ 0x34
 801488c:	eba4 0408 	sub.w	r4, r4, r8
 8014890:	fb13 f802 	smulbb	r8, r3, r2
 8014894:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8014896:	fa1f f888 	uxth.w	r8, r8
 801489a:	2b00      	cmp	r3, #0
 801489c:	d02d      	beq.n	80148fa <forward_lite_conv2d_deep_3x3_sssa8_ch+0x12e>
 801489e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80148a0:	fb09 f002 	mul.w	r0, r9, r2
 80148a4:	4659      	mov	r1, fp
 80148a6:	4652      	mov	r2, sl
 80148a8:	46cb      	mov	fp, r9
 80148aa:	46a2      	mov	sl, r4
 80148ac:	2700      	movs	r7, #0
 80148ae:	4644      	mov	r4, r8
 80148b0:	4699      	mov	r9, r3
 80148b2:	4680      	mov	r8, r0
 80148b4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80148b6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80148b8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80148ba:	930a      	str	r3, [sp, #40]	@ 0x28
 80148bc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80148be:	9309      	str	r3, [sp, #36]	@ 0x24
 80148c0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80148c2:	9308      	str	r3, [sp, #32]
 80148c4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80148c6:	f8cd a004 	str.w	sl, [sp, #4]
 80148ca:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80148ce:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80148d0:	9305      	str	r3, [sp, #20]
 80148d2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80148d4:	9304      	str	r3, [sp, #16]
 80148d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80148d8:	9222      	str	r2, [sp, #136]	@ 0x88
 80148da:	e9cd b302 	strd	fp, r3, [sp, #8]
 80148de:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80148e0:	9300      	str	r3, [sp, #0]
 80148e2:	4628      	mov	r0, r5
 80148e4:	4633      	mov	r3, r6
 80148e6:	3701      	adds	r7, #1
 80148e8:	9120      	str	r1, [sp, #128]	@ 0x80
 80148ea:	f00b fb89 	bl	8020000 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3>
 80148ee:	45b9      	cmp	r9, r7
 80148f0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80148f2:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80148f4:	4446      	add	r6, r8
 80148f6:	4425      	add	r5, r4
 80148f8:	d1dc      	bne.n	80148b4 <forward_lite_conv2d_deep_3x3_sssa8_ch+0xe8>
 80148fa:	b017      	add	sp, #92	@ 0x5c
 80148fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014900:	459e      	cmp	lr, r3
 8014902:	f840 7c04 	str.w	r7, [r0, #-4]
 8014906:	f100 0004 	add.w	r0, r0, #4
 801490a:	d1a8      	bne.n	801485e <forward_lite_conv2d_deep_3x3_sssa8_ch+0x92>
 801490c:	e7b9      	b.n	8014882 <forward_lite_conv2d_deep_3x3_sssa8_ch+0xb6>
 801490e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014910:	9315      	str	r3, [sp, #84]	@ 0x54
 8014912:	2301      	movs	r3, #1
 8014914:	9310      	str	r3, [sp, #64]	@ 0x40
 8014916:	e784      	b.n	8014822 <forward_lite_conv2d_deep_3x3_sssa8_ch+0x56>
 8014918:	9311      	str	r3, [sp, #68]	@ 0x44
 801491a:	e7b5      	b.n	8014888 <forward_lite_conv2d_deep_3x3_sssa8_ch+0xbc>

0801491c <forward_lite_conv2d_rgb_sssa8_ch>:
 801491c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014920:	ed2d 8b02 	vpush	{d8}
 8014924:	b0d3      	sub	sp, #332	@ 0x14c
 8014926:	460f      	mov	r7, r1
 8014928:	f8dd 81a0 	ldr.w	r8, [sp, #416]	@ 0x1a0
 801492c:	9e69      	ldr	r6, [sp, #420]	@ 0x1a4
 801492e:	f8bd 4178 	ldrh.w	r4, [sp, #376]	@ 0x178
 8014932:	9420      	str	r4, [sp, #128]	@ 0x80
 8014934:	4619      	mov	r1, r3
 8014936:	eba8 0343 	sub.w	r3, r8, r3, lsl #1
 801493a:	18f4      	adds	r4, r6, r3
 801493c:	4693      	mov	fp, r2
 801493e:	ee08 2a90 	vmov	s17, r2
 8014942:	4632      	mov	r2, r6
 8014944:	f8bd 617c 	ldrh.w	r6, [sp, #380]	@ 0x17c
 8014948:	9624      	str	r6, [sp, #144]	@ 0x90
 801494a:	f8bd 6180 	ldrh.w	r6, [sp, #384]	@ 0x180
 801494e:	960e      	str	r6, [sp, #56]	@ 0x38
 8014950:	f99d 618c 	ldrsb.w	r6, [sp, #396]	@ 0x18c
 8014954:	f99d 3188 	ldrsb.w	r3, [sp, #392]	@ 0x188
 8014958:	960b      	str	r6, [sp, #44]	@ 0x2c
 801495a:	f89d 6194 	ldrb.w	r6, [sp, #404]	@ 0x194
 801495e:	900a      	str	r0, [sp, #40]	@ 0x28
 8014960:	9317      	str	r3, [sp, #92]	@ 0x5c
 8014962:	9864      	ldr	r0, [sp, #400]	@ 0x190
 8014964:	9625      	str	r6, [sp, #148]	@ 0x94
 8014966:	4623      	mov	r3, r4
 8014968:	f8bd 619c 	ldrh.w	r6, [sp, #412]	@ 0x19c
 801496c:	9113      	str	r1, [sp, #76]	@ 0x4c
 801496e:	468a      	mov	sl, r1
 8014970:	004d      	lsls	r5, r1, #1
 8014972:	960c      	str	r6, [sp, #48]	@ 0x30
 8014974:	f8dd 9198 	ldr.w	r9, [sp, #408]	@ 0x198
 8014978:	f000 fb90 	bl	801509c <align_factor_ch>
 801497c:	9e61      	ldr	r6, [sp, #388]	@ 0x184
 801497e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8014980:	9601      	str	r6, [sp, #4]
 8014982:	4652      	mov	r2, sl
 8014984:	9e69      	ldr	r6, [sp, #420]	@ 0x1a4
 8014986:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8014988:	9302      	str	r3, [sp, #8]
 801498a:	18ab      	adds	r3, r5, r2
 801498c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8014990:	9603      	str	r6, [sp, #12]
 8014992:	9000      	str	r0, [sp, #0]
 8014994:	9311      	str	r3, [sp, #68]	@ 0x44
 8014996:	4682      	mov	sl, r0
 8014998:	4603      	mov	r3, r0
 801499a:	4659      	mov	r1, fp
 801499c:	2003      	movs	r0, #3
 801499e:	4616      	mov	r6, r2
 80149a0:	f000 fe04 	bl	80155ac <st_sssa8_ch_convolve_rank1upd>
 80149a4:	fb1a f30a 	smulbb	r3, sl, sl
 80149a8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80149ac:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80149ae:	b298      	uxth	r0, r3
 80149b0:	ebc6 7346 	rsb	r3, r6, r6, lsl #29
 80149b4:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 80149b8:	932c      	str	r3, [sp, #176]	@ 0xb0
 80149ba:	eb03 0386 	add.w	r3, r3, r6, lsl #2
 80149be:	9012      	str	r0, [sp, #72]	@ 0x48
 80149c0:	932d      	str	r3, [sp, #180]	@ 0xb4
 80149c2:	b1de      	cbz	r6, 80149fc <forward_lite_conv2d_rgb_sssa8_ch+0xe0>
 80149c4:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 80149c6:	4621      	mov	r1, r4
 80149c8:	1d1a      	adds	r2, r3, #4
 80149ca:	442c      	add	r4, r5
 80149cc:	f04f 0c01 	mov.w	ip, #1
 80149d0:	f931 3b02 	ldrsh.w	r3, [r1], #2
 80149d4:	1e58      	subs	r0, r3, #1
 80149d6:	b280      	uxth	r0, r0
 80149d8:	fa0c fe03 	lsl.w	lr, ip, r3
 80149dc:	2814      	cmp	r0, #20
 80149de:	fa06 f303 	lsl.w	r3, r6, r3
 80149e2:	eb03 035e 	add.w	r3, r3, lr, lsr #1
 80149e6:	f200 810a 	bhi.w	8014bfe <forward_lite_conv2d_rgb_sssa8_ch+0x2e2>
 80149ea:	42a1      	cmp	r1, r4
 80149ec:	f842 3c04 	str.w	r3, [r2, #-4]
 80149f0:	f102 0204 	add.w	r2, r2, #4
 80149f4:	d1ec      	bne.n	80149d0 <forward_lite_conv2d_rgb_sssa8_ch+0xb4>
 80149f6:	9b69      	ldr	r3, [sp, #420]	@ 0x1a4
 80149f8:	eb03 0408 	add.w	r4, r3, r8
 80149fc:	1b63      	subs	r3, r4, r5
 80149fe:	932e      	str	r3, [sp, #184]	@ 0xb8
 8014a00:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8014a02:	9c20      	ldr	r4, [sp, #128]	@ 0x80
 8014a04:	f013 0f01 	tst.w	r3, #1
 8014a08:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8014a0a:	bf18      	it	ne
 8014a0c:	3302      	addne	r3, #2
 8014a0e:	fb03 f303 	mul.w	r3, r3, r3
 8014a12:	931b      	str	r3, [sp, #108]	@ 0x6c
 8014a14:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8014a16:	e9cd 3337 	strd	r3, r3, [sp, #220]	@ 0xdc
 8014a1a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8014a1c:	e9cd 334c 	strd	r3, r3, [sp, #304]	@ 0x130
 8014a20:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014a22:	e9cd 334a 	strd	r3, r3, [sp, #296]	@ 0x128
 8014a26:	ab3a      	add	r3, sp, #232	@ 0xe8
 8014a28:	9300      	str	r3, [sp, #0]
 8014a2a:	aa32      	add	r2, sp, #200	@ 0xc8
 8014a2c:	ab36      	add	r3, sp, #216	@ 0xd8
 8014a2e:	a948      	add	r1, sp, #288	@ 0x120
 8014a30:	a83e      	add	r0, sp, #248	@ 0xf8
 8014a32:	e9cd 443b 	strd	r4, r4, [sp, #236]	@ 0xec
 8014a36:	e9cd 7733 	strd	r7, r7, [sp, #204]	@ 0xcc
 8014a3a:	f000 fc49 	bl	80152d0 <ai_padding_opt_init>
 8014a3e:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8014a40:	fb04 f304 	mul.w	r3, r4, r4
 8014a44:	fb01 f203 	mul.w	r2, r1, r3
 8014a48:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014a4c:	f5b2 6f20 	cmp.w	r2, #2560	@ 0xa00
 8014a50:	bfa8      	it	ge
 8014a52:	f44f 6220 	movge.w	r2, #2560	@ 0xa00
 8014a56:	4614      	mov	r4, r2
 8014a58:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014a5a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8014a5e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8014a62:	930b      	str	r3, [sp, #44]	@ 0x2c
 8014a64:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8014a66:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8014a68:	fb01 f303 	mul.w	r3, r1, r3
 8014a6c:	f3c2 0240 	ubfx	r2, r2, #1, #1
 8014a70:	42a3      	cmp	r3, r4
 8014a72:	921c      	str	r2, [sp, #112]	@ 0x70
 8014a74:	f340 81c0 	ble.w	8014df8 <forward_lite_conv2d_rgb_sssa8_ch+0x4dc>
 8014a78:	2300      	movs	r3, #0
 8014a7a:	9328      	str	r3, [sp, #160]	@ 0xa0
 8014a7c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8014a7e:	fbb4 f3f3 	udiv	r3, r4, r3
 8014a82:	b29b      	uxth	r3, r3
 8014a84:	4619      	mov	r1, r3
 8014a86:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8014a88:	4299      	cmp	r1, r3
 8014a8a:	bf28      	it	cs
 8014a8c:	4619      	movcs	r1, r3
 8014a8e:	fbb3 f2f1 	udiv	r2, r3, r1
 8014a92:	fb01 3312 	mls	r3, r1, r2, r3
 8014a96:	b29b      	uxth	r3, r3
 8014a98:	b292      	uxth	r2, r2
 8014a9a:	9129      	str	r1, [sp, #164]	@ 0xa4
 8014a9c:	9221      	str	r2, [sp, #132]	@ 0x84
 8014a9e:	b11b      	cbz	r3, 8014aa8 <forward_lite_conv2d_rgb_sssa8_ch+0x18c>
 8014aa0:	4613      	mov	r3, r2
 8014aa2:	3301      	adds	r3, #1
 8014aa4:	b29b      	uxth	r3, r3
 8014aa6:	9321      	str	r3, [sp, #132]	@ 0x84
 8014aa8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8014aaa:	2a00      	cmp	r2, #0
 8014aac:	f000 8192 	beq.w	8014dd4 <forward_lite_conv2d_rgb_sssa8_ch+0x4b8>
 8014ab0:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8014ab2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8014ab4:	1ac1      	subs	r1, r0, r3
 8014ab6:	fb07 f303 	mul.w	r3, r7, r3
 8014aba:	425b      	negs	r3, r3
 8014abc:	9310      	str	r3, [sp, #64]	@ 0x40
 8014abe:	1cd3      	adds	r3, r2, #3
 8014ac0:	444b      	add	r3, r9
 8014ac2:	e9cd 3922 	strd	r3, r9, [sp, #136]	@ 0x88
 8014ac6:	eb00 0340 	add.w	r3, r0, r0, lsl #1
 8014aca:	005b      	lsls	r3, r3, #1
 8014acc:	930d      	str	r3, [sp, #52]	@ 0x34
 8014ace:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014ad0:	912b      	str	r1, [sp, #172]	@ 0xac
 8014ad2:	fb07 f303 	mul.w	r3, r7, r3
 8014ad6:	932f      	str	r3, [sp, #188]	@ 0xbc
 8014ad8:	1c93      	adds	r3, r2, #2
 8014ada:	9330      	str	r3, [sp, #192]	@ 0xc0
 8014adc:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8014ade:	fb02 f303 	mul.w	r3, r2, r3
 8014ae2:	9331      	str	r3, [sp, #196]	@ 0xc4
 8014ae4:	2301      	movs	r3, #1
 8014ae6:	4688      	mov	r8, r1
 8014ae8:	931f      	str	r3, [sp, #124]	@ 0x7c
 8014aea:	a83e      	add	r0, sp, #248	@ 0xf8
 8014aec:	f000 fc48 	bl	8015380 <ai_padding_opt_phase1>
 8014af0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8014af2:	2b03      	cmp	r3, #3
 8014af4:	f000 817b 	beq.w	8014dee <forward_lite_conv2d_rgb_sssa8_ch+0x4d2>
 8014af8:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8014afa:	9316      	str	r3, [sp, #88]	@ 0x58
 8014afc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8014afe:	9327      	str	r3, [sp, #156]	@ 0x9c
 8014b00:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8014b02:	2b00      	cmp	r3, #0
 8014b04:	f000 816b 	beq.w	8014dde <forward_lite_conv2d_rgb_sssa8_ch+0x4c2>
 8014b08:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8014b0a:	2b00      	cmp	r3, #0
 8014b0c:	f000 814c 	beq.w	8014da8 <forward_lite_conv2d_rgb_sssa8_ch+0x48c>
 8014b10:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8014b12:	edcd 8a26 	vstr	s17, [sp, #152]	@ 0x98
 8014b16:	eba8 0303 	sub.w	r3, r8, r3
 8014b1a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8014b1c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8014b1e:	931e      	str	r3, [sp, #120]	@ 0x78
 8014b20:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8014b22:	931d      	str	r3, [sp, #116]	@ 0x74
 8014b24:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8014b26:	9315      	str	r3, [sp, #84]	@ 0x54
 8014b28:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8014b2a:	9318      	str	r3, [sp, #96]	@ 0x60
 8014b2c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8014b2e:	ee08 3a10 	vmov	s16, r3
 8014b32:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8014b34:	9319      	str	r3, [sp, #100]	@ 0x64
 8014b36:	9b69      	ldr	r3, [sp, #420]	@ 0x1a4
 8014b38:	931a      	str	r3, [sp, #104]	@ 0x68
 8014b3a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8014b3c:	425b      	negs	r3, r3
 8014b3e:	932a      	str	r3, [sp, #168]	@ 0xa8
 8014b40:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 8014b42:	9b41      	ldr	r3, [sp, #260]	@ 0x104
 8014b44:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8014b46:	923f      	str	r2, [sp, #252]	@ 0xfc
 8014b48:	9a43      	ldr	r2, [sp, #268]	@ 0x10c
 8014b4a:	9240      	str	r2, [sp, #256]	@ 0x100
 8014b4c:	e9dd 542a 	ldrd	r5, r4, [sp, #168]	@ 0xa8
 8014b50:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014b52:	933e      	str	r3, [sp, #248]	@ 0xf8
 8014b54:	9114      	str	r1, [sp, #80]	@ 0x50
 8014b56:	2600      	movs	r6, #0
 8014b58:	2b00      	cmp	r3, #0
 8014b5a:	d047      	beq.n	8014bec <forward_lite_conv2d_rgb_sssa8_ch+0x2d0>
 8014b5c:	3b01      	subs	r3, #1
 8014b5e:	933e      	str	r3, [sp, #248]	@ 0xf8
 8014b60:	2301      	movs	r3, #1
 8014b62:	f8ad 311e 	strh.w	r3, [sp, #286]	@ 0x11e
 8014b66:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8014b68:	4598      	cmp	r8, r3
 8014b6a:	dd31      	ble.n	8014bd0 <forward_lite_conv2d_rgb_sssa8_ch+0x2b4>
 8014b6c:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
 8014b70:	469e      	mov	lr, r3
 8014b72:	42a5      	cmp	r5, r4
 8014b74:	da28      	bge.n	8014bc8 <forward_lite_conv2d_rgb_sssa8_ch+0x2ac>
 8014b76:	4577      	cmp	r7, lr
 8014b78:	fb0e fc07 	mul.w	ip, lr, r7
 8014b7c:	d95a      	bls.n	8014c34 <forward_lite_conv2d_rgb_sssa8_ch+0x318>
 8014b7e:	44ac      	add	ip, r5
 8014b80:	1d93      	adds	r3, r2, #6
 8014b82:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8014b84:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8014b88:	4494      	add	ip, r2
 8014b8a:	4628      	mov	r0, r5
 8014b8c:	f04f 0900 	mov.w	r9, #0
 8014b90:	f361 090f 	bfi	r9, r1, #0, #16
 8014b94:	42b8      	cmp	r0, r7
 8014b96:	f361 491f 	bfi	r9, r1, #16, #16
 8014b9a:	f1a3 0a06 	sub.w	sl, r3, #6
 8014b9e:	461a      	mov	r2, r3
 8014ba0:	d238      	bcs.n	8014c14 <forward_lite_conv2d_rgb_sssa8_ch+0x2f8>
 8014ba2:	f85c 2b03 	ldr.w	r2, [ip], #3
 8014ba6:	fa2f f982 	sxtb16	r9, r2
 8014baa:	ea4f 2b32 	mov.w	fp, r2, ror #8
 8014bae:	3001      	adds	r0, #1
 8014bb0:	461a      	mov	r2, r3
 8014bb2:	3306      	adds	r3, #6
 8014bb4:	42a0      	cmp	r0, r4
 8014bb6:	fa2f fb8b 	sxtb16	fp, fp
 8014bba:	eacb 0b09 	pkhbt	fp, fp, r9
 8014bbe:	f8ca b002 	str.w	fp, [sl, #2]
 8014bc2:	f823 9c0c 	strh.w	r9, [r3, #-12]
 8014bc6:	d1e1      	bne.n	8014b8c <forward_lite_conv2d_rgb_sssa8_ch+0x270>
 8014bc8:	f10e 0e01 	add.w	lr, lr, #1
 8014bcc:	45c6      	cmp	lr, r8
 8014bce:	dbd0      	blt.n	8014b72 <forward_lite_conv2d_rgb_sssa8_ch+0x256>
 8014bd0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8014bd2:	4293      	cmp	r3, r2
 8014bd4:	d07c      	beq.n	8014cd0 <forward_lite_conv2d_rgb_sssa8_ch+0x3b4>
 8014bd6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014bd8:	441c      	add	r4, r3
 8014bda:	441d      	add	r5, r3
 8014bdc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8014bde:	3601      	adds	r6, #1
 8014be0:	429e      	cmp	r6, r3
 8014be2:	f000 8099 	beq.w	8014d18 <forward_lite_conv2d_rgb_sssa8_ch+0x3fc>
 8014be6:	9b3e      	ldr	r3, [sp, #248]	@ 0xf8
 8014be8:	2b00      	cmp	r3, #0
 8014bea:	d1b7      	bne.n	8014b5c <forward_lite_conv2d_rgb_sssa8_ch+0x240>
 8014bec:	9b3f      	ldr	r3, [sp, #252]	@ 0xfc
 8014bee:	bbb3      	cbnz	r3, 8014c5e <forward_lite_conv2d_rgb_sssa8_ch+0x342>
 8014bf0:	9b40      	ldr	r3, [sp, #256]	@ 0x100
 8014bf2:	3b01      	subs	r3, #1
 8014bf4:	9340      	str	r3, [sp, #256]	@ 0x100
 8014bf6:	2301      	movs	r3, #1
 8014bf8:	f8ad 311e 	strh.w	r3, [sp, #286]	@ 0x11e
 8014bfc:	e7b3      	b.n	8014b66 <forward_lite_conv2d_rgb_sssa8_ch+0x24a>
 8014bfe:	42a1      	cmp	r1, r4
 8014c00:	f842 6c04 	str.w	r6, [r2, #-4]
 8014c04:	f102 0204 	add.w	r2, r2, #4
 8014c08:	f47f aee2 	bne.w	80149d0 <forward_lite_conv2d_rgb_sssa8_ch+0xb4>
 8014c0c:	9b69      	ldr	r3, [sp, #420]	@ 0x1a4
 8014c0e:	eb03 0408 	add.w	r4, r3, r8
 8014c12:	e6f3      	b.n	80149fc <forward_lite_conv2d_rgb_sssa8_ch+0xe0>
 8014c14:	3001      	adds	r0, #1
 8014c16:	42a0      	cmp	r0, r4
 8014c18:	f843 9c04 	str.w	r9, [r3, #-4]
 8014c1c:	f823 1c06 	strh.w	r1, [r3, #-6]
 8014c20:	f10c 0c03 	add.w	ip, ip, #3
 8014c24:	f103 0306 	add.w	r3, r3, #6
 8014c28:	d1b0      	bne.n	8014b8c <forward_lite_conv2d_rgb_sssa8_ch+0x270>
 8014c2a:	f10e 0e01 	add.w	lr, lr, #1
 8014c2e:	45c6      	cmp	lr, r8
 8014c30:	db9f      	blt.n	8014b72 <forward_lite_conv2d_rgb_sssa8_ch+0x256>
 8014c32:	e7cd      	b.n	8014bd0 <forward_lite_conv2d_rgb_sssa8_ch+0x2b4>
 8014c34:	4694      	mov	ip, r2
 8014c36:	4628      	mov	r0, r5
 8014c38:	2300      	movs	r3, #0
 8014c3a:	3001      	adds	r0, #1
 8014c3c:	f361 030f 	bfi	r3, r1, #0, #16
 8014c40:	f361 431f 	bfi	r3, r1, #16, #16
 8014c44:	42a0      	cmp	r0, r4
 8014c46:	f8ac 1004 	strh.w	r1, [ip, #4]
 8014c4a:	f84c 3b06 	str.w	r3, [ip], #6
 8014c4e:	d1f3      	bne.n	8014c38 <forward_lite_conv2d_rgb_sssa8_ch+0x31c>
 8014c50:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014c52:	f10e 0e01 	add.w	lr, lr, #1
 8014c56:	45c6      	cmp	lr, r8
 8014c58:	441a      	add	r2, r3
 8014c5a:	db8a      	blt.n	8014b72 <forward_lite_conv2d_rgb_sssa8_ch+0x256>
 8014c5c:	e7b8      	b.n	8014bd0 <forward_lite_conv2d_rgb_sssa8_ch+0x2b4>
 8014c5e:	3b01      	subs	r3, #1
 8014c60:	933f      	str	r3, [sp, #252]	@ 0xfc
 8014c62:	f8bd 311c 	ldrh.w	r3, [sp, #284]	@ 0x11c
 8014c66:	f8ad 311e 	strh.w	r3, [sp, #286]	@ 0x11e
 8014c6a:	2b01      	cmp	r3, #1
 8014c6c:	f43f af7b 	beq.w	8014b66 <forward_lite_conv2d_rgb_sssa8_ch+0x24a>
 8014c70:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8014c72:	4598      	cmp	r8, r3
 8014c74:	ddac      	ble.n	8014bd0 <forward_lite_conv2d_rgb_sssa8_ch+0x2b4>
 8014c76:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8014c78:	f8dd e040 	ldr.w	lr, [sp, #64]	@ 0x40
 8014c7c:	eba4 0a05 	sub.w	sl, r4, r5
 8014c80:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8014c84:	eb05 0b45 	add.w	fp, r5, r5, lsl #1
 8014c88:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 8014c8c:	448b      	add	fp, r1
 8014c8e:	4699      	mov	r9, r3
 8014c90:	42a5      	cmp	r5, r4
 8014c92:	da15      	bge.n	8014cc0 <forward_lite_conv2d_rgb_sssa8_ch+0x3a4>
 8014c94:	eb0e 004e 	add.w	r0, lr, lr, lsl #1
 8014c98:	4458      	add	r0, fp
 8014c9a:	eb02 0c0a 	add.w	ip, r2, sl
 8014c9e:	f850 3b03 	ldr.w	r3, [r0], #3
 8014ca2:	fa2f f183 	sxtb16	r1, r3
 8014ca6:	3206      	adds	r2, #6
 8014ca8:	4594      	cmp	ip, r2
 8014caa:	ea4f 2333 	mov.w	r3, r3, ror #8
 8014cae:	f822 1c06 	strh.w	r1, [r2, #-6]
 8014cb2:	fa2f f383 	sxtb16	r3, r3
 8014cb6:	eac3 0301 	pkhbt	r3, r3, r1
 8014cba:	f842 3c04 	str.w	r3, [r2, #-4]
 8014cbe:	d1ee      	bne.n	8014c9e <forward_lite_conv2d_rgb_sssa8_ch+0x382>
 8014cc0:	f109 0901 	add.w	r9, r9, #1
 8014cc4:	45c1      	cmp	r9, r8
 8014cc6:	44be      	add	lr, r7
 8014cc8:	d1e2      	bne.n	8014c90 <forward_lite_conv2d_rgb_sssa8_ch+0x374>
 8014cca:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8014ccc:	4293      	cmp	r3, r2
 8014cce:	d182      	bne.n	8014bd6 <forward_lite_conv2d_rgb_sssa8_ch+0x2ba>
 8014cd0:	4618      	mov	r0, r3
 8014cd2:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8014cd4:	9308      	str	r3, [sp, #32]
 8014cd6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8014cd8:	9307      	str	r3, [sp, #28]
 8014cda:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8014cdc:	9306      	str	r3, [sp, #24]
 8014cde:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8014ce0:	9305      	str	r3, [sp, #20]
 8014ce2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8014ce4:	9304      	str	r3, [sp, #16]
 8014ce6:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8014ce8:	9303      	str	r3, [sp, #12]
 8014cea:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8014cec:	9300      	str	r3, [sp, #0]
 8014cee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014cf0:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8014cf2:	441c      	add	r4, r3
 8014cf4:	441d      	add	r5, r3
 8014cf6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8014cfa:	9302      	str	r3, [sp, #8]
 8014cfc:	2300      	movs	r3, #0
 8014cfe:	9301      	str	r3, [sp, #4]
 8014d00:	ee18 2a10 	vmov	r2, s16
 8014d04:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8014d06:	f00b ff13 	bl	8020b30 <st_sssa8_ch_nn_mat_mult_kernel_opt>
 8014d0a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8014d0c:	9014      	str	r0, [sp, #80]	@ 0x50
 8014d0e:	3601      	adds	r6, #1
 8014d10:	42b3      	cmp	r3, r6
 8014d12:	d01b      	beq.n	8014d4c <forward_lite_conv2d_rgb_sssa8_ch+0x430>
 8014d14:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014d16:	e766      	b.n	8014be6 <forward_lite_conv2d_rgb_sssa8_ch+0x2ca>
 8014d18:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8014d1a:	4291      	cmp	r1, r2
 8014d1c:	d016      	beq.n	8014d4c <forward_lite_conv2d_rgb_sssa8_ch+0x430>
 8014d1e:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8014d20:	9307      	str	r3, [sp, #28]
 8014d22:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8014d24:	9306      	str	r3, [sp, #24]
 8014d26:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8014d28:	9305      	str	r3, [sp, #20]
 8014d2a:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8014d2c:	9304      	str	r3, [sp, #16]
 8014d2e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8014d30:	9303      	str	r3, [sp, #12]
 8014d32:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8014d34:	9302      	str	r3, [sp, #8]
 8014d36:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8014d38:	9300      	str	r3, [sp, #0]
 8014d3a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8014d3e:	9301      	str	r3, [sp, #4]
 8014d40:	ee18 2a10 	vmov	r2, s16
 8014d44:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8014d46:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8014d48:	f000 feb0 	bl	8015aac <st_sssa8_ch_nn_mat_mult_kernel_single_opt>
 8014d4c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8014d4e:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8014d50:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8014d52:	1ad2      	subs	r2, r2, r3
 8014d54:	429a      	cmp	r2, r3
 8014d56:	921d      	str	r2, [sp, #116]	@ 0x74
 8014d58:	bfa8      	it	ge
 8014d5a:	461a      	movge	r2, r3
 8014d5c:	4419      	add	r1, r3
 8014d5e:	2a00      	cmp	r2, #0
 8014d60:	9116      	str	r1, [sp, #88]	@ 0x58
 8014d62:	4614      	mov	r4, r2
 8014d64:	dd1a      	ble.n	8014d9c <forward_lite_conv2d_rgb_sssa8_ch+0x480>
 8014d66:	9926      	ldr	r1, [sp, #152]	@ 0x98
 8014d68:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014d6a:	fb03 1002 	mla	r0, r3, r2, r1
 8014d6e:	ee18 1a10 	vmov	r1, s16
 8014d72:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8014d76:	ee08 1a10 	vmov	s16, r1
 8014d7a:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8014d7c:	9026      	str	r0, [sp, #152]	@ 0x98
 8014d7e:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 8014d82:	9119      	str	r1, [sp, #100]	@ 0x64
 8014d84:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8014d86:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8014d8a:	911a      	str	r1, [sp, #104]	@ 0x68
 8014d8c:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8014d8e:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8014d92:	9318      	str	r3, [sp, #96]	@ 0x60
 8014d94:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8014d96:	b2a3      	uxth	r3, r4
 8014d98:	f000 f9b0 	bl	80150fc <st_int8_to16_dual>
 8014d9c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8014d9e:	3b01      	subs	r3, #1
 8014da0:	931e      	str	r3, [sp, #120]	@ 0x78
 8014da2:	d001      	beq.n	8014da8 <forward_lite_conv2d_rgb_sssa8_ch+0x48c>
 8014da4:	9415      	str	r4, [sp, #84]	@ 0x54
 8014da6:	e6cb      	b.n	8014b40 <forward_lite_conv2d_rgb_sssa8_ch+0x224>
 8014da8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014daa:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 8014dac:	4498      	add	r8, r3
 8014dae:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014db0:	4413      	add	r3, r2
 8014db2:	9310      	str	r3, [sp, #64]	@ 0x40
 8014db4:	9a30      	ldr	r2, [sp, #192]	@ 0xc0
 8014db6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8014db8:	4413      	add	r3, r2
 8014dba:	9322      	str	r3, [sp, #136]	@ 0x88
 8014dbc:	9a31      	ldr	r2, [sp, #196]	@ 0xc4
 8014dbe:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8014dc0:	4413      	add	r3, r2
 8014dc2:	9323      	str	r3, [sp, #140]	@ 0x8c
 8014dc4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8014dc6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8014dc8:	3301      	adds	r3, #1
 8014dca:	931f      	str	r3, [sp, #124]	@ 0x7c
 8014dcc:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8014dce:	4293      	cmp	r3, r2
 8014dd0:	f6ff ae8b 	blt.w	8014aea <forward_lite_conv2d_rgb_sssa8_ch+0x1ce>
 8014dd4:	b053      	add	sp, #332	@ 0x14c
 8014dd6:	ecbd 8b02 	vpop	{d8}
 8014dda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014dde:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8014de0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014de2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8014de4:	ee18 0a90 	vmov	r0, s17
 8014de8:	f000 f988 	bl	80150fc <st_int8_to16_dual>
 8014dec:	e68c      	b.n	8014b08 <forward_lite_conv2d_rgb_sssa8_ch+0x1ec>
 8014dee:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8014df0:	9327      	str	r3, [sp, #156]	@ 0x9c
 8014df2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8014df4:	9316      	str	r3, [sp, #88]	@ 0x58
 8014df6:	e683      	b.n	8014b00 <forward_lite_conv2d_rgb_sssa8_ch+0x1e4>
 8014df8:	460b      	mov	r3, r1
 8014dfa:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014dfc:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8014dfe:	ee18 0a90 	vmov	r0, s17
 8014e02:	f000 f97b 	bl	80150fc <st_int8_to16_dual>
 8014e06:	2301      	movs	r3, #1
 8014e08:	9328      	str	r3, [sp, #160]	@ 0xa0
 8014e0a:	e637      	b.n	8014a7c <forward_lite_conv2d_rgb_sssa8_ch+0x160>

08014e0c <forward_lite_maxpool_is8os8_scaleneg>:
 8014e0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e10:	b095      	sub	sp, #84	@ 0x54
 8014e12:	e9cd 010a 	strd	r0, r1, [sp, #40]	@ 0x28
 8014e16:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
 8014e1a:	910d      	str	r1, [sp, #52]	@ 0x34
 8014e1c:	f8bd 1080 	ldrh.w	r1, [sp, #128]	@ 0x80
 8014e20:	910e      	str	r1, [sp, #56]	@ 0x38
 8014e22:	f8bd 1084 	ldrh.w	r1, [sp, #132]	@ 0x84
 8014e26:	910f      	str	r1, [sp, #60]	@ 0x3c
 8014e28:	f8bd 1088 	ldrh.w	r1, [sp, #136]	@ 0x88
 8014e2c:	9110      	str	r1, [sp, #64]	@ 0x40
 8014e2e:	f8bd 108c 	ldrh.w	r1, [sp, #140]	@ 0x8c
 8014e32:	f99d 009c 	ldrsb.w	r0, [sp, #156]	@ 0x9c
 8014e36:	930c      	str	r3, [sp, #48]	@ 0x30
 8014e38:	9111      	str	r1, [sp, #68]	@ 0x44
 8014e3a:	f8bd 3098 	ldrh.w	r3, [sp, #152]	@ 0x98
 8014e3e:	f8bd 1090 	ldrh.w	r1, [sp, #144]	@ 0x90
 8014e42:	9112      	str	r1, [sp, #72]	@ 0x48
 8014e44:	9001      	str	r0, [sp, #4]
 8014e46:	f8bd 1094 	ldrh.w	r1, [sp, #148]	@ 0x94
 8014e4a:	f99d 00a0 	ldrsb.w	r0, [sp, #160]	@ 0xa0
 8014e4e:	f8bd a078 	ldrh.w	sl, [sp, #120]	@ 0x78
 8014e52:	9206      	str	r2, [sp, #24]
 8014e54:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014e56:	9107      	str	r1, [sp, #28]
 8014e58:	9003      	str	r0, [sp, #12]
 8014e5a:	2b00      	cmp	r3, #0
 8014e5c:	f000 80ac 	beq.w	8014fb8 <forward_lite_maxpool_is8os8_scaleneg+0x1ac>
 8014e60:	2900      	cmp	r1, #0
 8014e62:	f000 80a9 	beq.w	8014fb8 <forward_lite_maxpool_is8os8_scaleneg+0x1ac>
 8014e66:	f1ba 0f00 	cmp.w	sl, #0
 8014e6a:	f000 80a5 	beq.w	8014fb8 <forward_lite_maxpool_is8os8_scaleneg+0x1ac>
 8014e6e:	2300      	movs	r3, #0
 8014e70:	ed9f 6a55 	vldr	s12, [pc, #340]	@ 8014fc8 <forward_lite_maxpool_is8os8_scaleneg+0x1bc>
 8014e74:	9304      	str	r3, [sp, #16]
 8014e76:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014e7a:	fb02 fb0a 	mul.w	fp, r2, sl
 8014e7e:	9904      	ldr	r1, [sp, #16]
 8014e80:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8014e82:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8014e84:	eddd 7a03 	vldr	s15, [sp, #12]
 8014e88:	fb01 f303 	mul.w	r3, r1, r3
 8014e8c:	1a1a      	subs	r2, r3, r0
 8014e8e:	1ac3      	subs	r3, r0, r3
 8014e90:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8014e92:	2a00      	cmp	r2, #0
 8014e94:	bfd8      	it	le
 8014e96:	4699      	movle	r9, r3
 8014e98:	4403      	add	r3, r0
 8014e9a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8014e9c:	bfc8      	it	gt
 8014e9e:	f04f 0900 	movgt.w	r9, #0
 8014ea2:	4298      	cmp	r0, r3
 8014ea4:	bfa8      	it	ge
 8014ea6:	4618      	movge	r0, r3
 8014ea8:	9b06      	ldr	r3, [sp, #24]
 8014eaa:	444a      	add	r2, r9
 8014eac:	fb03 f302 	mul.w	r3, r3, r2
 8014eb0:	9309      	str	r3, [sp, #36]	@ 0x24
 8014eb2:	9b07      	ldr	r3, [sp, #28]
 8014eb4:	fb01 f303 	mul.w	r3, r1, r3
 8014eb8:	9308      	str	r3, [sp, #32]
 8014eba:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 8014ebe:	2300      	movs	r3, #0
 8014ec0:	4684      	mov	ip, r0
 8014ec2:	9305      	str	r3, [sp, #20]
 8014ec4:	9905      	ldr	r1, [sp, #20]
 8014ec6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8014ec8:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8014eca:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8014ecc:	fb03 f201 	mul.w	r2, r3, r1
 8014ed0:	1a13      	subs	r3, r2, r0
 8014ed2:	2b00      	cmp	r3, #0
 8014ed4:	eba0 0202 	sub.w	r2, r0, r2
 8014ed8:	bfd8      	it	le
 8014eda:	4617      	movle	r7, r2
 8014edc:	9806      	ldr	r0, [sp, #24]
 8014ede:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014ee0:	441a      	add	r2, r3
 8014ee2:	eba0 0303 	sub.w	r3, r0, r3
 8014ee6:	bfc8      	it	gt
 8014ee8:	2700      	movgt	r7, #0
 8014eea:	429c      	cmp	r4, r3
 8014eec:	bfa8      	it	ge
 8014eee:	461c      	movge	r4, r3
 8014ef0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014ef2:	443a      	add	r2, r7
 8014ef4:	fb0a 3302 	mla	r3, sl, r2, r3
 8014ef8:	9302      	str	r3, [sp, #8]
 8014efa:	9b08      	ldr	r3, [sp, #32]
 8014efc:	eb01 0803 	add.w	r8, r1, r3
 8014f00:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8014f02:	eeb6 5a00 	vmov.f32	s10, #96	@ 0x3f000000  0.5
 8014f06:	fb0a 3808 	mla	r8, sl, r8, r3
 8014f0a:	f04f 0e00 	mov.w	lr, #0
 8014f0e:	45e1      	cmp	r9, ip
 8014f10:	da58      	bge.n	8014fc4 <forward_lite_maxpool_is8os8_scaleneg+0x1b8>
 8014f12:	9b02      	ldr	r3, [sp, #8]
 8014f14:	464d      	mov	r5, r9
 8014f16:	eb03 060e 	add.w	r6, r3, lr
 8014f1a:	217f      	movs	r1, #127	@ 0x7f
 8014f1c:	42a7      	cmp	r7, r4
 8014f1e:	da0a      	bge.n	8014f36 <forward_lite_maxpool_is8os8_scaleneg+0x12a>
 8014f20:	4632      	mov	r2, r6
 8014f22:	463b      	mov	r3, r7
 8014f24:	f992 0000 	ldrsb.w	r0, [r2]
 8014f28:	3301      	adds	r3, #1
 8014f2a:	4281      	cmp	r1, r0
 8014f2c:	bfa8      	it	ge
 8014f2e:	4601      	movge	r1, r0
 8014f30:	429c      	cmp	r4, r3
 8014f32:	4452      	add	r2, sl
 8014f34:	d1f6      	bne.n	8014f24 <forward_lite_maxpool_is8os8_scaleneg+0x118>
 8014f36:	3501      	adds	r5, #1
 8014f38:	45ac      	cmp	ip, r5
 8014f3a:	445e      	add	r6, fp
 8014f3c:	d1ee      	bne.n	8014f1c <forward_lite_maxpool_is8os8_scaleneg+0x110>
 8014f3e:	eeb4 0a66 	vcmp.f32	s0, s13
 8014f42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014f46:	d103      	bne.n	8014f50 <forward_lite_maxpool_is8os8_scaleneg+0x144>
 8014f48:	9b01      	ldr	r3, [sp, #4]
 8014f4a:	9a03      	ldr	r2, [sp, #12]
 8014f4c:	4293      	cmp	r3, r2
 8014f4e:	d036      	beq.n	8014fbe <forward_lite_maxpool_is8os8_scaleneg+0x1b2>
 8014f50:	9b01      	ldr	r3, [sp, #4]
 8014f52:	1ac9      	subs	r1, r1, r3
 8014f54:	ee07 1a90 	vmov	s15, r1
 8014f58:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014f5c:	eeb0 7a65 	vmov.f32	s14, s11
 8014f60:	eea7 7a80 	vfma.f32	s14, s15, s0
 8014f64:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8014f68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014f6c:	bfb4      	ite	lt
 8014f6e:	eef0 7a46 	vmovlt.f32	s15, s12
 8014f72:	eef0 7a45 	vmovge.f32	s15, s10
 8014f76:	ee77 7a87 	vadd.f32	s15, s15, s14
 8014f7a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014f7e:	ee17 3a90 	vmov	r3, s15
 8014f82:	f303 0307 	ssat	r3, #8, r3
 8014f86:	f888 3000 	strb.w	r3, [r8]
 8014f8a:	f10e 0e01 	add.w	lr, lr, #1
 8014f8e:	fa1f f38e 	uxth.w	r3, lr
 8014f92:	459a      	cmp	sl, r3
 8014f94:	f108 0801 	add.w	r8, r8, #1
 8014f98:	d8b9      	bhi.n	8014f0e <forward_lite_maxpool_is8os8_scaleneg+0x102>
 8014f9a:	9b05      	ldr	r3, [sp, #20]
 8014f9c:	9a07      	ldr	r2, [sp, #28]
 8014f9e:	3301      	adds	r3, #1
 8014fa0:	b29b      	uxth	r3, r3
 8014fa2:	429a      	cmp	r2, r3
 8014fa4:	9305      	str	r3, [sp, #20]
 8014fa6:	d88d      	bhi.n	8014ec4 <forward_lite_maxpool_is8os8_scaleneg+0xb8>
 8014fa8:	9b04      	ldr	r3, [sp, #16]
 8014faa:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014fac:	3301      	adds	r3, #1
 8014fae:	b29b      	uxth	r3, r3
 8014fb0:	429a      	cmp	r2, r3
 8014fb2:	9304      	str	r3, [sp, #16]
 8014fb4:	f63f af63 	bhi.w	8014e7e <forward_lite_maxpool_is8os8_scaleneg+0x72>
 8014fb8:	b015      	add	sp, #84	@ 0x54
 8014fba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014fbe:	f888 1000 	strb.w	r1, [r8]
 8014fc2:	e7e2      	b.n	8014f8a <forward_lite_maxpool_is8os8_scaleneg+0x17e>
 8014fc4:	217f      	movs	r1, #127	@ 0x7f
 8014fc6:	e7ba      	b.n	8014f3e <forward_lite_maxpool_is8os8_scaleneg+0x132>
 8014fc8:	befffffc 	.word	0xbefffffc

08014fcc <forward_lite_nl_softmax_is8os8>:
 8014fcc:	b410      	push	{r4}
 8014fce:	fbb2 f2f3 	udiv	r2, r2, r3
 8014fd2:	9c01      	ldr	r4, [sp, #4]
 8014fd4:	fbb2 f2f4 	udiv	r2, r2, r4
 8014fd8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8014fdc:	f00c bfd4 	b.w	8021f88 <_lite_kernel_nl_softmax_is8os8>

08014fe0 <forward_lite_nl_softmax_iu8ou8>:
 8014fe0:	b410      	push	{r4}
 8014fe2:	fbb2 f2f3 	udiv	r2, r2, r3
 8014fe6:	9c01      	ldr	r4, [sp, #4]
 8014fe8:	fbb2 f2f4 	udiv	r2, r2, r4
 8014fec:	f85d 4b04 	ldr.w	r4, [sp], #4
 8014ff0:	f00d bd84 	b.w	8022afc <_lite_kernel_nl_softmax_iu8ou8>

08014ff4 <align_factor>:
 8014ff4:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8014ff8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8014ffc:	b508      	push	{r3, lr}
 8014ffe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015002:	f04f 0300 	mov.w	r3, #0
 8015006:	8003      	strh	r3, [r0, #0]
 8015008:	d425      	bmi.n	8015056 <align_factor+0x62>
 801500a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 801500e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8015012:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8015016:	f64f 71e0 	movw	r1, #65504	@ 0xffe0
 801501a:	e005      	b.n	8015028 <align_factor+0x34>
 801501c:	8003      	strh	r3, [r0, #0]
 801501e:	b293      	uxth	r3, r2
 8015020:	428b      	cmp	r3, r1
 8015022:	ee20 0a07 	vmul.f32	s0, s0, s14
 8015026:	d02d      	beq.n	8015084 <align_factor+0x90>
 8015028:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801502c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015030:	f103 32ff 	add.w	r2, r3, #4294967295	@ 0xffffffff
 8015034:	dcf2      	bgt.n	801501c <align_factor+0x28>
 8015036:	eddf 7a18 	vldr	s15, [pc, #96]	@ 8015098 <align_factor+0xa4>
 801503a:	ee60 7a27 	vmul.f32	s15, s0, s15
 801503e:	ee17 0a90 	vmov	r0, s15
 8015042:	f7fb fd01 	bl	8010a48 <__aeabi_f2lz>
 8015046:	ebb1 7fe0 	cmp.w	r1, r0, asr #31
 801504a:	bf1c      	itt	ne
 801504c:	f06f 4000 	mvnne.w	r0, #2147483648	@ 0x80000000
 8015050:	ea80 70e1 	eorne.w	r0, r0, r1, asr #31
 8015054:	bd08      	pop	{r3, pc}
 8015056:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801505a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801505e:	ddd4      	ble.n	801500a <align_factor+0x16>
 8015060:	2301      	movs	r3, #1
 8015062:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8015066:	e005      	b.n	8015074 <align_factor+0x80>
 8015068:	8003      	strh	r3, [r0, #0]
 801506a:	b293      	uxth	r3, r2
 801506c:	2b21      	cmp	r3, #33	@ 0x21
 801506e:	ee30 0a00 	vadd.f32	s0, s0, s0
 8015072:	d00d      	beq.n	8015090 <align_factor+0x9c>
 8015074:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8015078:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801507c:	f103 0201 	add.w	r2, r3, #1
 8015080:	d4f2      	bmi.n	8015068 <align_factor+0x74>
 8015082:	e7d8      	b.n	8015036 <align_factor+0x42>
 8015084:	f64f 73e2 	movw	r3, #65506	@ 0xffe2
 8015088:	ee30 0a00 	vadd.f32	s0, s0, s0
 801508c:	8003      	strh	r3, [r0, #0]
 801508e:	e7d2      	b.n	8015036 <align_factor+0x42>
 8015090:	2300      	movs	r3, #0
 8015092:	8003      	strh	r3, [r0, #0]
 8015094:	4618      	mov	r0, r3
 8015096:	bd08      	pop	{r3, pc}
 8015098:	4f000000 	.word	0x4f000000

0801509c <align_factor_ch>:
 801509c:	b361      	cbz	r1, 80150f8 <align_factor_ch+0x5c>
 801509e:	ee80 7a20 	vdiv.f32	s14, s0, s1
 80150a2:	b570      	push	{r4, r5, r6, lr}
 80150a4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80150a8:	1e9d      	subs	r5, r3, #2
 80150aa:	1f14      	subs	r4, r2, #4
 80150ac:	2600      	movs	r6, #0
 80150ae:	ecf0 7a01 	vldmia	r0!, {s15}
 80150b2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80150b6:	ee17 ea90 	vmov	lr, s15
 80150ba:	f3ce 52c7 	ubfx	r2, lr, #23, #8
 80150be:	f3ce 0c16 	ubfx	ip, lr, #0, #23
 80150c2:	f50c 0c00 	add.w	ip, ip, #8388608	@ 0x800000
 80150c6:	f1be 0f00 	cmp.w	lr, #0
 80150ca:	f1c2 027e 	rsb	r2, r2, #126	@ 0x7e
 80150ce:	bfb8      	it	lt
 80150d0:	f1cc 0c00 	rsblt	ip, ip, #0
 80150d4:	2a1f      	cmp	r2, #31
 80150d6:	ea4f 13cc 	mov.w	r3, ip, lsl #7
 80150da:	dc06      	bgt.n	80150ea <align_factor_ch+0x4e>
 80150dc:	4281      	cmp	r1, r0
 80150de:	f825 2f02 	strh.w	r2, [r5, #2]!
 80150e2:	f844 3f04 	str.w	r3, [r4, #4]!
 80150e6:	d1e2      	bne.n	80150ae <align_factor_ch+0x12>
 80150e8:	bd70      	pop	{r4, r5, r6, pc}
 80150ea:	4281      	cmp	r1, r0
 80150ec:	f825 6f02 	strh.w	r6, [r5, #2]!
 80150f0:	f844 6f04 	str.w	r6, [r4, #4]!
 80150f4:	d1db      	bne.n	80150ae <align_factor_ch+0x12>
 80150f6:	bd70      	pop	{r4, r5, r6, pc}
 80150f8:	4770      	bx	lr
 80150fa:	bf00      	nop

080150fc <st_int8_to16_dual>:
 80150fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015100:	4698      	mov	r8, r3
 8015102:	085b      	lsrs	r3, r3, #1
 8015104:	eb00 0c02 	add.w	ip, r0, r2
 8015108:	f000 80ba 	beq.w	8015280 <st_int8_to16_dual+0x184>
 801510c:	f1a2 0710 	sub.w	r7, r2, #16
 8015110:	1f16      	subs	r6, r2, #4
 8015112:	2f00      	cmp	r7, #0
 8015114:	f04f 0500 	mov.w	r5, #0
 8015118:	db73      	blt.n	8015202 <st_int8_to16_dual+0x106>
 801511a:	f8d0 e000 	ldr.w	lr, [r0]
 801511e:	f8dc 4000 	ldr.w	r4, [ip]
 8015122:	fa2f f99e 	sxtb16	r9, lr, ror #8
 8015126:	fa2f fe8e 	sxtb16	lr, lr
 801512a:	eac9 4a2e 	pkhtb	sl, r9, lr, asr #16
 801512e:	eace 4e09 	pkhbt	lr, lr, r9, lsl #16
 8015132:	fa2f f994 	sxtb16	r9, r4, ror #8
 8015136:	f8c1 e000 	str.w	lr, [r1]
 801513a:	f8c1 a008 	str.w	sl, [r1, #8]
 801513e:	fa2f f484 	sxtb16	r4, r4
 8015142:	eac9 4e24 	pkhtb	lr, r9, r4, asr #16
 8015146:	eac4 4409 	pkhbt	r4, r4, r9, lsl #16
 801514a:	f8c1 e00c 	str.w	lr, [r1, #12]
 801514e:	604c      	str	r4, [r1, #4]
 8015150:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8015154:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8015158:	fa2f f99e 	sxtb16	r9, lr, ror #8
 801515c:	fa2f fe8e 	sxtb16	lr, lr
 8015160:	eac9 4a2e 	pkhtb	sl, r9, lr, asr #16
 8015164:	eace 4e09 	pkhbt	lr, lr, r9, lsl #16
 8015168:	fa2f f994 	sxtb16	r9, r4, ror #8
 801516c:	f8c1 e010 	str.w	lr, [r1, #16]
 8015170:	f8c1 a018 	str.w	sl, [r1, #24]
 8015174:	fa2f f484 	sxtb16	r4, r4
 8015178:	eac9 4e24 	pkhtb	lr, r9, r4, asr #16
 801517c:	eac4 4409 	pkhbt	r4, r4, r9, lsl #16
 8015180:	f8c1 e01c 	str.w	lr, [r1, #28]
 8015184:	614c      	str	r4, [r1, #20]
 8015186:	f8d0 e008 	ldr.w	lr, [r0, #8]
 801518a:	f8dc 4008 	ldr.w	r4, [ip, #8]
 801518e:	fa2f f99e 	sxtb16	r9, lr, ror #8
 8015192:	fa2f fe8e 	sxtb16	lr, lr
 8015196:	eac9 4a2e 	pkhtb	sl, r9, lr, asr #16
 801519a:	eace 4e09 	pkhbt	lr, lr, r9, lsl #16
 801519e:	fa2f f994 	sxtb16	r9, r4, ror #8
 80151a2:	3010      	adds	r0, #16
 80151a4:	f8c1 e020 	str.w	lr, [r1, #32]
 80151a8:	f8c1 a028 	str.w	sl, [r1, #40]	@ 0x28
 80151ac:	fa2f f484 	sxtb16	r4, r4
 80151b0:	eac9 4e24 	pkhtb	lr, r9, r4, asr #16
 80151b4:	eac4 4409 	pkhbt	r4, r4, r9, lsl #16
 80151b8:	f8c1 e02c 	str.w	lr, [r1, #44]	@ 0x2c
 80151bc:	624c      	str	r4, [r1, #36]	@ 0x24
 80151be:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80151c2:	f850 ec04 	ldr.w	lr, [r0, #-4]
 80151c6:	f10c 0c10 	add.w	ip, ip, #16
 80151ca:	fa2f f99e 	sxtb16	r9, lr, ror #8
 80151ce:	fa2f fe8e 	sxtb16	lr, lr
 80151d2:	eac9 4a2e 	pkhtb	sl, r9, lr, asr #16
 80151d6:	eace 4e09 	pkhbt	lr, lr, r9, lsl #16
 80151da:	fa2f f994 	sxtb16	r9, r4, ror #8
 80151de:	f8c1 e030 	str.w	lr, [r1, #48]	@ 0x30
 80151e2:	f8c1 a038 	str.w	sl, [r1, #56]	@ 0x38
 80151e6:	3510      	adds	r5, #16
 80151e8:	3140      	adds	r1, #64	@ 0x40
 80151ea:	42bd      	cmp	r5, r7
 80151ec:	fa2f f484 	sxtb16	r4, r4
 80151f0:	eac9 4e24 	pkhtb	lr, r9, r4, asr #16
 80151f4:	eac4 4409 	pkhbt	r4, r4, r9, lsl #16
 80151f8:	f841 ec04 	str.w	lr, [r1, #-4]
 80151fc:	f841 4c0c 	str.w	r4, [r1, #-12]
 8015200:	dd8b      	ble.n	801511a <st_int8_to16_dual+0x1e>
 8015202:	42ae      	cmp	r6, r5
 8015204:	db1e      	blt.n	8015244 <st_int8_to16_dual+0x148>
 8015206:	f850 4b04 	ldr.w	r4, [r0], #4
 801520a:	f85c eb04 	ldr.w	lr, [ip], #4
 801520e:	fa2f f994 	sxtb16	r9, r4, ror #8
 8015212:	fa2f f484 	sxtb16	r4, r4
 8015216:	eac9 4a24 	pkhtb	sl, r9, r4, asr #16
 801521a:	eac4 4409 	pkhbt	r4, r4, r9, lsl #16
 801521e:	fa2f f99e 	sxtb16	r9, lr, ror #8
 8015222:	600c      	str	r4, [r1, #0]
 8015224:	f8c1 a008 	str.w	sl, [r1, #8]
 8015228:	3504      	adds	r5, #4
 801522a:	3110      	adds	r1, #16
 801522c:	42b5      	cmp	r5, r6
 801522e:	fa2f fe8e 	sxtb16	lr, lr
 8015232:	eac9 442e 	pkhtb	r4, r9, lr, asr #16
 8015236:	eace 4e09 	pkhbt	lr, lr, r9, lsl #16
 801523a:	f841 4c04 	str.w	r4, [r1, #-4]
 801523e:	f841 ec0c 	str.w	lr, [r1, #-12]
 8015242:	dde0      	ble.n	8015206 <st_int8_to16_dual+0x10a>
 8015244:	42aa      	cmp	r2, r5
 8015246:	dd41      	ble.n	80152cc <st_int8_to16_dual+0x1d0>
 8015248:	1b55      	subs	r5, r2, r5
 801524a:	1d0c      	adds	r4, r1, #4
 801524c:	eb00 0a05 	add.w	sl, r0, r5
 8015250:	46e6      	mov	lr, ip
 8015252:	f910 9b01 	ldrsb.w	r9, [r0], #1
 8015256:	f824 9c04 	strh.w	r9, [r4, #-4]
 801525a:	f91e 9b01 	ldrsb.w	r9, [lr], #1
 801525e:	f824 9c02 	strh.w	r9, [r4, #-2]
 8015262:	4550      	cmp	r0, sl
 8015264:	f104 0404 	add.w	r4, r4, #4
 8015268:	d1f3      	bne.n	8015252 <st_int8_to16_dual+0x156>
 801526a:	44ac      	add	ip, r5
 801526c:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8015270:	3b01      	subs	r3, #1
 8015272:	b29b      	uxth	r3, r3
 8015274:	eb0a 0002 	add.w	r0, sl, r2
 8015278:	4494      	add	ip, r2
 801527a:	2b00      	cmp	r3, #0
 801527c:	f47f af49 	bne.w	8015112 <st_int8_to16_dual+0x16>
 8015280:	f018 0f01 	tst.w	r8, #1
 8015284:	d020      	beq.n	80152c8 <st_int8_to16_dual+0x1cc>
 8015286:	1f17      	subs	r7, r2, #4
 8015288:	f04f 0400 	mov.w	r4, #0
 801528c:	d411      	bmi.n	80152b2 <st_int8_to16_dual+0x1b6>
 801528e:	f850 3b04 	ldr.w	r3, [r0], #4
 8015292:	fa2f f593 	sxtb16	r5, r3, ror #8
 8015296:	3108      	adds	r1, #8
 8015298:	3404      	adds	r4, #4
 801529a:	42a7      	cmp	r7, r4
 801529c:	fa2f f383 	sxtb16	r3, r3
 80152a0:	eac5 4623 	pkhtb	r6, r5, r3, asr #16
 80152a4:	eac3 4305 	pkhbt	r3, r3, r5, lsl #16
 80152a8:	f841 6c04 	str.w	r6, [r1, #-4]
 80152ac:	f841 3c08 	str.w	r3, [r1, #-8]
 80152b0:	daed      	bge.n	801528e <st_int8_to16_dual+0x192>
 80152b2:	42a2      	cmp	r2, r4
 80152b4:	dd08      	ble.n	80152c8 <st_int8_to16_dual+0x1cc>
 80152b6:	1b13      	subs	r3, r2, r4
 80152b8:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80152bc:	f910 2b01 	ldrsb.w	r2, [r0], #1
 80152c0:	f821 2b02 	strh.w	r2, [r1], #2
 80152c4:	428b      	cmp	r3, r1
 80152c6:	d1f9      	bne.n	80152bc <st_int8_to16_dual+0x1c0>
 80152c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80152cc:	4682      	mov	sl, r0
 80152ce:	e7cf      	b.n	8015270 <st_int8_to16_dual+0x174>

080152d0 <ai_padding_opt_init>:
 80152d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80152d4:	2700      	movs	r7, #0
 80152d6:	e9c0 7700 	strd	r7, r7, [r0]
 80152da:	6087      	str	r7, [r0, #8]
 80152dc:	690e      	ldr	r6, [r1, #16]
 80152de:	9c07      	ldr	r4, [sp, #28]
 80152e0:	f1c6 0c00 	rsb	ip, r6, #0
 80152e4:	689e      	ldr	r6, [r3, #8]
 80152e6:	42be      	cmp	r6, r7
 80152e8:	46b9      	mov	r9, r7
 80152ea:	dd1b      	ble.n	8015324 <ai_padding_opt_init+0x54>
 80152ec:	463e      	mov	r6, r7
 80152ee:	46be      	mov	lr, r7
 80152f0:	e012      	b.n	8015318 <ai_padding_opt_init+0x48>
 80152f2:	6895      	ldr	r5, [r2, #8]
 80152f4:	eba5 080c 	sub.w	r8, r5, ip
 80152f8:	68a5      	ldr	r5, [r4, #8]
 80152fa:	45a8      	cmp	r8, r5
 80152fc:	bfb5      	itete	lt
 80152fe:	f109 0901 	addlt.w	r9, r9, #1
 8015302:	3701      	addge	r7, #1
 8015304:	f8c0 9008 	strlt.w	r9, [r0, #8]
 8015308:	6047      	strge	r7, [r0, #4]
 801530a:	688d      	ldr	r5, [r1, #8]
 801530c:	44ac      	add	ip, r5
 801530e:	689d      	ldr	r5, [r3, #8]
 8015310:	f10e 0e01 	add.w	lr, lr, #1
 8015314:	4575      	cmp	r5, lr
 8015316:	dd06      	ble.n	8015326 <ai_padding_opt_init+0x56>
 8015318:	f1bc 0f00 	cmp.w	ip, #0
 801531c:	dae9      	bge.n	80152f2 <ai_padding_opt_init+0x22>
 801531e:	3601      	adds	r6, #1
 8015320:	6006      	str	r6, [r0, #0]
 8015322:	e7f2      	b.n	801530a <ai_padding_opt_init+0x3a>
 8015324:	463e      	mov	r6, r7
 8015326:	2500      	movs	r5, #0
 8015328:	e9c0 6703 	strd	r6, r7, [r0, #12]
 801532c:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8015330:	f8c0 9014 	str.w	r9, [r0, #20]
 8015334:	6205      	str	r5, [r0, #32]
 8015336:	694e      	ldr	r6, [r1, #20]
 8015338:	f1c6 0c00 	rsb	ip, r6, #0
 801533c:	685e      	ldr	r6, [r3, #4]
 801533e:	42ae      	cmp	r6, r5
 8015340:	dd1c      	ble.n	801537c <ai_padding_opt_init+0xac>
 8015342:	46ae      	mov	lr, r5
 8015344:	e00f      	b.n	8015366 <ai_padding_opt_init+0x96>
 8015346:	6855      	ldr	r5, [r2, #4]
 8015348:	6866      	ldr	r6, [r4, #4]
 801534a:	eba5 050c 	sub.w	r5, r5, ip
 801534e:	42b5      	cmp	r5, r6
 8015350:	da10      	bge.n	8015374 <ai_padding_opt_init+0xa4>
 8015352:	6a05      	ldr	r5, [r0, #32]
 8015354:	3501      	adds	r5, #1
 8015356:	6205      	str	r5, [r0, #32]
 8015358:	68cd      	ldr	r5, [r1, #12]
 801535a:	44ac      	add	ip, r5
 801535c:	685d      	ldr	r5, [r3, #4]
 801535e:	f10e 0e01 	add.w	lr, lr, #1
 8015362:	4575      	cmp	r5, lr
 8015364:	dd0a      	ble.n	801537c <ai_padding_opt_init+0xac>
 8015366:	f1bc 0f00 	cmp.w	ip, #0
 801536a:	daec      	bge.n	8015346 <ai_padding_opt_init+0x76>
 801536c:	6985      	ldr	r5, [r0, #24]
 801536e:	3501      	adds	r5, #1
 8015370:	6185      	str	r5, [r0, #24]
 8015372:	e7f1      	b.n	8015358 <ai_padding_opt_init+0x88>
 8015374:	69c5      	ldr	r5, [r0, #28]
 8015376:	3501      	adds	r5, #1
 8015378:	61c5      	str	r5, [r0, #28]
 801537a:	e7ed      	b.n	8015358 <ai_padding_opt_init+0x88>
 801537c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08015380 <ai_padding_opt_phase1>:
 8015380:	e9d0 3206 	ldrd	r3, r2, [r0, #24]
 8015384:	b923      	cbnz	r3, 8015390 <ai_padding_opt_phase1+0x10>
 8015386:	b17a      	cbz	r2, 80153a8 <ai_padding_opt_phase1+0x28>
 8015388:	3a01      	subs	r2, #1
 801538a:	8483      	strh	r3, [r0, #36]	@ 0x24
 801538c:	61c2      	str	r2, [r0, #28]
 801538e:	e004      	b.n	801539a <ai_padding_opt_phase1+0x1a>
 8015390:	b152      	cbz	r2, 80153a8 <ai_padding_opt_phase1+0x28>
 8015392:	2201      	movs	r2, #1
 8015394:	3b01      	subs	r3, #1
 8015396:	8482      	strh	r2, [r0, #36]	@ 0x24
 8015398:	6183      	str	r3, [r0, #24]
 801539a:	e9d0 2304 	ldrd	r2, r3, [r0, #16]
 801539e:	68c1      	ldr	r1, [r0, #12]
 80153a0:	6083      	str	r3, [r0, #8]
 80153a2:	e9c0 1200 	strd	r1, r2, [r0]
 80153a6:	4770      	bx	lr
 80153a8:	6a03      	ldr	r3, [r0, #32]
 80153aa:	2201      	movs	r2, #1
 80153ac:	3b01      	subs	r3, #1
 80153ae:	8482      	strh	r2, [r0, #36]	@ 0x24
 80153b0:	6203      	str	r3, [r0, #32]
 80153b2:	e7f2      	b.n	801539a <ai_padding_opt_phase1+0x1a>

080153b4 <st_int8_avepool>:
 80153b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153b8:	b097      	sub	sp, #92	@ 0x5c
 80153ba:	e9cd 010c 	strd	r0, r1, [sp, #48]	@ 0x30
 80153be:	f8bd 1084 	ldrh.w	r1, [sp, #132]	@ 0x84
 80153c2:	910f      	str	r1, [sp, #60]	@ 0x3c
 80153c4:	f8bd 1088 	ldrh.w	r1, [sp, #136]	@ 0x88
 80153c8:	9110      	str	r1, [sp, #64]	@ 0x40
 80153ca:	f8bd 108c 	ldrh.w	r1, [sp, #140]	@ 0x8c
 80153ce:	9111      	str	r1, [sp, #68]	@ 0x44
 80153d0:	f8bd 1090 	ldrh.w	r1, [sp, #144]	@ 0x90
 80153d4:	9112      	str	r1, [sp, #72]	@ 0x48
 80153d6:	f8bd 1094 	ldrh.w	r1, [sp, #148]	@ 0x94
 80153da:	9113      	str	r1, [sp, #76]	@ 0x4c
 80153dc:	f8bd 1098 	ldrh.w	r1, [sp, #152]	@ 0x98
 80153e0:	9114      	str	r1, [sp, #80]	@ 0x50
 80153e2:	f8bd 109c 	ldrh.w	r1, [sp, #156]	@ 0x9c
 80153e6:	930e      	str	r3, [sp, #56]	@ 0x38
 80153e8:	9109      	str	r1, [sp, #36]	@ 0x24
 80153ea:	f8bd 30a0 	ldrh.w	r3, [sp, #160]	@ 0xa0
 80153ee:	f99d 10a4 	ldrsb.w	r1, [sp, #164]	@ 0xa4
 80153f2:	9104      	str	r1, [sp, #16]
 80153f4:	f99d 10a8 	ldrsb.w	r1, [sp, #168]	@ 0xa8
 80153f8:	f8bd a080 	ldrh.w	sl, [sp, #128]	@ 0x80
 80153fc:	9208      	str	r2, [sp, #32]
 80153fe:	ee80 6a20 	vdiv.f32	s12, s0, s1
 8015402:	9315      	str	r3, [sp, #84]	@ 0x54
 8015404:	9105      	str	r1, [sp, #20]
 8015406:	2b00      	cmp	r3, #0
 8015408:	f000 80a8 	beq.w	801555c <st_int8_avepool+0x1a8>
 801540c:	2300      	movs	r3, #0
 801540e:	fb02 fb0a 	mul.w	fp, r2, sl
 8015412:	9306      	str	r3, [sp, #24]
 8015414:	eddf 6a63 	vldr	s13, [pc, #396]	@ 80155a4 <st_int8_avepool+0x1f0>
 8015418:	eddf 3a63 	vldr	s7, [pc, #396]	@ 80155a8 <st_int8_avepool+0x1f4>
 801541c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801541e:	2a00      	cmp	r2, #0
 8015420:	f000 8095 	beq.w	801554e <st_int8_avepool+0x19a>
 8015424:	9906      	ldr	r1, [sp, #24]
 8015426:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8015428:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801542a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801542c:	eddd 7a04 	vldr	s15, [sp, #16]
 8015430:	fb01 f303 	mul.w	r3, r1, r3
 8015434:	1a1b      	subs	r3, r3, r0
 8015436:	ea23 70e3 	bic.w	r0, r3, r3, asr #31
 801543a:	4423      	add	r3, r4
 801543c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801543e:	9002      	str	r0, [sp, #8]
 8015440:	429c      	cmp	r4, r3
 8015442:	bfa8      	it	ge
 8015444:	461c      	movge	r4, r3
 8015446:	fb01 f302 	mul.w	r3, r1, r2
 801544a:	930a      	str	r3, [sp, #40]	@ 0x28
 801544c:	9b08      	ldr	r3, [sp, #32]
 801544e:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8015452:	eddd 7a05 	vldr	s15, [sp, #20]
 8015456:	fb00 f303 	mul.w	r3, r0, r3
 801545a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801545c:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 8015460:	2300      	movs	r3, #0
 8015462:	46a1      	mov	r9, r4
 8015464:	9307      	str	r3, [sp, #28]
 8015466:	f1ba 0f00 	cmp.w	sl, #0
 801546a:	d06a      	beq.n	8015542 <st_int8_avepool+0x18e>
 801546c:	9a07      	ldr	r2, [sp, #28]
 801546e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8015470:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8015472:	9c08      	ldr	r4, [sp, #32]
 8015474:	fb02 f303 	mul.w	r3, r2, r3
 8015478:	1a5b      	subs	r3, r3, r1
 801547a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801547c:	ea23 7ce3 	bic.w	ip, r3, r3, asr #31
 8015480:	440b      	add	r3, r1
 8015482:	429c      	cmp	r4, r3
 8015484:	bfa8      	it	ge
 8015486:	461c      	movge	r4, r3
 8015488:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801548a:	18d3      	adds	r3, r2, r3
 801548c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801548e:	fb0a 2303 	mla	r3, sl, r3, r2
 8015492:	9301      	str	r3, [sp, #4]
 8015494:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8015496:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8015498:	4463      	add	r3, ip
 801549a:	fb0a 2303 	mla	r3, sl, r3, r2
 801549e:	eef6 4a00 	vmov.f32	s9, #96	@ 0x3f000000  0.5
 80154a2:	9303      	str	r3, [sp, #12]
 80154a4:	f04f 0800 	mov.w	r8, #0
 80154a8:	eba4 0e0c 	sub.w	lr, r4, ip
 80154ac:	9d02      	ldr	r5, [sp, #8]
 80154ae:	45a9      	cmp	r9, r5
 80154b0:	dd63      	ble.n	801557a <st_int8_avepool+0x1c6>
 80154b2:	9b03      	ldr	r3, [sp, #12]
 80154b4:	2700      	movs	r7, #0
 80154b6:	eb08 0603 	add.w	r6, r8, r3
 80154ba:	4639      	mov	r1, r7
 80154bc:	4564      	cmp	r4, ip
 80154be:	dd09      	ble.n	80154d4 <st_int8_avepool+0x120>
 80154c0:	4632      	mov	r2, r6
 80154c2:	4663      	mov	r3, ip
 80154c4:	f992 0000 	ldrsb.w	r0, [r2]
 80154c8:	3301      	adds	r3, #1
 80154ca:	429c      	cmp	r4, r3
 80154cc:	4401      	add	r1, r0
 80154ce:	4452      	add	r2, sl
 80154d0:	d1f8      	bne.n	80154c4 <st_int8_avepool+0x110>
 80154d2:	4477      	add	r7, lr
 80154d4:	3501      	adds	r5, #1
 80154d6:	45a9      	cmp	r9, r5
 80154d8:	445e      	add	r6, fp
 80154da:	d1ef      	bne.n	80154bc <st_int8_avepool+0x108>
 80154dc:	eeb4 0a60 	vcmp.f32	s0, s1
 80154e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80154e4:	d103      	bne.n	80154ee <st_int8_avepool+0x13a>
 80154e6:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
 80154ea:	4293      	cmp	r3, r2
 80154ec:	d039      	beq.n	8015562 <st_int8_avepool+0x1ae>
 80154ee:	ee07 1a90 	vmov	s15, r1
 80154f2:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
 80154f6:	ee07 7a90 	vmov	s15, r7
 80154fa:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80154fe:	eec4 7a07 	vdiv.f32	s15, s8, s14
 8015502:	ee77 7ac5 	vsub.f32	s15, s15, s10
 8015506:	eeb0 7a65 	vmov.f32	s14, s11
 801550a:	eea7 7a86 	vfma.f32	s14, s15, s12
 801550e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8015512:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015516:	bfb4      	ite	lt
 8015518:	eef0 7a66 	vmovlt.f32	s15, s13
 801551c:	eef0 7a64 	vmovge.f32	s15, s9
 8015520:	ee77 7a87 	vadd.f32	s15, s15, s14
 8015524:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015528:	ee17 3a90 	vmov	r3, s15
 801552c:	f303 0307 	ssat	r3, #8, r3
 8015530:	9a01      	ldr	r2, [sp, #4]
 8015532:	7013      	strb	r3, [r2, #0]
 8015534:	4613      	mov	r3, r2
 8015536:	f108 0801 	add.w	r8, r8, #1
 801553a:	3301      	adds	r3, #1
 801553c:	45d0      	cmp	r8, sl
 801553e:	9301      	str	r3, [sp, #4]
 8015540:	d1b4      	bne.n	80154ac <st_int8_avepool+0xf8>
 8015542:	9b07      	ldr	r3, [sp, #28]
 8015544:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8015546:	3301      	adds	r3, #1
 8015548:	4293      	cmp	r3, r2
 801554a:	9307      	str	r3, [sp, #28]
 801554c:	db8b      	blt.n	8015466 <st_int8_avepool+0xb2>
 801554e:	9b06      	ldr	r3, [sp, #24]
 8015550:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8015552:	3301      	adds	r3, #1
 8015554:	429a      	cmp	r2, r3
 8015556:	9306      	str	r3, [sp, #24]
 8015558:	f73f af60 	bgt.w	801541c <st_int8_avepool+0x68>
 801555c:	b017      	add	sp, #92	@ 0x5c
 801555e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015562:	2900      	cmp	r1, #0
 8015564:	db15      	blt.n	8015592 <st_int8_avepool+0x1de>
 8015566:	eb01 0167 	add.w	r1, r1, r7, asr #1
 801556a:	fbb1 f7f7 	udiv	r7, r1, r7
 801556e:	f307 0307 	ssat	r3, #8, r7
 8015572:	9a01      	ldr	r2, [sp, #4]
 8015574:	7013      	strb	r3, [r2, #0]
 8015576:	4613      	mov	r3, r2
 8015578:	e7dd      	b.n	8015536 <st_int8_avepool+0x182>
 801557a:	eeb4 0a60 	vcmp.f32	s0, s1
 801557e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015582:	d103      	bne.n	801558c <st_int8_avepool+0x1d8>
 8015584:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
 8015588:	4293      	cmp	r3, r2
 801558a:	d009      	beq.n	80155a0 <st_int8_avepool+0x1ec>
 801558c:	eef0 7a63 	vmov.f32	s15, s7
 8015590:	e7b7      	b.n	8015502 <st_int8_avepool+0x14e>
 8015592:	eb07 73d7 	add.w	r3, r7, r7, lsr #31
 8015596:	eba1 0163 	sub.w	r1, r1, r3, asr #1
 801559a:	fb91 f7f7 	sdiv	r7, r1, r7
 801559e:	e7e6      	b.n	801556e <st_int8_avepool+0x1ba>
 80155a0:	deff      	udf	#255	@ 0xff
 80155a2:	bf00      	nop
 80155a4:	befffffc 	.word	0xbefffffc
 80155a8:	7fc00000 	.word	0x7fc00000

080155ac <st_sssa8_ch_convolve_rank1upd>:
 80155ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155b0:	b085      	sub	sp, #20
 80155b2:	f8bd 4038 	ldrh.w	r4, [sp, #56]	@ 0x38
 80155b6:	f99d b040 	ldrsb.w	fp, [sp, #64]	@ 0x40
 80155ba:	fb13 f304 	smulbb	r3, r3, r4
 80155be:	fb13 f500 	smulbb	r5, r3, r0
 80155c2:	460c      	mov	r4, r1
 80155c4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80155c6:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80155c8:	2a00      	cmp	r2, #0
 80155ca:	d073      	beq.n	80156b4 <st_sssa8_ch_convolve_rank1upd+0x108>
 80155cc:	b2ad      	uxth	r5, r5
 80155ce:	ea4f 0895 	mov.w	r8, r5, lsr #2
 80155d2:	f1a3 0904 	sub.w	r9, r3, #4
 80155d6:	f1a8 0381 	sub.w	r3, r8, #129	@ 0x81
 80155da:	f3c3 13c8 	ubfx	r3, r3, #7, #9
 80155de:	ebc3 2043 	rsb	r0, r3, r3, lsl #9
 80155e2:	f1a8 0780 	sub.w	r7, r8, #128	@ 0x80
 80155e6:	eb07 17c0 	add.w	r7, r7, r0, lsl #7
 80155ea:	0258      	lsls	r0, r3, #9
 80155ec:	3301      	adds	r3, #1
 80155ee:	025b      	lsls	r3, r3, #9
 80155f0:	f005 0503 	and.w	r5, r5, #3
 80155f4:	9301      	str	r3, [sp, #4]
 80155f6:	f500 6380 	add.w	r3, r0, #1024	@ 0x400
 80155fa:	9303      	str	r3, [sp, #12]
 80155fc:	1e6b      	subs	r3, r5, #1
 80155fe:	b29b      	uxth	r3, r3
 8015600:	9300      	str	r3, [sp, #0]
 8015602:	eb01 03c2 	add.w	r3, r1, r2, lsl #3
 8015606:	b2bf      	uxth	r7, r7
 8015608:	eb01 0a82 	add.w	sl, r1, r2, lsl #2
 801560c:	9302      	str	r3, [sp, #8]
 801560e:	f1b8 0f80 	cmp.w	r8, #128	@ 0x80
 8015612:	d954      	bls.n	80156be <st_sssa8_ch_convolve_rank1upd+0x112>
 8015614:	9b03      	ldr	r3, [sp, #12]
 8015616:	f504 7000 	add.w	r0, r4, #512	@ 0x200
 801561a:	eb04 0c03 	add.w	ip, r4, r3
 801561e:	2600      	movs	r6, #0
 8015620:	f5a0 7100 	sub.w	r1, r0, #512	@ 0x200
 8015624:	2200      	movs	r2, #0
 8015626:	f851 3b04 	ldr.w	r3, [r1], #4
 801562a:	fa2f fe83 	sxtb16	lr, r3
 801562e:	4281      	cmp	r1, r0
 8015630:	ea4f 2333 	mov.w	r3, r3, ror #8
 8015634:	fa92 f21e 	qadd16	r2, r2, lr
 8015638:	fa2f f383 	sxtb16	r3, r3
 801563c:	fa92 f213 	qadd16	r2, r2, r3
 8015640:	d1f1      	bne.n	8015626 <st_sssa8_ch_convolve_rank1upd+0x7a>
 8015642:	f501 7000 	add.w	r0, r1, #512	@ 0x200
 8015646:	b213      	sxth	r3, r2
 8015648:	eb03 4322 	add.w	r3, r3, r2, asr #16
 801564c:	4560      	cmp	r0, ip
 801564e:	441e      	add	r6, r3
 8015650:	d1e6      	bne.n	8015620 <st_sssa8_ch_convolve_rank1upd+0x74>
 8015652:	9b01      	ldr	r3, [sp, #4]
 8015654:	18e1      	adds	r1, r4, r3
 8015656:	463c      	mov	r4, r7
 8015658:	b37c      	cbz	r4, 80156ba <st_sssa8_ch_convolve_rank1upd+0x10e>
 801565a:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801565e:	2200      	movs	r2, #0
 8015660:	f851 3b04 	ldr.w	r3, [r1], #4
 8015664:	fa2f f083 	sxtb16	r0, r3
 8015668:	428c      	cmp	r4, r1
 801566a:	ea4f 2333 	mov.w	r3, r3, ror #8
 801566e:	fa92 f210 	qadd16	r2, r2, r0
 8015672:	fa2f f383 	sxtb16	r3, r3
 8015676:	fa92 f213 	qadd16	r2, r2, r3
 801567a:	d1f1      	bne.n	8015660 <st_sssa8_ch_convolve_rank1upd+0xb4>
 801567c:	b213      	sxth	r3, r2
 801567e:	eb03 4322 	add.w	r3, r3, r2, asr #16
 8015682:	441e      	add	r6, r3
 8015684:	b16d      	cbz	r5, 80156a2 <st_sssa8_ch_convolve_rank1upd+0xf6>
 8015686:	f994 3000 	ldrsb.w	r3, [r4]
 801568a:	441e      	add	r6, r3
 801568c:	9b00      	ldr	r3, [sp, #0]
 801568e:	b13b      	cbz	r3, 80156a0 <st_sssa8_ch_convolve_rank1upd+0xf4>
 8015690:	f994 3001 	ldrsb.w	r3, [r4, #1]
 8015694:	2d02      	cmp	r5, #2
 8015696:	441e      	add	r6, r3
 8015698:	bf1c      	itt	ne
 801569a:	f994 3002 	ldrsbne.w	r3, [r4, #2]
 801569e:	18f6      	addne	r6, r6, r3
 80156a0:	442c      	add	r4, r5
 80156a2:	f859 3f04 	ldr.w	r3, [r9, #4]!
 80156a6:	fb06 331b 	mls	r3, r6, fp, r3
 80156aa:	f84a 3b04 	str.w	r3, [sl], #4
 80156ae:	9b02      	ldr	r3, [sp, #8]
 80156b0:	459a      	cmp	sl, r3
 80156b2:	d1ac      	bne.n	801560e <st_sssa8_ch_convolve_rank1upd+0x62>
 80156b4:	b005      	add	sp, #20
 80156b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80156ba:	460c      	mov	r4, r1
 80156bc:	e7e2      	b.n	8015684 <st_sssa8_ch_convolve_rank1upd+0xd8>
 80156be:	4621      	mov	r1, r4
 80156c0:	2600      	movs	r6, #0
 80156c2:	4644      	mov	r4, r8
 80156c4:	e7c8      	b.n	8015658 <st_sssa8_ch_convolve_rank1upd+0xac>
 80156c6:	bf00      	nop

080156c8 <st_sssa8_fully_connected>:
 80156c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156cc:	b091      	sub	sp, #68	@ 0x44
 80156ce:	4698      	mov	r8, r3
 80156d0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80156d2:	9c1a      	ldr	r4, [sp, #104]	@ 0x68
 80156d4:	f9b3 6000 	ldrsh.w	r6, [r3]
 80156d8:	9f20      	ldr	r7, [sp, #128]	@ 0x80
 80156da:	6824      	ldr	r4, [r4, #0]
 80156dc:	9407      	str	r4, [sp, #28]
 80156de:	1e73      	subs	r3, r6, #1
 80156e0:	4689      	mov	r9, r1
 80156e2:	4619      	mov	r1, r3
 80156e4:	2914      	cmp	r1, #20
 80156e6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80156e8:	f99d 3074 	ldrsb.w	r3, [sp, #116]	@ 0x74
 80156ec:	f99d 4070 	ldrsb.w	r4, [sp, #112]	@ 0x70
 80156f0:	900c      	str	r0, [sp, #48]	@ 0x30
 80156f2:	bf9f      	itttt	ls
 80156f4:	2101      	movls	r1, #1
 80156f6:	40b3      	lslls	r3, r6
 80156f8:	40b1      	lslls	r1, r6
 80156fa:	eb03 0351 	addls.w	r3, r3, r1, lsr #1
 80156fe:	e9dd a51e 	ldrd	sl, r5, [sp, #120]	@ 0x78
 8015702:	9308      	str	r3, [sp, #32]
 8015704:	2f00      	cmp	r7, #0
 8015706:	f000 80b9 	beq.w	801587c <st_sssa8_fully_connected+0x1b4>
 801570a:	eac4 4304 	pkhbt	r3, r4, r4, lsl #16
 801570e:	9400      	str	r4, [sp, #0]
 8015710:	4cc4      	ldr	r4, [pc, #784]	@ (8015a24 <st_sssa8_fully_connected+0x35c>)
 8015712:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8015714:	9209      	str	r2, [sp, #36]	@ 0x24
 8015716:	fba4 1408 	umull	r1, r4, r4, r8
 801571a:	4639      	mov	r1, r7
 801571c:	f000 f992 	bl	8015a44 <st_int8_reordered_no_shift_zero>
 8015720:	9b07      	ldr	r3, [sp, #28]
 8015722:	9302      	str	r3, [sp, #8]
 8015724:	9b08      	ldr	r3, [sp, #32]
 8015726:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8015728:	ea4f 0b94 	mov.w	fp, r4, lsr #2
 801572c:	e9cd b300 	strd	fp, r3, [sp]
 8015730:	e9cd 6503 	strd	r6, r5, [sp, #12]
 8015734:	4653      	mov	r3, sl
 8015736:	4649      	mov	r1, r9
 8015738:	4638      	mov	r0, r7
 801573a:	f000 fb81 	bl	8015e40 <st_sssa8_dense_loop>
 801573e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8015740:	eb0b 034b 	add.w	r3, fp, fp, lsl #1
 8015744:	fb0b f402 	mul.w	r4, fp, r2
 8015748:	eba8 0343 	sub.w	r3, r8, r3, lsl #1
 801574c:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 8015750:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8015754:	b29b      	uxth	r3, r3
 8015756:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801575a:	eb05 054b 	add.w	r5, r5, fp, lsl #1
 801575e:	eb0a 09cb 	add.w	r9, sl, fp, lsl #3
 8015762:	2b00      	cmp	r3, #0
 8015764:	d066      	beq.n	8015834 <st_sssa8_fully_connected+0x16c>
 8015766:	ea4f 0a92 	mov.w	sl, r2, lsr #2
 801576a:	f002 0b03 	and.w	fp, r2, #3
 801576e:	3301      	adds	r3, #1
 8015770:	1eb2      	subs	r2, r6, #2
 8015772:	2101      	movs	r1, #1
 8015774:	fa01 f202 	lsl.w	r2, r1, r2
 8015778:	fa15 f883 	uxtah	r8, r5, r3
 801577c:	f10a 33ff 	add.w	r3, sl, #4294967295	@ 0xffffffff
 8015780:	b29b      	uxth	r3, r3
 8015782:	920d      	str	r2, [sp, #52]	@ 0x34
 8015784:	f10b 32ff 	add.w	r2, fp, #4294967295	@ 0xffffffff
 8015788:	3301      	adds	r3, #1
 801578a:	b292      	uxth	r2, r2
 801578c:	920c      	str	r2, [sp, #48]	@ 0x30
 801578e:	009a      	lsls	r2, r3, #2
 8015790:	eb07 03c3 	add.w	r3, r7, r3, lsl #3
 8015794:	9720      	str	r7, [sp, #128]	@ 0x80
 8015796:	9309      	str	r3, [sp, #36]	@ 0x24
 8015798:	1b8b      	subs	r3, r1, r6
 801579a:	930e      	str	r3, [sp, #56]	@ 0x38
 801579c:	4657      	mov	r7, sl
 801579e:	465b      	mov	r3, fp
 80157a0:	f8dd a080 	ldr.w	sl, [sp, #128]	@ 0x80
 80157a4:	920a      	str	r2, [sp, #40]	@ 0x28
 80157a6:	46b3      	mov	fp, r6
 80157a8:	f105 0e01 	add.w	lr, r5, #1
 80157ac:	461e      	mov	r6, r3
 80157ae:	f859 3b04 	ldr.w	r3, [r9], #4
 80157b2:	2f00      	cmp	r7, #0
 80157b4:	d05f      	beq.n	8015876 <st_sssa8_fully_connected+0x1ae>
 80157b6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80157b8:	4650      	mov	r0, sl
 80157ba:	eb04 0c02 	add.w	ip, r4, r2
 80157be:	f854 2b04 	ldr.w	r2, [r4], #4
 80157c2:	fa2f f192 	sxtb16	r1, r2, ror #8
 80157c6:	6805      	ldr	r5, [r0, #0]
 80157c8:	fa2f f282 	sxtb16	r2, r2
 80157cc:	fb25 3202 	smlad	r2, r5, r2, r3
 80157d0:	6843      	ldr	r3, [r0, #4]
 80157d2:	3008      	adds	r0, #8
 80157d4:	fb23 2301 	smlad	r3, r3, r1, r2
 80157d8:	4564      	cmp	r4, ip
 80157da:	d1f0      	bne.n	80157be <st_sssa8_fully_connected+0xf6>
 80157dc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80157de:	2e00      	cmp	r6, #0
 80157e0:	d03a      	beq.n	8015858 <st_sssa8_fully_connected+0x190>
 80157e2:	f99c 1000 	ldrsb.w	r1, [ip]
 80157e6:	8810      	ldrh	r0, [r2, #0]
 80157e8:	fb10 3301 	smlabb	r3, r0, r1, r3
 80157ec:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80157ee:	b159      	cbz	r1, 8015808 <st_sssa8_fully_connected+0x140>
 80157f0:	f99c 1001 	ldrsb.w	r1, [ip, #1]
 80157f4:	8850      	ldrh	r0, [r2, #2]
 80157f6:	2e02      	cmp	r6, #2
 80157f8:	fb10 3301 	smlabb	r3, r0, r1, r3
 80157fc:	d004      	beq.n	8015808 <st_sssa8_fully_connected+0x140>
 80157fe:	8891      	ldrh	r1, [r2, #4]
 8015800:	f99c 2002 	ldrsb.w	r2, [ip, #2]
 8015804:	fb11 3302 	smlabb	r3, r1, r2, r3
 8015808:	eb0c 0406 	add.w	r4, ip, r6
 801580c:	f1bb 0f15 	cmp.w	fp, #21
 8015810:	dd14      	ble.n	801583c <st_sssa8_fully_connected+0x174>
 8015812:	9a07      	ldr	r2, [sp, #28]
 8015814:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8015816:	fb53 1302 	smmla	r3, r3, r2, r1
 801581a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801581c:	4113      	asrs	r3, r2
 801581e:	9a08      	ldr	r2, [sp, #32]
 8015820:	4413      	add	r3, r2
 8015822:	f303 0307 	ssat	r3, #8, r3
 8015826:	b25b      	sxtb	r3, r3
 8015828:	f80e 3c01 	strb.w	r3, [lr, #-1]
 801582c:	f10e 0e01 	add.w	lr, lr, #1
 8015830:	45f0      	cmp	r8, lr
 8015832:	d1bc      	bne.n	80157ae <st_sssa8_fully_connected+0xe6>
 8015834:	2000      	movs	r0, #0
 8015836:	b011      	add	sp, #68	@ 0x44
 8015838:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801583c:	f1bb 0f00 	cmp.w	fp, #0
 8015840:	dd0c      	ble.n	801585c <st_sssa8_fully_connected+0x194>
 8015842:	e9dd 2107 	ldrd	r2, r1, [sp, #28]
 8015846:	005b      	lsls	r3, r3, #1
 8015848:	fb53 1302 	smmla	r3, r3, r2, r1
 801584c:	fa43 f30b 	asr.w	r3, r3, fp
 8015850:	f303 0307 	ssat	r3, #8, r3
 8015854:	b25b      	sxtb	r3, r3
 8015856:	e7e7      	b.n	8015828 <st_sssa8_fully_connected+0x160>
 8015858:	4664      	mov	r4, ip
 801585a:	e7d7      	b.n	801580c <st_sssa8_fully_connected+0x144>
 801585c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801585e:	4093      	lsls	r3, r2
 8015860:	f303 031f 	ssat	r3, #32, r3
 8015864:	9a07      	ldr	r2, [sp, #28]
 8015866:	fb53 f312 	smmulr	r3, r3, r2
 801586a:	9a08      	ldr	r2, [sp, #32]
 801586c:	4413      	add	r3, r2
 801586e:	f303 0307 	ssat	r3, #8, r3
 8015872:	b25b      	sxtb	r3, r3
 8015874:	e7d8      	b.n	8015828 <st_sssa8_fully_connected+0x160>
 8015876:	46a4      	mov	ip, r4
 8015878:	4652      	mov	r2, sl
 801587a:	e7b0      	b.n	80157de <st_sssa8_fully_connected+0x116>
 801587c:	9b07      	ldr	r3, [sp, #28]
 801587e:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8015880:	9209      	str	r2, [sp, #36]	@ 0x24
 8015882:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8015886:	9b08      	ldr	r3, [sp, #32]
 8015888:	9301      	str	r3, [sp, #4]
 801588a:	4b66      	ldr	r3, [pc, #408]	@ (8015a24 <st_sssa8_fully_connected+0x35c>)
 801588c:	fba3 3b08 	umull	r3, fp, r3, r8
 8015890:	ea4f 079b 	mov.w	r7, fp, lsr #2
 8015894:	9700      	str	r7, [sp, #0]
 8015896:	4653      	mov	r3, sl
 8015898:	4649      	mov	r1, r9
 801589a:	e9cd 6504 	strd	r6, r5, [sp, #16]
 801589e:	f000 fca7 	bl	80161f0 <st_sssa8_dense_memopt_loop>
 80158a2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80158a4:	eb07 0b47 	add.w	fp, r7, r7, lsl #1
 80158a8:	fb07 f102 	mul.w	r1, r7, r2
 80158ac:	eba8 084b 	sub.w	r8, r8, fp, lsl #1
 80158b0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80158b4:	eb0a 03c7 	add.w	r3, sl, r7, lsl #3
 80158b8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80158bc:	fa1f fb88 	uxth.w	fp, r8
 80158c0:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 80158c4:	9309      	str	r3, [sp, #36]	@ 0x24
 80158c6:	007f      	lsls	r7, r7, #1
 80158c8:	f1bb 0f00 	cmp.w	fp, #0
 80158cc:	d0b2      	beq.n	8015834 <st_sssa8_fully_connected+0x16c>
 80158ce:	f1a2 0310 	sub.w	r3, r2, #16
 80158d2:	f023 030f 	bic.w	r3, r3, #15
 80158d6:	f107 0801 	add.w	r8, r7, #1
 80158da:	2001      	movs	r0, #1
 80158dc:	44a8      	add	r8, r5
 80158de:	f103 0510 	add.w	r5, r3, #16
 80158e2:	1eb3      	subs	r3, r6, #2
 80158e4:	fa00 f303 	lsl.w	r3, r0, r3
 80158e8:	930e      	str	r3, [sp, #56]	@ 0x38
 80158ea:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80158ec:	950a      	str	r5, [sp, #40]	@ 0x28
 80158ee:	442b      	add	r3, r5
 80158f0:	930d      	str	r3, [sp, #52]	@ 0x34
 80158f2:	1b83      	subs	r3, r0, r6
 80158f4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80158f6:	930f      	str	r3, [sp, #60]	@ 0x3c
 80158f8:	2a0f      	cmp	r2, #15
 80158fa:	f850 3b04 	ldr.w	r3, [r0], #4
 80158fe:	9009      	str	r0, [sp, #36]	@ 0x24
 8015900:	fa0f fe84 	sxth.w	lr, r4
 8015904:	f1c4 0400 	rsb	r4, r4, #0
 8015908:	eac4 4404 	pkhbt	r4, r4, r4, lsl #16
 801590c:	dd76      	ble.n	80159fc <st_sssa8_fully_connected+0x334>
 801590e:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8015910:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8015912:	eb01 0900 	add.w	r9, r1, r0
 8015916:	f8d1 a000 	ldr.w	sl, [r1]
 801591a:	6828      	ldr	r0, [r5, #0]
 801591c:	fa2f fc9a 	sxtb16	ip, sl, ror #8
 8015920:	ea4f 2730 	mov.w	r7, r0, ror #8
 8015924:	fa2f fa8a 	sxtb16	sl, sl
 8015928:	fa24 f080 	sxtab16	r0, r4, r0
 801592c:	fa24 f787 	sxtab16	r7, r4, r7
 8015930:	fb20 300a 	smlad	r0, r0, sl, r3
 8015934:	fb27 000c 	smlad	r0, r7, ip, r0
 8015938:	f8d1 a004 	ldr.w	sl, [r1, #4]
 801593c:	686b      	ldr	r3, [r5, #4]
 801593e:	fa2f fc9a 	sxtb16	ip, sl, ror #8
 8015942:	ea4f 2733 	mov.w	r7, r3, ror #8
 8015946:	fa2f fa8a 	sxtb16	sl, sl
 801594a:	fa24 f383 	sxtab16	r3, r4, r3
 801594e:	fa24 f787 	sxtab16	r7, r4, r7
 8015952:	fb23 030a 	smlad	r3, r3, sl, r0
 8015956:	fb27 330c 	smlad	r3, r7, ip, r3
 801595a:	f8d1 a008 	ldr.w	sl, [r1, #8]
 801595e:	68a8      	ldr	r0, [r5, #8]
 8015960:	fa2f fc9a 	sxtb16	ip, sl, ror #8
 8015964:	ea4f 2730 	mov.w	r7, r0, ror #8
 8015968:	fa2f fa8a 	sxtb16	sl, sl
 801596c:	fa24 f080 	sxtab16	r0, r4, r0
 8015970:	fa24 f787 	sxtab16	r7, r4, r7
 8015974:	fb20 300a 	smlad	r0, r0, sl, r3
 8015978:	fb27 000c 	smlad	r0, r7, ip, r0
 801597c:	f8d1 a00c 	ldr.w	sl, [r1, #12]
 8015980:	68eb      	ldr	r3, [r5, #12]
 8015982:	3110      	adds	r1, #16
 8015984:	3510      	adds	r5, #16
 8015986:	fa2f fc9a 	sxtb16	ip, sl, ror #8
 801598a:	ea4f 2733 	mov.w	r7, r3, ror #8
 801598e:	fa2f fa8a 	sxtb16	sl, sl
 8015992:	fa24 f383 	sxtab16	r3, r4, r3
 8015996:	fa24 f787 	sxtab16	r7, r4, r7
 801599a:	fb23 030a 	smlad	r3, r3, sl, r0
 801599e:	fb27 330c 	smlad	r3, r7, ip, r3
 80159a2:	4549      	cmp	r1, r9
 80159a4:	d1b7      	bne.n	8015916 <st_sssa8_fully_connected+0x24e>
 80159a6:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80159a8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80159aa:	428a      	cmp	r2, r1
 80159ac:	dd2b      	ble.n	8015a06 <st_sssa8_fully_connected+0x33e>
 80159ae:	1a51      	subs	r1, r2, r1
 80159b0:	4449      	add	r1, r9
 80159b2:	f919 7b01 	ldrsb.w	r7, [r9], #1
 80159b6:	f915 0b01 	ldrsb.w	r0, [r5], #1
 80159ba:	4589      	cmp	r9, r1
 80159bc:	eba0 000e 	sub.w	r0, r0, lr
 80159c0:	fb10 3307 	smlabb	r3, r0, r7, r3
 80159c4:	d1f5      	bne.n	80159b2 <st_sssa8_fully_connected+0x2ea>
 80159c6:	2e15      	cmp	r6, #21
 80159c8:	dd20      	ble.n	8015a0c <st_sssa8_fully_connected+0x344>
 80159ca:	9807      	ldr	r0, [sp, #28]
 80159cc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80159ce:	fb53 5300 	smmla	r3, r3, r0, r5
 80159d2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80159d4:	4103      	asrs	r3, r0
 80159d6:	9808      	ldr	r0, [sp, #32]
 80159d8:	4403      	add	r3, r0
 80159da:	f303 0307 	ssat	r3, #8, r3
 80159de:	b25b      	sxtb	r3, r3
 80159e0:	f1bb 0b01 	subs.w	fp, fp, #1
 80159e4:	f808 3c01 	strb.w	r3, [r8, #-1]
 80159e8:	f108 0801 	add.w	r8, r8, #1
 80159ec:	f43f af22 	beq.w	8015834 <st_sssa8_fully_connected+0x16c>
 80159f0:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80159f2:	2a0f      	cmp	r2, #15
 80159f4:	f850 3b04 	ldr.w	r3, [r0], #4
 80159f8:	9009      	str	r0, [sp, #36]	@ 0x24
 80159fa:	dc88      	bgt.n	801590e <st_sssa8_fully_connected+0x246>
 80159fc:	4689      	mov	r9, r1
 80159fe:	2100      	movs	r1, #0
 8015a00:	428a      	cmp	r2, r1
 8015a02:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8015a04:	dcd3      	bgt.n	80159ae <st_sssa8_fully_connected+0x2e6>
 8015a06:	2e15      	cmp	r6, #21
 8015a08:	4649      	mov	r1, r9
 8015a0a:	dcde      	bgt.n	80159ca <st_sssa8_fully_connected+0x302>
 8015a0c:	2e00      	cmp	r6, #0
 8015a0e:	dd0b      	ble.n	8015a28 <st_sssa8_fully_connected+0x360>
 8015a10:	e9dd 0507 	ldrd	r0, r5, [sp, #28]
 8015a14:	005b      	lsls	r3, r3, #1
 8015a16:	fb53 5300 	smmla	r3, r3, r0, r5
 8015a1a:	4133      	asrs	r3, r6
 8015a1c:	f303 0307 	ssat	r3, #8, r3
 8015a20:	b25b      	sxtb	r3, r3
 8015a22:	e7dd      	b.n	80159e0 <st_sssa8_fully_connected+0x318>
 8015a24:	aaaaaaab 	.word	0xaaaaaaab
 8015a28:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8015a2a:	4083      	lsls	r3, r0
 8015a2c:	f303 031f 	ssat	r3, #32, r3
 8015a30:	9807      	ldr	r0, [sp, #28]
 8015a32:	fb53 f310 	smmulr	r3, r3, r0
 8015a36:	9808      	ldr	r0, [sp, #32]
 8015a38:	4403      	add	r3, r0
 8015a3a:	f303 0307 	ssat	r3, #8, r3
 8015a3e:	b25b      	sxtb	r3, r3
 8015a40:	e7ce      	b.n	80159e0 <st_sssa8_fully_connected+0x318>
 8015a42:	bf00      	nop

08015a44 <st_int8_reordered_no_shift_zero>:
 8015a44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015a46:	0897      	lsrs	r7, r2, #2
 8015a48:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 8015a4c:	d02c      	beq.n	8015aa8 <st_int8_reordered_no_shift_zero+0x64>
 8015a4e:	eb00 0587 	add.w	r5, r0, r7, lsl #2
 8015a52:	468e      	mov	lr, r1
 8015a54:	f850 cb04 	ldr.w	ip, [r0], #4
 8015a58:	fa2f f49c 	sxtb16	r4, ip, ror #8
 8015a5c:	fad4 f403 	ssub16	r4, r4, r3
 8015a60:	fa2f fc8c 	sxtb16	ip, ip
 8015a64:	fadc fc03 	ssub16	ip, ip, r3
 8015a68:	42a8      	cmp	r0, r5
 8015a6a:	f8ce c000 	str.w	ip, [lr]
 8015a6e:	f8ce 4004 	str.w	r4, [lr, #4]
 8015a72:	f10e 0e08 	add.w	lr, lr, #8
 8015a76:	d1ed      	bne.n	8015a54 <st_int8_reordered_no_shift_zero+0x10>
 8015a78:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
 8015a7c:	f012 0203 	ands.w	r2, r2, #3
 8015a80:	d011      	beq.n	8015aa6 <st_int8_reordered_no_shift_zero+0x62>
 8015a82:	f995 0000 	ldrsb.w	r0, [r5]
 8015a86:	b273      	sxtb	r3, r6
 8015a88:	1ac0      	subs	r0, r0, r3
 8015a8a:	3a01      	subs	r2, #1
 8015a8c:	8008      	strh	r0, [r1, #0]
 8015a8e:	d00a      	beq.n	8015aa6 <st_int8_reordered_no_shift_zero+0x62>
 8015a90:	f995 0001 	ldrsb.w	r0, [r5, #1]
 8015a94:	2a01      	cmp	r2, #1
 8015a96:	eba0 0003 	sub.w	r0, r0, r3
 8015a9a:	8048      	strh	r0, [r1, #2]
 8015a9c:	d003      	beq.n	8015aa6 <st_int8_reordered_no_shift_zero+0x62>
 8015a9e:	f995 2002 	ldrsb.w	r2, [r5, #2]
 8015aa2:	1ad3      	subs	r3, r2, r3
 8015aa4:	808b      	strh	r3, [r1, #4]
 8015aa6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015aa8:	4605      	mov	r5, r0
 8015aaa:	e7e7      	b.n	8015a7c <st_int8_reordered_no_shift_zero+0x38>

08015aac <st_sssa8_ch_nn_mat_mult_kernel_single_opt>:
 8015aac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ab0:	b093      	sub	sp, #76	@ 0x4c
 8015ab2:	f8bd 4074 	ldrh.w	r4, [sp, #116]	@ 0x74
 8015ab6:	920a      	str	r2, [sp, #40]	@ 0x28
 8015ab8:	930f      	str	r3, [sp, #60]	@ 0x3c
 8015aba:	f8bd 2078 	ldrh.w	r2, [sp, #120]	@ 0x78
 8015abe:	f89d 3088 	ldrb.w	r3, [sp, #136]	@ 0x88
 8015ac2:	920d      	str	r2, [sp, #52]	@ 0x34
 8015ac4:	0862      	lsrs	r2, r4, #1
 8015ac6:	940c      	str	r4, [sp, #48]	@ 0x30
 8015ac8:	9104      	str	r1, [sp, #16]
 8015aca:	930e      	str	r3, [sp, #56]	@ 0x38
 8015acc:	920b      	str	r2, [sp, #44]	@ 0x2c
 8015ace:	2b00      	cmp	r3, #0
 8015ad0:	f000 8182 	beq.w	8015dd8 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x32c>
 8015ad4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8015ad6:	b299      	uxth	r1, r3
 8015ad8:	4613      	mov	r3, r2
 8015ada:	2b00      	cmp	r3, #0
 8015adc:	f000 80d6 	beq.w	8015c8c <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x1e0>
 8015ae0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015ae2:	0897      	lsrs	r7, r2, #2
 8015ae4:	f002 0203 	and.w	r2, r2, #3
 8015ae8:	9201      	str	r2, [sp, #4]
 8015aea:	1c4a      	adds	r2, r1, #1
 8015aec:	0049      	lsls	r1, r1, #1
 8015aee:	9105      	str	r1, [sp, #20]
 8015af0:	9923      	ldr	r1, [sp, #140]	@ 0x8c
 8015af2:	9703      	str	r7, [sp, #12]
 8015af4:	4411      	add	r1, r2
 8015af6:	9102      	str	r1, [sp, #8]
 8015af8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8015afa:	3b01      	subs	r3, #1
 8015afc:	f101 0210 	add.w	r2, r1, #16
 8015b00:	b29b      	uxth	r3, r3
 8015b02:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8015b06:	9306      	str	r3, [sp, #24]
 8015b08:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8015b0a:	9a01      	ldr	r2, [sp, #4]
 8015b0c:	f103 0e04 	add.w	lr, r3, #4
 8015b10:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8015b12:	f103 0508 	add.w	r5, r3, #8
 8015b16:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8015b18:	f103 0408 	add.w	r4, r3, #8
 8015b1c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8015b1e:	1c5e      	adds	r6, r3, #1
 8015b20:	013b      	lsls	r3, r7, #4
 8015b22:	9307      	str	r3, [sp, #28]
 8015b24:	9b04      	ldr	r3, [sp, #16]
 8015b26:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8015b2a:	9308      	str	r3, [sp, #32]
 8015b2c:	0093      	lsls	r3, r2, #2
 8015b2e:	f101 0c08 	add.w	ip, r1, #8
 8015b32:	9309      	str	r3, [sp, #36]	@ 0x24
 8015b34:	f85c 3c08 	ldr.w	r3, [ip, #-8]
 8015b38:	9311      	str	r3, [sp, #68]	@ 0x44
 8015b3a:	f85c 2c04 	ldr.w	r2, [ip, #-4]
 8015b3e:	9903      	ldr	r1, [sp, #12]
 8015b40:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015b42:	9211      	str	r2, [sp, #68]	@ 0x44
 8015b44:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015b46:	2900      	cmp	r1, #0
 8015b48:	f000 8144 	beq.w	8015dd4 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x328>
 8015b4c:	9f04      	ldr	r7, [sp, #16]
 8015b4e:	4688      	mov	r8, r1
 8015b50:	4601      	mov	r1, r0
 8015b52:	f8d7 9000 	ldr.w	r9, [r7]
 8015b56:	f8d1 a000 	ldr.w	sl, [r1]
 8015b5a:	fb2a 3a09 	smlad	sl, sl, r9, r3
 8015b5e:	684b      	ldr	r3, [r1, #4]
 8015b60:	fb23 2909 	smlad	r9, r3, r9, r2
 8015b64:	f8d7 b004 	ldr.w	fp, [r7, #4]
 8015b68:	688b      	ldr	r3, [r1, #8]
 8015b6a:	68ca      	ldr	r2, [r1, #12]
 8015b6c:	3708      	adds	r7, #8
 8015b6e:	3110      	adds	r1, #16
 8015b70:	fb23 a30b 	smlad	r3, r3, fp, sl
 8015b74:	fb22 920b 	smlad	r2, r2, fp, r9
 8015b78:	f1b8 0801 	subs.w	r8, r8, #1
 8015b7c:	d1e9      	bne.n	8015b52 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0xa6>
 8015b7e:	9907      	ldr	r1, [sp, #28]
 8015b80:	4408      	add	r0, r1
 8015b82:	9908      	ldr	r1, [sp, #32]
 8015b84:	9f01      	ldr	r7, [sp, #4]
 8015b86:	b31f      	cbz	r7, 8015bd0 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x124>
 8015b88:	f9b1 7000 	ldrsh.w	r7, [r1]
 8015b8c:	f8b0 8000 	ldrh.w	r8, [r0]
 8015b90:	fb17 3308 	smlabb	r3, r7, r8, r3
 8015b94:	f8b0 8002 	ldrh.w	r8, [r0, #2]
 8015b98:	fb18 2207 	smlabb	r2, r8, r7, r2
 8015b9c:	9f01      	ldr	r7, [sp, #4]
 8015b9e:	2f01      	cmp	r7, #1
 8015ba0:	d014      	beq.n	8015bcc <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x120>
 8015ba2:	f9b1 7002 	ldrsh.w	r7, [r1, #2]
 8015ba6:	f8b0 8004 	ldrh.w	r8, [r0, #4]
 8015baa:	fb17 3308 	smlabb	r3, r7, r8, r3
 8015bae:	f8b0 8006 	ldrh.w	r8, [r0, #6]
 8015bb2:	fb18 2207 	smlabb	r2, r8, r7, r2
 8015bb6:	9f01      	ldr	r7, [sp, #4]
 8015bb8:	2f02      	cmp	r7, #2
 8015bba:	d007      	beq.n	8015bcc <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x120>
 8015bbc:	f9b1 1004 	ldrsh.w	r1, [r1, #4]
 8015bc0:	8907      	ldrh	r7, [r0, #8]
 8015bc2:	fb17 3301 	smlabb	r3, r7, r1, r3
 8015bc6:	8947      	ldrh	r7, [r0, #10]
 8015bc8:	fb11 2207 	smlabb	r2, r1, r7, r2
 8015bcc:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8015bce:	4408      	add	r0, r1
 8015bd0:	f93e 8c04 	ldrsh.w	r8, [lr, #-4]
 8015bd4:	f1b8 0f15 	cmp.w	r8, #21
 8015bd8:	f340 80af 	ble.w	8015d3a <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x28e>
 8015bdc:	f1a8 0702 	sub.w	r7, r8, #2
 8015be0:	2101      	movs	r1, #1
 8015be2:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 8015be6:	fa01 f707 	lsl.w	r7, r1, r7
 8015bea:	f855 1c08 	ldr.w	r1, [r5, #-8]
 8015bee:	fb53 7101 	smmla	r1, r3, r1, r7
 8015bf2:	fa41 f308 	asr.w	r3, r1, r8
 8015bf6:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8015bfa:	1f2f      	subs	r7, r5, #4
 8015bfc:	440b      	add	r3, r1
 8015bfe:	f1a4 0804 	sub.w	r8, r4, #4
 8015c02:	f1ae 0102 	sub.w	r1, lr, #2
 8015c06:	f303 0307 	ssat	r3, #8, r3
 8015c0a:	b25b      	sxtb	r3, r3
 8015c0c:	f806 3c01 	strb.w	r3, [r6, #-1]
 8015c10:	f9b1 1000 	ldrsh.w	r1, [r1]
 8015c14:	2915      	cmp	r1, #21
 8015c16:	f340 80ab 	ble.w	8015d70 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x2c4>
 8015c1a:	683b      	ldr	r3, [r7, #0]
 8015c1c:	f8d8 8000 	ldr.w	r8, [r8]
 8015c20:	1e8f      	subs	r7, r1, #2
 8015c22:	f04f 0901 	mov.w	r9, #1
 8015c26:	3901      	subs	r1, #1
 8015c28:	fa09 f707 	lsl.w	r7, r9, r7
 8015c2c:	fb52 7303 	smmla	r3, r2, r3, r7
 8015c30:	410b      	asrs	r3, r1
 8015c32:	4443      	add	r3, r8
 8015c34:	f303 0307 	ssat	r3, #8, r3
 8015c38:	b25b      	sxtb	r3, r3
 8015c3a:	9a02      	ldr	r2, [sp, #8]
 8015c3c:	f802 3c01 	strb.w	r3, [r2, #-1]
 8015c40:	9b05      	ldr	r3, [sp, #20]
 8015c42:	441a      	add	r2, r3
 8015c44:	441e      	add	r6, r3
 8015c46:	9b06      	ldr	r3, [sp, #24]
 8015c48:	9202      	str	r2, [sp, #8]
 8015c4a:	f10c 0c08 	add.w	ip, ip, #8
 8015c4e:	459c      	cmp	ip, r3
 8015c50:	f10e 0e04 	add.w	lr, lr, #4
 8015c54:	f105 0508 	add.w	r5, r5, #8
 8015c58:	f104 0408 	add.w	r4, r4, #8
 8015c5c:	f47f af6a 	bne.w	8015b34 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x88>
 8015c60:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8015c62:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8015c64:	9905      	ldr	r1, [sp, #20]
 8015c66:	fb03 2201 	mla	r2, r3, r1, r2
 8015c6a:	9223      	str	r2, [sp, #140]	@ 0x8c
 8015c6c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8015c6e:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 8015c72:	920a      	str	r2, [sp, #40]	@ 0x28
 8015c74:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8015c76:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8015c7a:	921f      	str	r2, [sp, #124]	@ 0x7c
 8015c7c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8015c7e:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 8015c82:	9220      	str	r2, [sp, #128]	@ 0x80
 8015c84:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8015c86:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8015c8a:	9321      	str	r3, [sp, #132]	@ 0x84
 8015c8c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015c8e:	07db      	lsls	r3, r3, #31
 8015c90:	d545      	bpl.n	8015d1e <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x272>
 8015c92:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015c94:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015c96:	0896      	lsrs	r6, r2, #2
 8015c98:	681b      	ldr	r3, [r3, #0]
 8015c9a:	f000 80cc 	beq.w	8015e36 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x38a>
 8015c9e:	9904      	ldr	r1, [sp, #16]
 8015ca0:	00f7      	lsls	r7, r6, #3
 8015ca2:	eb00 06c6 	add.w	r6, r0, r6, lsl #3
 8015ca6:	6804      	ldr	r4, [r0, #0]
 8015ca8:	6842      	ldr	r2, [r0, #4]
 8015caa:	680d      	ldr	r5, [r1, #0]
 8015cac:	3008      	adds	r0, #8
 8015cae:	fb24 3305 	smlad	r3, r4, r5, r3
 8015cb2:	684c      	ldr	r4, [r1, #4]
 8015cb4:	3108      	adds	r1, #8
 8015cb6:	fb22 3304 	smlad	r3, r2, r4, r3
 8015cba:	42b0      	cmp	r0, r6
 8015cbc:	d1f3      	bne.n	8015ca6 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x1fa>
 8015cbe:	9a04      	ldr	r2, [sp, #16]
 8015cc0:	443a      	add	r2, r7
 8015cc2:	9204      	str	r2, [sp, #16]
 8015cc4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015cc6:	f012 0203 	ands.w	r2, r2, #3
 8015cca:	d011      	beq.n	8015cf0 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x244>
 8015ccc:	9c04      	ldr	r4, [sp, #16]
 8015cce:	8831      	ldrh	r1, [r6, #0]
 8015cd0:	8820      	ldrh	r0, [r4, #0]
 8015cd2:	3a01      	subs	r2, #1
 8015cd4:	b292      	uxth	r2, r2
 8015cd6:	fb10 3301 	smlabb	r3, r0, r1, r3
 8015cda:	b14a      	cbz	r2, 8015cf0 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x244>
 8015cdc:	8860      	ldrh	r0, [r4, #2]
 8015cde:	8871      	ldrh	r1, [r6, #2]
 8015ce0:	2a01      	cmp	r2, #1
 8015ce2:	fb10 3301 	smlabb	r3, r0, r1, r3
 8015ce6:	d003      	beq.n	8015cf0 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x244>
 8015ce8:	88b1      	ldrh	r1, [r6, #4]
 8015cea:	88a2      	ldrh	r2, [r4, #4]
 8015cec:	fb11 3302 	smlabb	r3, r1, r2, r3
 8015cf0:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8015cf2:	f9b2 2000 	ldrsh.w	r2, [r2]
 8015cf6:	2a15      	cmp	r2, #21
 8015cf8:	dd79      	ble.n	8015dee <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x342>
 8015cfa:	9921      	ldr	r1, [sp, #132]	@ 0x84
 8015cfc:	680c      	ldr	r4, [r1, #0]
 8015cfe:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8015d00:	1e95      	subs	r5, r2, #2
 8015d02:	2001      	movs	r0, #1
 8015d04:	3a01      	subs	r2, #1
 8015d06:	6809      	ldr	r1, [r1, #0]
 8015d08:	40a8      	lsls	r0, r5
 8015d0a:	fb53 0301 	smmla	r3, r3, r1, r0
 8015d0e:	4113      	asrs	r3, r2
 8015d10:	4423      	add	r3, r4
 8015d12:	f303 0307 	ssat	r3, #8, r3
 8015d16:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8015d18:	f802 3b01 	strb.w	r3, [r2], #1
 8015d1c:	9223      	str	r2, [sp, #140]	@ 0x8c
 8015d1e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015d20:	2b00      	cmp	r3, #0
 8015d22:	d05c      	beq.n	8015dde <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x332>
 8015d24:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8015d26:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015d28:	fb02 f303 	mul.w	r3, r2, r3
 8015d2c:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8015d2e:	f1c3 0301 	rsb	r3, r3, #1
 8015d32:	18d0      	adds	r0, r2, r3
 8015d34:	b013      	add	sp, #76	@ 0x4c
 8015d36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d3a:	f1b8 0f00 	cmp.w	r8, #0
 8015d3e:	dd24      	ble.n	8015d8a <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x2de>
 8015d40:	f855 1c08 	ldr.w	r1, [r5, #-8]
 8015d44:	f854 7c08 	ldr.w	r7, [r4, #-8]
 8015d48:	005b      	lsls	r3, r3, #1
 8015d4a:	fb53 7301 	smmla	r3, r3, r1, r7
 8015d4e:	1f2f      	subs	r7, r5, #4
 8015d50:	fa43 f308 	asr.w	r3, r3, r8
 8015d54:	f1ae 0102 	sub.w	r1, lr, #2
 8015d58:	f1a4 0804 	sub.w	r8, r4, #4
 8015d5c:	f303 0307 	ssat	r3, #8, r3
 8015d60:	b25b      	sxtb	r3, r3
 8015d62:	f806 3c01 	strb.w	r3, [r6, #-1]
 8015d66:	f9b1 1000 	ldrsh.w	r1, [r1]
 8015d6a:	2915      	cmp	r1, #21
 8015d6c:	f73f af55 	bgt.w	8015c1a <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x16e>
 8015d70:	2900      	cmp	r1, #0
 8015d72:	dd20      	ble.n	8015db6 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x30a>
 8015d74:	683b      	ldr	r3, [r7, #0]
 8015d76:	f8d8 7000 	ldr.w	r7, [r8]
 8015d7a:	0052      	lsls	r2, r2, #1
 8015d7c:	fb52 7203 	smmla	r2, r2, r3, r7
 8015d80:	410a      	asrs	r2, r1
 8015d82:	f302 0307 	ssat	r3, #8, r2
 8015d86:	b25b      	sxtb	r3, r3
 8015d88:	e757      	b.n	8015c3a <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x18e>
 8015d8a:	f1c8 0801 	rsb	r8, r8, #1
 8015d8e:	fa03 f808 	lsl.w	r8, r3, r8
 8015d92:	f1ae 0102 	sub.w	r1, lr, #2
 8015d96:	f308 081f 	ssat	r8, #32, r8
 8015d9a:	f855 3c08 	ldr.w	r3, [r5, #-8]
 8015d9e:	1f2f      	subs	r7, r5, #4
 8015da0:	fb58 f813 	smmulr	r8, r8, r3
 8015da4:	f854 3c08 	ldr.w	r3, [r4, #-8]
 8015da8:	4443      	add	r3, r8
 8015daa:	f1a4 0804 	sub.w	r8, r4, #4
 8015dae:	f303 0307 	ssat	r3, #8, r3
 8015db2:	b25b      	sxtb	r3, r3
 8015db4:	e72a      	b.n	8015c0c <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x160>
 8015db6:	f1c1 0101 	rsb	r1, r1, #1
 8015dba:	408a      	lsls	r2, r1
 8015dbc:	f302 021f 	ssat	r2, #32, r2
 8015dc0:	683b      	ldr	r3, [r7, #0]
 8015dc2:	fb52 f313 	smmulr	r3, r2, r3
 8015dc6:	f8d8 2000 	ldr.w	r2, [r8]
 8015dca:	4413      	add	r3, r2
 8015dcc:	f303 0307 	ssat	r3, #8, r3
 8015dd0:	b25b      	sxtb	r3, r3
 8015dd2:	e732      	b.n	8015c3a <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x18e>
 8015dd4:	9904      	ldr	r1, [sp, #16]
 8015dd6:	e6d5      	b.n	8015b84 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0xd8>
 8015dd8:	2101      	movs	r1, #1
 8015dda:	4613      	mov	r3, r2
 8015ddc:	e67d      	b.n	8015ada <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x2e>
 8015dde:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8015de0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8015de2:	1a9b      	subs	r3, r3, r2
 8015de4:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8015de6:	18d0      	adds	r0, r2, r3
 8015de8:	b013      	add	sp, #76	@ 0x4c
 8015dea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015dee:	2a00      	cmp	r2, #0
 8015df0:	dd0e      	ble.n	8015e10 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x364>
 8015df2:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8015df4:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8015df6:	6809      	ldr	r1, [r1, #0]
 8015df8:	6800      	ldr	r0, [r0, #0]
 8015dfa:	005b      	lsls	r3, r3, #1
 8015dfc:	fb53 0301 	smmla	r3, r3, r1, r0
 8015e00:	4113      	asrs	r3, r2
 8015e02:	f303 0307 	ssat	r3, #8, r3
 8015e06:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8015e08:	f802 3b01 	strb.w	r3, [r2], #1
 8015e0c:	9223      	str	r2, [sp, #140]	@ 0x8c
 8015e0e:	e786      	b.n	8015d1e <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x272>
 8015e10:	f1c2 0201 	rsb	r2, r2, #1
 8015e14:	4093      	lsls	r3, r2
 8015e16:	f303 031f 	ssat	r3, #32, r3
 8015e1a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8015e1c:	6812      	ldr	r2, [r2, #0]
 8015e1e:	fb53 f312 	smmulr	r3, r3, r2
 8015e22:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8015e24:	6812      	ldr	r2, [r2, #0]
 8015e26:	4413      	add	r3, r2
 8015e28:	f303 0307 	ssat	r3, #8, r3
 8015e2c:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8015e2e:	f802 3b01 	strb.w	r3, [r2], #1
 8015e32:	9223      	str	r2, [sp, #140]	@ 0x8c
 8015e34:	e773      	b.n	8015d1e <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x272>
 8015e36:	4606      	mov	r6, r0
 8015e38:	e744      	b.n	8015cc4 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x218>
 8015e3a:	bf00      	nop
 8015e3c:	0000      	movs	r0, r0
	...

08015e40 <st_sssa8_dense_loop>:
 8015e40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e44:	b086      	sub	sp, #24
 8015e46:	bf00      	nop
 8015e48:	bf00      	nop
 8015e4a:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
 8015e4e:	f1bb 0f00 	cmp.w	fp, #0
 8015e52:	bfcc      	ite	gt
 8015e54:	f04f 0c00 	movgt.w	ip, #0
 8015e58:	f04f 3cff 	movle.w	ip, #4294967295	@ 0xffffffff
 8015e5c:	f1bb 0f15 	cmp.w	fp, #21
 8015e60:	bfc8      	it	gt
 8015e62:	f04f 0c01 	movgt.w	ip, #1
 8015e66:	f8cd c000 	str.w	ip, [sp]
 8015e6a:	9001      	str	r0, [sp, #4]
 8015e6c:	4692      	mov	sl, r2
 8015e6e:	4699      	mov	r9, r3
 8015e70:	f8cd 9014 	str.w	r9, [sp, #20]
 8015e74:	f8dd b04c 	ldr.w	fp, [sp, #76]	@ 0x4c
 8015e78:	460f      	mov	r7, r1
 8015e7a:	ea4f 06aa 	mov.w	r6, sl, asr #2
 8015e7e:	9603      	str	r6, [sp, #12]
 8015e80:	f00a 0603 	and.w	r6, sl, #3
 8015e84:	9604      	str	r6, [sp, #16]
 8015e86:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 8015e8a:	eb0b 0284 	add.w	r2, fp, r4, lsl #2
 8015e8e:	eb02 0244 	add.w	r2, r2, r4, lsl #1
 8015e92:	9202      	str	r2, [sp, #8]
 8015e94:	2c00      	cmp	r4, #0
 8015e96:	f000 8132 	beq.w	80160fe <Exit>

08015e9a <MainLoop>:
 8015e9a:	9e03      	ldr	r6, [sp, #12]
 8015e9c:	f8dd e014 	ldr.w	lr, [sp, #20]
 8015ea0:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8015ea4:	e8be 003f 	ldmia.w	lr!, {r0, r1, r2, r3, r4, r5}
 8015ea8:	f8cd e014 	str.w	lr, [sp, #20]
 8015eac:	3e01      	subs	r6, #1
 8015eae:	dd7d      	ble.n	8015fac <FinalLoop>

08015eb0 <Loop4>:
 8015eb0:	f857 eb04 	ldr.w	lr, [r7], #4
 8015eb4:	e8b8 0600 	ldmia.w	r8!, {r9, sl}
 8015eb8:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8015ebc:	fa2f fe8e 	sxtb16	lr, lr
 8015ec0:	fb2c 000a 	smlad	r0, ip, sl, r0
 8015ec4:	fb2e 0009 	smlad	r0, lr, r9, r0
 8015ec8:	f857 eb04 	ldr.w	lr, [r7], #4
 8015ecc:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8015ed0:	fa2f fe8e 	sxtb16	lr, lr
 8015ed4:	fb2c 110a 	smlad	r1, ip, sl, r1
 8015ed8:	fb2e 1109 	smlad	r1, lr, r9, r1
 8015edc:	f857 eb04 	ldr.w	lr, [r7], #4
 8015ee0:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8015ee4:	fa2f fe8e 	sxtb16	lr, lr
 8015ee8:	fb2c 220a 	smlad	r2, ip, sl, r2
 8015eec:	fb2e 2209 	smlad	r2, lr, r9, r2
 8015ef0:	f857 eb04 	ldr.w	lr, [r7], #4
 8015ef4:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8015ef8:	fa2f fe8e 	sxtb16	lr, lr
 8015efc:	fb2c 330a 	smlad	r3, ip, sl, r3
 8015f00:	fb2e 3309 	smlad	r3, lr, r9, r3
 8015f04:	f857 eb04 	ldr.w	lr, [r7], #4
 8015f08:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8015f0c:	fa2f fe8e 	sxtb16	lr, lr
 8015f10:	fb2c 440a 	smlad	r4, ip, sl, r4
 8015f14:	fb2e 4409 	smlad	r4, lr, r9, r4
 8015f18:	f857 eb04 	ldr.w	lr, [r7], #4
 8015f1c:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8015f20:	fa2f fe8e 	sxtb16	lr, lr
 8015f24:	fb2c 550a 	smlad	r5, ip, sl, r5
 8015f28:	fb2e 5509 	smlad	r5, lr, r9, r5
 8015f2c:	f857 eb04 	ldr.w	lr, [r7], #4
 8015f30:	e8b8 0600 	ldmia.w	r8!, {r9, sl}
 8015f34:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8015f38:	fa2f fe8e 	sxtb16	lr, lr
 8015f3c:	fb2c 000a 	smlad	r0, ip, sl, r0
 8015f40:	fb2e 0009 	smlad	r0, lr, r9, r0
 8015f44:	f857 eb04 	ldr.w	lr, [r7], #4
 8015f48:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8015f4c:	fa2f fe8e 	sxtb16	lr, lr
 8015f50:	fb2c 110a 	smlad	r1, ip, sl, r1
 8015f54:	fb2e 1109 	smlad	r1, lr, r9, r1
 8015f58:	f857 eb04 	ldr.w	lr, [r7], #4
 8015f5c:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8015f60:	fa2f fe8e 	sxtb16	lr, lr
 8015f64:	fb2c 220a 	smlad	r2, ip, sl, r2
 8015f68:	fb2e 2209 	smlad	r2, lr, r9, r2
 8015f6c:	f857 eb04 	ldr.w	lr, [r7], #4
 8015f70:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8015f74:	fa2f fe8e 	sxtb16	lr, lr
 8015f78:	fb2c 330a 	smlad	r3, ip, sl, r3
 8015f7c:	fb2e 3309 	smlad	r3, lr, r9, r3
 8015f80:	f857 eb04 	ldr.w	lr, [r7], #4
 8015f84:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8015f88:	fa2f fe8e 	sxtb16	lr, lr
 8015f8c:	fb2c 440a 	smlad	r4, ip, sl, r4
 8015f90:	fb2e 4409 	smlad	r4, lr, r9, r4
 8015f94:	f857 eb04 	ldr.w	lr, [r7], #4
 8015f98:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8015f9c:	fa2f fe8e 	sxtb16	lr, lr
 8015fa0:	fb2c 550a 	smlad	r5, ip, sl, r5
 8015fa4:	fb2e 5509 	smlad	r5, lr, r9, r5
 8015fa8:	3e02      	subs	r6, #2
 8015faa:	dc81      	bgt.n	8015eb0 <Loop4>

08015fac <FinalLoop>:
 8015fac:	2e00      	cmp	r6, #0
 8015fae:	db3d      	blt.n	801602c <EndLoop4>
 8015fb0:	f857 eb04 	ldr.w	lr, [r7], #4
 8015fb4:	e8b8 0600 	ldmia.w	r8!, {r9, sl}
 8015fb8:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8015fbc:	fa2f fe8e 	sxtb16	lr, lr
 8015fc0:	fb2c 000a 	smlad	r0, ip, sl, r0
 8015fc4:	fb2e 0009 	smlad	r0, lr, r9, r0
 8015fc8:	f857 eb04 	ldr.w	lr, [r7], #4
 8015fcc:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8015fd0:	fa2f fe8e 	sxtb16	lr, lr
 8015fd4:	fb2c 110a 	smlad	r1, ip, sl, r1
 8015fd8:	fb2e 1109 	smlad	r1, lr, r9, r1
 8015fdc:	f857 eb04 	ldr.w	lr, [r7], #4
 8015fe0:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8015fe4:	fa2f fe8e 	sxtb16	lr, lr
 8015fe8:	fb2c 220a 	smlad	r2, ip, sl, r2
 8015fec:	fb2e 2209 	smlad	r2, lr, r9, r2
 8015ff0:	f857 eb04 	ldr.w	lr, [r7], #4
 8015ff4:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8015ff8:	fa2f fe8e 	sxtb16	lr, lr
 8015ffc:	fb2c 330a 	smlad	r3, ip, sl, r3
 8016000:	fb2e 3309 	smlad	r3, lr, r9, r3
 8016004:	f857 eb04 	ldr.w	lr, [r7], #4
 8016008:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 801600c:	fa2f fe8e 	sxtb16	lr, lr
 8016010:	fb2c 440a 	smlad	r4, ip, sl, r4
 8016014:	fb2e 4409 	smlad	r4, lr, r9, r4
 8016018:	f857 eb04 	ldr.w	lr, [r7], #4
 801601c:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8016020:	fa2f fe8e 	sxtb16	lr, lr
 8016024:	fb2c 550a 	smlad	r5, ip, sl, r5
 8016028:	fb2e 5509 	smlad	r5, lr, r9, r5

0801602c <EndLoop4>:
 801602c:	9e04      	ldr	r6, [sp, #16]
 801602e:	b1ee      	cbz	r6, 801606c <OutputFormatting>

08016030 <Loop1>:
 8016030:	f938 9b02 	ldrsh.w	r9, [r8], #2
 8016034:	f997 e000 	ldrsb.w	lr, [r7]
 8016038:	f997 c001 	ldrsb.w	ip, [r7, #1]
 801603c:	fb1e 0009 	smlabb	r0, lr, r9, r0
 8016040:	fb1c 1109 	smlabb	r1, ip, r9, r1
 8016044:	f997 e002 	ldrsb.w	lr, [r7, #2]
 8016048:	f997 c003 	ldrsb.w	ip, [r7, #3]
 801604c:	fb1e 2209 	smlabb	r2, lr, r9, r2
 8016050:	fb1c 3309 	smlabb	r3, ip, r9, r3
 8016054:	f997 e004 	ldrsb.w	lr, [r7, #4]
 8016058:	f997 c005 	ldrsb.w	ip, [r7, #5]
 801605c:	fb1e 4409 	smlabb	r4, lr, r9, r4
 8016060:	fb1c 5509 	smlabb	r5, ip, r9, r5
 8016064:	3e01      	subs	r6, #1
 8016066:	f107 0706 	add.w	r7, r7, #6
 801606a:	d1e1      	bne.n	8016030 <Loop1>

0801606c <OutputFormatting>:
 801606c:	9e00      	ldr	r6, [sp, #0]
 801606e:	f8dd e044 	ldr.w	lr, [sp, #68]	@ 0x44
 8016072:	f8dd c048 	ldr.w	ip, [sp, #72]	@ 0x48
 8016076:	f8dd a040 	ldr.w	sl, [sp, #64]	@ 0x40
 801607a:	2e00      	cmp	r6, #0
 801607c:	d142      	bne.n	8016104 <OutputFormatting_ex>
 801607e:	ea4f 0040 	mov.w	r0, r0, lsl #1
 8016082:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8016086:	fb50 a00e 	smmla	r0, r0, lr, sl
 801608a:	fb51 a10e 	smmla	r1, r1, lr, sl
 801608e:	fa40 f00c 	asr.w	r0, r0, ip
 8016092:	fa41 f10c 	asr.w	r1, r1, ip
 8016096:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801609a:	ea4f 0343 	mov.w	r3, r3, lsl #1
 801609e:	fb52 a20e 	smmla	r2, r2, lr, sl
 80160a2:	fb53 a30e 	smmla	r3, r3, lr, sl
 80160a6:	fa42 f20c 	asr.w	r2, r2, ip
 80160aa:	fa43 f30c 	asr.w	r3, r3, ip
 80160ae:	ea4f 0444 	mov.w	r4, r4, lsl #1
 80160b2:	ea4f 0545 	mov.w	r5, r5, lsl #1
 80160b6:	fb54 a40e 	smmla	r4, r4, lr, sl
 80160ba:	fb55 a50e 	smmla	r5, r5, lr, sl
 80160be:	fa44 f40c 	asr.w	r4, r4, ip
 80160c2:	fa45 f50c 	asr.w	r5, r5, ip

080160c6 <EndScaling>:
 80160c6:	f300 0007 	ssat	r0, #8, r0
 80160ca:	f301 0107 	ssat	r1, #8, r1
 80160ce:	f302 0207 	ssat	r2, #8, r2
 80160d2:	f303 0307 	ssat	r3, #8, r3
 80160d6:	f304 0407 	ssat	r4, #8, r4
 80160da:	f305 0507 	ssat	r5, #8, r5
 80160de:	f80b 0b01 	strb.w	r0, [fp], #1
 80160e2:	f80b 1b01 	strb.w	r1, [fp], #1
 80160e6:	f80b 2b01 	strb.w	r2, [fp], #1
 80160ea:	f80b 3b01 	strb.w	r3, [fp], #1
 80160ee:	f80b 4b01 	strb.w	r4, [fp], #1
 80160f2:	9b02      	ldr	r3, [sp, #8]
 80160f4:	f80b 5b01 	strb.w	r5, [fp], #1
 80160f8:	459b      	cmp	fp, r3
 80160fa:	f47f aece 	bne.w	8015e9a <MainLoop>

080160fe <Exit>:
 80160fe:	b006      	add	sp, #24
 8016100:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016104 <OutputFormatting_ex>:
 8016104:	f116 0801 	adds.w	r8, r6, #1
 8016108:	d03c      	beq.n	8016184 <OutputFormatting_Neg>
 801610a:	f04f 0801 	mov.w	r8, #1
 801610e:	fa08 f80c 	lsl.w	r8, r8, ip
 8016112:	ea4f 08a8 	mov.w	r8, r8, asr #2
 8016116:	fb50 800e 	smmla	r0, r0, lr, r8
 801611a:	ea4f 0040 	mov.w	r0, r0, lsl #1
 801611e:	fa40 f00c 	asr.w	r0, r0, ip
 8016122:	4450      	add	r0, sl
 8016124:	fb51 810e 	smmla	r1, r1, lr, r8
 8016128:	ea4f 0141 	mov.w	r1, r1, lsl #1
 801612c:	fa41 f10c 	asr.w	r1, r1, ip
 8016130:	4451      	add	r1, sl
 8016132:	f04f 0801 	mov.w	r8, #1
 8016136:	fa08 f80c 	lsl.w	r8, r8, ip
 801613a:	ea4f 08a8 	mov.w	r8, r8, asr #2
 801613e:	fb52 820e 	smmla	r2, r2, lr, r8
 8016142:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8016146:	fa42 f20c 	asr.w	r2, r2, ip
 801614a:	4452      	add	r2, sl
 801614c:	fb53 830e 	smmla	r3, r3, lr, r8
 8016150:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8016154:	fa43 f30c 	asr.w	r3, r3, ip
 8016158:	4453      	add	r3, sl
 801615a:	f04f 0801 	mov.w	r8, #1
 801615e:	fa08 f80c 	lsl.w	r8, r8, ip
 8016162:	ea4f 08a8 	mov.w	r8, r8, asr #2
 8016166:	fb54 840e 	smmla	r4, r4, lr, r8
 801616a:	ea4f 0444 	mov.w	r4, r4, lsl #1
 801616e:	fa44 f40c 	asr.w	r4, r4, ip
 8016172:	4454      	add	r4, sl
 8016174:	fb55 850e 	smmla	r5, r5, lr, r8
 8016178:	ea4f 0545 	mov.w	r5, r5, lsl #1
 801617c:	fa45 f50c 	asr.w	r5, r5, ip
 8016180:	4455      	add	r5, sl
 8016182:	e7a0      	b.n	80160c6 <EndScaling>

08016184 <OutputFormatting_Neg>:
 8016184:	f1cc 0801 	rsb	r8, ip, #1
 8016188:	fa00 f008 	lsl.w	r0, r0, r8
 801618c:	f300 001f 	ssat	r0, #32, r0
 8016190:	fb50 f01e 	smmulr	r0, r0, lr
 8016194:	fa01 f108 	lsl.w	r1, r1, r8
 8016198:	f301 011f 	ssat	r1, #32, r1
 801619c:	fb51 f11e 	smmulr	r1, r1, lr
 80161a0:	4450      	add	r0, sl
 80161a2:	4451      	add	r1, sl
 80161a4:	f1cc 0801 	rsb	r8, ip, #1
 80161a8:	fa02 f208 	lsl.w	r2, r2, r8
 80161ac:	f302 021f 	ssat	r2, #32, r2
 80161b0:	fb52 f21e 	smmulr	r2, r2, lr
 80161b4:	fa03 f308 	lsl.w	r3, r3, r8
 80161b8:	f303 031f 	ssat	r3, #32, r3
 80161bc:	fb53 f31e 	smmulr	r3, r3, lr
 80161c0:	4452      	add	r2, sl
 80161c2:	4453      	add	r3, sl
 80161c4:	f1cc 0801 	rsb	r8, ip, #1
 80161c8:	fa04 f408 	lsl.w	r4, r4, r8
 80161cc:	f304 041f 	ssat	r4, #32, r4
 80161d0:	fb54 f41e 	smmulr	r4, r4, lr
 80161d4:	fa05 f508 	lsl.w	r5, r5, r8
 80161d8:	f305 051f 	ssat	r5, #32, r5
 80161dc:	fb55 f51e 	smmulr	r5, r5, lr
 80161e0:	4454      	add	r4, sl
 80161e2:	4455      	add	r5, sl
 80161e4:	e76f      	b.n	80160c6 <EndScaling>
 80161e6:	bf00      	nop
 80161e8:	f3af 8000 	nop.w
 80161ec:	f3af 8000 	nop.w

080161f0 <st_sssa8_dense_memopt_loop>:
 80161f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80161f4:	b087      	sub	sp, #28
 80161f6:	f8dd b050 	ldr.w	fp, [sp, #80]	@ 0x50
 80161fa:	f1bb 0f00 	cmp.w	fp, #0
 80161fe:	bfcc      	ite	gt
 8016200:	f04f 0c00 	movgt.w	ip, #0
 8016204:	f04f 3cff 	movle.w	ip, #4294967295	@ 0xffffffff
 8016208:	f1bb 0f15 	cmp.w	fp, #21
 801620c:	bfc8      	it	gt
 801620e:	f04f 0c01 	movgt.w	ip, #1
 8016212:	f8cd c000 	str.w	ip, [sp]
 8016216:	9001      	str	r0, [sp, #4]
 8016218:	4692      	mov	sl, r2
 801621a:	4699      	mov	r9, r3
 801621c:	f8cd 9014 	str.w	r9, [sp, #20]
 8016220:	f8dd b054 	ldr.w	fp, [sp, #84]	@ 0x54
 8016224:	460f      	mov	r7, r1
 8016226:	f8cd b018 	str.w	fp, [sp, #24]
 801622a:	ea4f 06aa 	mov.w	r6, sl, asr #2
 801622e:	9603      	str	r6, [sp, #12]
 8016230:	f00a 0603 	and.w	r6, sl, #3
 8016234:	9604      	str	r6, [sp, #16]
 8016236:	f8bd 4040 	ldrh.w	r4, [sp, #64]	@ 0x40
 801623a:	eb0b 0284 	add.w	r2, fp, r4, lsl #2
 801623e:	eb02 0244 	add.w	r2, r2, r4, lsl #1
 8016242:	9202      	str	r2, [sp, #8]
 8016244:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8016246:	f1c5 0b00 	rsb	fp, r5, #0
 801624a:	eacb 4b0b 	pkhbt	fp, fp, fp, lsl #16
 801624e:	2c00      	cmp	r4, #0
 8016250:	f000 814c 	beq.w	80164ec <Exit_m>

08016254 <MainLoop_m>:
 8016254:	9e03      	ldr	r6, [sp, #12]
 8016256:	f8dd e014 	ldr.w	lr, [sp, #20]
 801625a:	f8dd 8004 	ldr.w	r8, [sp, #4]
 801625e:	e8be 003f 	ldmia.w	lr!, {r0, r1, r2, r3, r4, r5}
 8016262:	f8cd e014 	str.w	lr, [sp, #20]
 8016266:	3e01      	subs	r6, #1
 8016268:	f340 808b 	ble.w	8016382 <FinalLoop_m>

0801626c <Loop4_m>:
 801626c:	f857 eb04 	ldr.w	lr, [r7], #4
 8016270:	f858 9b04 	ldr.w	r9, [r8], #4
 8016274:	ea4f 2a39 	mov.w	sl, r9, ror #8
 8016278:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 801627c:	fa2f fe8e 	sxtb16	lr, lr
 8016280:	fa2b f989 	sxtab16	r9, fp, r9
 8016284:	fa2b fa8a 	sxtab16	sl, fp, sl
 8016288:	fb2c 000a 	smlad	r0, ip, sl, r0
 801628c:	fb2e 0009 	smlad	r0, lr, r9, r0
 8016290:	f857 eb04 	ldr.w	lr, [r7], #4
 8016294:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8016298:	fa2f fe8e 	sxtb16	lr, lr
 801629c:	fb2c 110a 	smlad	r1, ip, sl, r1
 80162a0:	fb2e 1109 	smlad	r1, lr, r9, r1
 80162a4:	f857 eb04 	ldr.w	lr, [r7], #4
 80162a8:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 80162ac:	fa2f fe8e 	sxtb16	lr, lr
 80162b0:	fb2c 220a 	smlad	r2, ip, sl, r2
 80162b4:	fb2e 2209 	smlad	r2, lr, r9, r2
 80162b8:	f857 eb04 	ldr.w	lr, [r7], #4
 80162bc:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 80162c0:	fa2f fe8e 	sxtb16	lr, lr
 80162c4:	fb2c 330a 	smlad	r3, ip, sl, r3
 80162c8:	fb2e 3309 	smlad	r3, lr, r9, r3
 80162cc:	f857 eb04 	ldr.w	lr, [r7], #4
 80162d0:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 80162d4:	fa2f fe8e 	sxtb16	lr, lr
 80162d8:	fb2c 440a 	smlad	r4, ip, sl, r4
 80162dc:	fb2e 4409 	smlad	r4, lr, r9, r4
 80162e0:	f857 eb04 	ldr.w	lr, [r7], #4
 80162e4:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 80162e8:	fa2f fe8e 	sxtb16	lr, lr
 80162ec:	fb2c 550a 	smlad	r5, ip, sl, r5
 80162f0:	fb2e 5509 	smlad	r5, lr, r9, r5
 80162f4:	f857 eb04 	ldr.w	lr, [r7], #4
 80162f8:	f858 9b04 	ldr.w	r9, [r8], #4
 80162fc:	ea4f 2a39 	mov.w	sl, r9, ror #8
 8016300:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8016304:	fa2f fe8e 	sxtb16	lr, lr
 8016308:	fa2b f989 	sxtab16	r9, fp, r9
 801630c:	fa2b fa8a 	sxtab16	sl, fp, sl
 8016310:	fb2c 000a 	smlad	r0, ip, sl, r0
 8016314:	fb2e 0009 	smlad	r0, lr, r9, r0
 8016318:	f857 eb04 	ldr.w	lr, [r7], #4
 801631c:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8016320:	fa2f fe8e 	sxtb16	lr, lr
 8016324:	fb2c 110a 	smlad	r1, ip, sl, r1
 8016328:	fb2e 1109 	smlad	r1, lr, r9, r1
 801632c:	f857 eb04 	ldr.w	lr, [r7], #4
 8016330:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8016334:	fa2f fe8e 	sxtb16	lr, lr
 8016338:	fb2c 220a 	smlad	r2, ip, sl, r2
 801633c:	fb2e 2209 	smlad	r2, lr, r9, r2
 8016340:	f857 eb04 	ldr.w	lr, [r7], #4
 8016344:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8016348:	fa2f fe8e 	sxtb16	lr, lr
 801634c:	fb2c 330a 	smlad	r3, ip, sl, r3
 8016350:	fb2e 3309 	smlad	r3, lr, r9, r3
 8016354:	f857 eb04 	ldr.w	lr, [r7], #4
 8016358:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 801635c:	fa2f fe8e 	sxtb16	lr, lr
 8016360:	fb2c 440a 	smlad	r4, ip, sl, r4
 8016364:	fb2e 4409 	smlad	r4, lr, r9, r4
 8016368:	f857 eb04 	ldr.w	lr, [r7], #4
 801636c:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8016370:	fa2f fe8e 	sxtb16	lr, lr
 8016374:	fb2c 550a 	smlad	r5, ip, sl, r5
 8016378:	fb2e 5509 	smlad	r5, lr, r9, r5
 801637c:	3e02      	subs	r6, #2
 801637e:	f73f af75 	bgt.w	801626c <Loop4_m>

08016382 <FinalLoop_m>:
 8016382:	2e00      	cmp	r6, #0
 8016384:	db43      	blt.n	801640e <EndLoop4_m>
 8016386:	f857 eb04 	ldr.w	lr, [r7], #4
 801638a:	f858 9b04 	ldr.w	r9, [r8], #4
 801638e:	ea4f 2a39 	mov.w	sl, r9, ror #8
 8016392:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8016396:	fa2f fe8e 	sxtb16	lr, lr
 801639a:	fa2b f989 	sxtab16	r9, fp, r9
 801639e:	fa2b fa8a 	sxtab16	sl, fp, sl
 80163a2:	fb2c 000a 	smlad	r0, ip, sl, r0
 80163a6:	fb2e 0009 	smlad	r0, lr, r9, r0
 80163aa:	f857 eb04 	ldr.w	lr, [r7], #4
 80163ae:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 80163b2:	fa2f fe8e 	sxtb16	lr, lr
 80163b6:	fb2c 110a 	smlad	r1, ip, sl, r1
 80163ba:	fb2e 1109 	smlad	r1, lr, r9, r1
 80163be:	f857 eb04 	ldr.w	lr, [r7], #4
 80163c2:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 80163c6:	fa2f fe8e 	sxtb16	lr, lr
 80163ca:	fb2c 220a 	smlad	r2, ip, sl, r2
 80163ce:	fb2e 2209 	smlad	r2, lr, r9, r2
 80163d2:	f857 eb04 	ldr.w	lr, [r7], #4
 80163d6:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 80163da:	fa2f fe8e 	sxtb16	lr, lr
 80163de:	fb2c 330a 	smlad	r3, ip, sl, r3
 80163e2:	fb2e 3309 	smlad	r3, lr, r9, r3
 80163e6:	f857 eb04 	ldr.w	lr, [r7], #4
 80163ea:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 80163ee:	fa2f fe8e 	sxtb16	lr, lr
 80163f2:	fb2c 440a 	smlad	r4, ip, sl, r4
 80163f6:	fb2e 4409 	smlad	r4, lr, r9, r4
 80163fa:	f857 eb04 	ldr.w	lr, [r7], #4
 80163fe:	fa2f fc9e 	sxtb16	ip, lr, ror #8
 8016402:	fa2f fe8e 	sxtb16	lr, lr
 8016406:	fb2c 550a 	smlad	r5, ip, sl, r5
 801640a:	fb2e 5509 	smlad	r5, lr, r9, r5

0801640e <EndLoop4_m>:
 801640e:	9e04      	ldr	r6, [sp, #16]
 8016410:	b30e      	cbz	r6, 8016456 <OutputFormatting_m>
 8016412:	f8dd a048 	ldr.w	sl, [sp, #72]	@ 0x48

08016416 <Loop1_m>:
 8016416:	f918 9b01 	ldrsb.w	r9, [r8], #1
 801641a:	f997 e000 	ldrsb.w	lr, [r7]
 801641e:	f997 c001 	ldrsb.w	ip, [r7, #1]
 8016422:	eba9 090a 	sub.w	r9, r9, sl
 8016426:	fb1e 0009 	smlabb	r0, lr, r9, r0
 801642a:	fb1c 1109 	smlabb	r1, ip, r9, r1
 801642e:	f997 e002 	ldrsb.w	lr, [r7, #2]
 8016432:	f997 c003 	ldrsb.w	ip, [r7, #3]
 8016436:	fb1e 2209 	smlabb	r2, lr, r9, r2
 801643a:	fb1c 3309 	smlabb	r3, ip, r9, r3
 801643e:	f997 e004 	ldrsb.w	lr, [r7, #4]
 8016442:	f997 c005 	ldrsb.w	ip, [r7, #5]
 8016446:	fb1e 4409 	smlabb	r4, lr, r9, r4
 801644a:	fb1c 5509 	smlabb	r5, ip, r9, r5
 801644e:	3e01      	subs	r6, #1
 8016450:	f107 0706 	add.w	r7, r7, #6
 8016454:	dcdf      	bgt.n	8016416 <Loop1_m>

08016456 <OutputFormatting_m>:
 8016456:	9e00      	ldr	r6, [sp, #0]
 8016458:	f8dd e04c 	ldr.w	lr, [sp, #76]	@ 0x4c
 801645c:	f8dd c050 	ldr.w	ip, [sp, #80]	@ 0x50
 8016460:	f8dd a044 	ldr.w	sl, [sp, #68]	@ 0x44
 8016464:	2e00      	cmp	r6, #0
 8016466:	d144      	bne.n	80164f2 <OutputFormatting_m_ex>
 8016468:	ea4f 0040 	mov.w	r0, r0, lsl #1
 801646c:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8016470:	fb50 a00e 	smmla	r0, r0, lr, sl
 8016474:	fb51 a10e 	smmla	r1, r1, lr, sl
 8016478:	fa40 f00c 	asr.w	r0, r0, ip
 801647c:	fa41 f10c 	asr.w	r1, r1, ip
 8016480:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8016484:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8016488:	fb52 a20e 	smmla	r2, r2, lr, sl
 801648c:	fb53 a30e 	smmla	r3, r3, lr, sl
 8016490:	fa42 f20c 	asr.w	r2, r2, ip
 8016494:	fa43 f30c 	asr.w	r3, r3, ip
 8016498:	ea4f 0444 	mov.w	r4, r4, lsl #1
 801649c:	ea4f 0545 	mov.w	r5, r5, lsl #1
 80164a0:	fb54 a40e 	smmla	r4, r4, lr, sl
 80164a4:	fb55 a50e 	smmla	r5, r5, lr, sl
 80164a8:	fa44 f40c 	asr.w	r4, r4, ip
 80164ac:	fa45 f50c 	asr.w	r5, r5, ip

080164b0 <EndScaling_m>:
 80164b0:	9e06      	ldr	r6, [sp, #24]
 80164b2:	f300 0007 	ssat	r0, #8, r0
 80164b6:	f301 0107 	ssat	r1, #8, r1
 80164ba:	f302 0207 	ssat	r2, #8, r2
 80164be:	f303 0307 	ssat	r3, #8, r3
 80164c2:	f304 0407 	ssat	r4, #8, r4
 80164c6:	f305 0507 	ssat	r5, #8, r5
 80164ca:	f806 0b01 	strb.w	r0, [r6], #1
 80164ce:	f806 1b01 	strb.w	r1, [r6], #1
 80164d2:	f806 2b01 	strb.w	r2, [r6], #1
 80164d6:	f806 3b01 	strb.w	r3, [r6], #1
 80164da:	f806 4b01 	strb.w	r4, [r6], #1
 80164de:	9b02      	ldr	r3, [sp, #8]
 80164e0:	f806 5b01 	strb.w	r5, [r6], #1
 80164e4:	9606      	str	r6, [sp, #24]
 80164e6:	429e      	cmp	r6, r3
 80164e8:	f47f aeb4 	bne.w	8016254 <MainLoop_m>

080164ec <Exit_m>:
 80164ec:	b007      	add	sp, #28
 80164ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080164f2 <OutputFormatting_m_ex>:
 80164f2:	f116 0801 	adds.w	r8, r6, #1
 80164f6:	d03c      	beq.n	8016572 <OutputFormatting_m_Neg>
 80164f8:	f04f 0801 	mov.w	r8, #1
 80164fc:	fa08 f80c 	lsl.w	r8, r8, ip
 8016500:	ea4f 08a8 	mov.w	r8, r8, asr #2
 8016504:	fb50 800e 	smmla	r0, r0, lr, r8
 8016508:	ea4f 0040 	mov.w	r0, r0, lsl #1
 801650c:	fa40 f00c 	asr.w	r0, r0, ip
 8016510:	4450      	add	r0, sl
 8016512:	fb51 810e 	smmla	r1, r1, lr, r8
 8016516:	ea4f 0141 	mov.w	r1, r1, lsl #1
 801651a:	fa41 f10c 	asr.w	r1, r1, ip
 801651e:	4451      	add	r1, sl
 8016520:	f04f 0801 	mov.w	r8, #1
 8016524:	fa08 f80c 	lsl.w	r8, r8, ip
 8016528:	ea4f 08a8 	mov.w	r8, r8, asr #2
 801652c:	fb52 820e 	smmla	r2, r2, lr, r8
 8016530:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8016534:	fa42 f20c 	asr.w	r2, r2, ip
 8016538:	4452      	add	r2, sl
 801653a:	fb53 830e 	smmla	r3, r3, lr, r8
 801653e:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8016542:	fa43 f30c 	asr.w	r3, r3, ip
 8016546:	4453      	add	r3, sl
 8016548:	f04f 0801 	mov.w	r8, #1
 801654c:	fa08 f80c 	lsl.w	r8, r8, ip
 8016550:	ea4f 08a8 	mov.w	r8, r8, asr #2
 8016554:	fb54 840e 	smmla	r4, r4, lr, r8
 8016558:	ea4f 0444 	mov.w	r4, r4, lsl #1
 801655c:	fa44 f40c 	asr.w	r4, r4, ip
 8016560:	4454      	add	r4, sl
 8016562:	fb55 850e 	smmla	r5, r5, lr, r8
 8016566:	ea4f 0545 	mov.w	r5, r5, lsl #1
 801656a:	fa45 f50c 	asr.w	r5, r5, ip
 801656e:	4455      	add	r5, sl
 8016570:	e79e      	b.n	80164b0 <EndScaling_m>

08016572 <OutputFormatting_m_Neg>:
 8016572:	f1cc 0801 	rsb	r8, ip, #1
 8016576:	fa00 f008 	lsl.w	r0, r0, r8
 801657a:	f300 001f 	ssat	r0, #32, r0
 801657e:	fb50 f01e 	smmulr	r0, r0, lr
 8016582:	fa01 f108 	lsl.w	r1, r1, r8
 8016586:	f301 011f 	ssat	r1, #32, r1
 801658a:	fb51 f11e 	smmulr	r1, r1, lr
 801658e:	4450      	add	r0, sl
 8016590:	4451      	add	r1, sl
 8016592:	f1cc 0801 	rsb	r8, ip, #1
 8016596:	fa02 f208 	lsl.w	r2, r2, r8
 801659a:	f302 021f 	ssat	r2, #32, r2
 801659e:	fb52 f21e 	smmulr	r2, r2, lr
 80165a2:	fa03 f308 	lsl.w	r3, r3, r8
 80165a6:	f303 031f 	ssat	r3, #32, r3
 80165aa:	fb53 f31e 	smmulr	r3, r3, lr
 80165ae:	4452      	add	r2, sl
 80165b0:	4453      	add	r3, sl
 80165b2:	f1cc 0801 	rsb	r8, ip, #1
 80165b6:	fa04 f408 	lsl.w	r4, r4, r8
 80165ba:	f304 041f 	ssat	r4, #32, r4
 80165be:	fb54 f41e 	smmulr	r4, r4, lr
 80165c2:	fa05 f508 	lsl.w	r5, r5, r8
 80165c6:	f305 051f 	ssat	r5, #32, r5
 80165ca:	fb55 f51e 	smmulr	r5, r5, lr
 80165ce:	4454      	add	r4, sl
 80165d0:	4455      	add	r5, sl
 80165d2:	e76d      	b.n	80164b0 <EndScaling_m>
	...

08020000 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3>:
 8020000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020004:	b0a4      	sub	sp, #144	@ 0x90
 8020006:	9e30      	ldr	r6, [sp, #192]	@ 0xc0
 8020008:	9313      	str	r3, [sp, #76]	@ 0x4c
 802000a:	9b35      	ldr	r3, [sp, #212]	@ 0xd4
 802000c:	9011      	str	r0, [sp, #68]	@ 0x44
 802000e:	9112      	str	r1, [sp, #72]	@ 0x48
 8020010:	9210      	str	r2, [sp, #64]	@ 0x40
 8020012:	f013 0801 	ands.w	r8, r3, #1
 8020016:	f8cd 807c 	str.w	r8, [sp, #124]	@ 0x7c
 802001a:	9c31      	ldr	r4, [sp, #196]	@ 0xc4
 802001c:	9d32      	ldr	r5, [sp, #200]	@ 0xc8
 802001e:	bf1c      	itt	ne
 8020020:	3402      	addne	r4, #2
 8020022:	3502      	addne	r5, #2
 8020024:	fb04 f405 	mul.w	r4, r4, r5
 8020028:	f013 0502 	ands.w	r5, r3, #2
 802002c:	9f2f      	ldr	r7, [sp, #188]	@ 0xbc
 802002e:	951e      	str	r5, [sp, #120]	@ 0x78
 8020030:	f04f 0c01 	mov.w	ip, #1
 8020034:	bf19      	ittee	ne
 8020036:	940b      	strne	r4, [sp, #44]	@ 0x2c
 8020038:	f8cd c028 	strne.w	ip, [sp, #40]	@ 0x28
 802003c:	f8cd c02c 	streq.w	ip, [sp, #44]	@ 0x2c
 8020040:	970a      	streq	r7, [sp, #40]	@ 0x28
 8020042:	f003 0803 	and.w	r8, r3, #3
 8020046:	f1b8 0f03 	cmp.w	r8, #3
 802004a:	bf0c      	ite	eq
 802004c:	2302      	moveq	r3, #2
 802004e:	2300      	movne	r3, #0
 8020050:	930c      	str	r3, [sp, #48]	@ 0x30
 8020052:	2f01      	cmp	r7, #1
 8020054:	f340 820f 	ble.w	8020476 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x476>
 8020058:	9d33      	ldr	r5, [sp, #204]	@ 0xcc
 802005a:	eba6 0486 	sub.w	r4, r6, r6, lsl #2
 802005e:	eb05 0304 	add.w	r3, r5, r4
 8020062:	4433      	add	r3, r6
 8020064:	931b      	str	r3, [sp, #108]	@ 0x6c
 8020066:	f1c5 0302 	rsb	r3, r5, #2
 802006a:	eba3 0006 	sub.w	r0, r3, r6
 802006e:	eb04 0c43 	add.w	ip, r4, r3, lsl #1
 8020072:	44b4      	add	ip, r6
 8020074:	f8cd c070 	str.w	ip, [sp, #112]	@ 0x70
 8020078:	f1ac 0c03 	sub.w	ip, ip, #3
 802007c:	f8cd c074 	str.w	ip, [sp, #116]	@ 0x74
 8020080:	f006 0c03 	and.w	ip, r6, #3
 8020084:	f8cd c08c 	str.w	ip, [sp, #140]	@ 0x8c
 8020088:	eb0c 03cc 	add.w	r3, ip, ip, lsl #3
 802008c:	9321      	str	r3, [sp, #132]	@ 0x84
 802008e:	ea4f 03a6 	mov.w	r3, r6, asr #2
 8020092:	eb03 0cc3 	add.w	ip, r3, r3, lsl #3
 8020096:	f8cd c080 	str.w	ip, [sp, #128]	@ 0x80
 802009a:	eb06 0cc6 	add.w	ip, r6, r6, lsl #3
 802009e:	f8cd c088 	str.w	ip, [sp, #136]	@ 0x88
 80200a2:	f8dd b0bc 	ldr.w	fp, [sp, #188]	@ 0xbc
 80200a6:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 80200a8:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
 80200ac:	eb03 0c8b 	add.w	ip, r3, fp, lsl #2
 80200b0:	f8cd c058 	str.w	ip, [sp, #88]	@ 0x58
 80200b4:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 80200b6:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 80200b8:	9a37      	ldr	r2, [sp, #220]	@ 0xdc
 80200ba:	900e      	str	r0, [sp, #56]	@ 0x38
 80200bc:	910d      	str	r1, [sp, #52]	@ 0x34
 80200be:	920f      	str	r2, [sp, #60]	@ 0x3c
 80200c0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80200c2:	f9b2 3000 	ldrsh.w	r3, [r2]
 80200c6:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 80200ca:	e9cd 3402 	strd	r3, r4, [sp, #8]
 80200ce:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80200d0:	e9d2 1200 	ldrd	r1, r2, [r2]
 80200d4:	e9cd 1200 	strd	r1, r2, [sp]
 80200d8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80200da:	e9d2 1200 	ldrd	r1, r2, [r2]
 80200de:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80200e2:	2b00      	cmp	r3, #0
 80200e4:	bfcc      	ite	gt
 80200e6:	2000      	movgt	r0, #0
 80200e8:	f04f 30ff 	movle.w	r0, #4294967295	@ 0xffffffff
 80200ec:	2b15      	cmp	r3, #21
 80200ee:	bfc8      	it	gt
 80200f0:	2001      	movgt	r0, #1
 80200f2:	2c00      	cmp	r4, #0
 80200f4:	bfcc      	ite	gt
 80200f6:	2100      	movgt	r1, #0
 80200f8:	f04f 31ff 	movle.w	r1, #4294967295	@ 0xffffffff
 80200fc:	2c15      	cmp	r4, #21
 80200fe:	bfc8      	it	gt
 8020100:	2101      	movgt	r1, #1
 8020102:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8020106:	f000 bc37 	b.w	8020978 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x978>
 802010a:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 802010c:	2b00      	cmp	r3, #0
 802010e:	f040 8404 	bne.w	802091a <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x91a>
 8020112:	4618      	mov	r0, r3
 8020114:	461a      	mov	r2, r3
 8020116:	9d35      	ldr	r5, [sp, #212]	@ 0xd4
 8020118:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802011a:	e9d4 1300 	ldrd	r1, r3, [r4]
 802011e:	4403      	add	r3, r0
 8020120:	440a      	add	r2, r1
 8020122:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8020126:	2d03      	cmp	r5, #3
 8020128:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802012a:	d103      	bne.n	8020134 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x134>
 802012c:	9b31      	ldr	r3, [sp, #196]	@ 0xc4
 802012e:	f103 0303 	add.w	r3, r3, #3
 8020132:	441a      	add	r2, r3
 8020134:	9215      	str	r2, [sp, #84]	@ 0x54
 8020136:	f8dd 80c8 	ldr.w	r8, [sp, #200]	@ 0xc8
 802013a:	f1b8 0f00 	cmp.w	r8, #0
 802013e:	f000 817b 	beq.w	8020438 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x438>
 8020142:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020144:	f8cd 8068 	str.w	r8, [sp, #104]	@ 0x68
 8020148:	9417      	str	r4, [sp, #92]	@ 0x5c
 802014a:	9b31      	ldr	r3, [sp, #196]	@ 0xc4
 802014c:	105b      	asrs	r3, r3, #1
 802014e:	f000 8162 	beq.w	8020416 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x416>
 8020152:	9418      	str	r4, [sp, #96]	@ 0x60
 8020154:	9319      	str	r3, [sp, #100]	@ 0x64
 8020156:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8020158:	9d38      	ldr	r5, [sp, #224]	@ 0xe0
 802015a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 802015e:	4610      	mov	r0, r2
 8020160:	4619      	mov	r1, r3
 8020162:	2e04      	cmp	r6, #4
 8020164:	f340 8101 	ble.w	802036a <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x36a>
 8020168:	ea4f 0ea6 	mov.w	lr, r6, asr #2
 802016c:	f8d4 8000 	ldr.w	r8, [r4]
 8020170:	e8b5 1e00 	ldmia.w	r5!, {r9, sl, fp, ip}
 8020174:	fa2f f788 	sxtb16	r7, r8
 8020178:	fa2f f898 	sxtb16	r8, r8, ror #8
 802017c:	fb27 330b 	smlad	r3, r7, fp, r3
 8020180:	fb27 2209 	smlad	r2, r7, r9, r2
 8020184:	fb28 220a 	smlad	r2, r8, sl, r2
 8020188:	fb28 330c 	smlad	r3, r8, ip, r3
 802018c:	f854 8006 	ldr.w	r8, [r4, r6]
 8020190:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8020194:	fa2f f788 	sxtb16	r7, r8
 8020198:	fa2f f898 	sxtb16	r8, r8, ror #8
 802019c:	fb27 110b 	smlad	r1, r7, fp, r1
 80201a0:	fb27 0009 	smlad	r0, r7, r9, r0
 80201a4:	fb28 110c 	smlad	r1, r8, ip, r1
 80201a8:	fb28 000a 	smlad	r0, r8, sl, r0
 80201ac:	e8b5 1e00 	ldmia.w	r5!, {r9, sl, fp, ip}
 80201b0:	fb27 2209 	smlad	r2, r7, r9, r2
 80201b4:	fb27 330b 	smlad	r3, r7, fp, r3
 80201b8:	fb28 220a 	smlad	r2, r8, sl, r2
 80201bc:	fb28 330c 	smlad	r3, r8, ip, r3
 80201c0:	f8d4 8000 	ldr.w	r8, [r4]
 80201c4:	fa2f f788 	sxtb16	r7, r8
 80201c8:	fa2f f898 	sxtb16	r8, r8, ror #8
 80201cc:	fb27 0009 	smlad	r0, r7, r9, r0
 80201d0:	fb27 110b 	smlad	r1, r7, fp, r1
 80201d4:	fb28 000a 	smlad	r0, r8, sl, r0
 80201d8:	fb28 110c 	smlad	r1, r8, ip, r1
 80201dc:	e8b5 1e00 	ldmia.w	r5!, {r9, sl, fp, ip}
 80201e0:	fb27 2209 	smlad	r2, r7, r9, r2
 80201e4:	fb27 330b 	smlad	r3, r7, fp, r3
 80201e8:	fb28 220a 	smlad	r2, r8, sl, r2
 80201ec:	fb28 330c 	smlad	r3, r8, ip, r3
 80201f0:	f854 8006 	ldr.w	r8, [r4, r6]
 80201f4:	fa2f f788 	sxtb16	r7, r8
 80201f8:	fa2f f898 	sxtb16	r8, r8, ror #8
 80201fc:	fb27 0009 	smlad	r0, r7, r9, r0
 8020200:	fb27 110b 	smlad	r1, r7, fp, r1
 8020204:	fb28 000a 	smlad	r0, r8, sl, r0
 8020208:	fb28 110c 	smlad	r1, r8, ip, r1
 802020c:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
 8020210:	4444      	add	r4, r8
 8020212:	bf00      	nop
 8020214:	f8d4 8000 	ldr.w	r8, [r4]
 8020218:	e8b5 1e00 	ldmia.w	r5!, {r9, sl, fp, ip}
 802021c:	fa2f f788 	sxtb16	r7, r8
 8020220:	fa2f f898 	sxtb16	r8, r8, ror #8
 8020224:	fb27 330b 	smlad	r3, r7, fp, r3
 8020228:	fb27 2209 	smlad	r2, r7, r9, r2
 802022c:	fb28 220a 	smlad	r2, r8, sl, r2
 8020230:	fb28 330c 	smlad	r3, r8, ip, r3
 8020234:	f854 8006 	ldr.w	r8, [r4, r6]
 8020238:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 802023c:	fa2f f788 	sxtb16	r7, r8
 8020240:	fa2f f898 	sxtb16	r8, r8, ror #8
 8020244:	fb27 110b 	smlad	r1, r7, fp, r1
 8020248:	fb27 0009 	smlad	r0, r7, r9, r0
 802024c:	fb28 110c 	smlad	r1, r8, ip, r1
 8020250:	fb28 000a 	smlad	r0, r8, sl, r0
 8020254:	e8b5 1e00 	ldmia.w	r5!, {r9, sl, fp, ip}
 8020258:	fb27 2209 	smlad	r2, r7, r9, r2
 802025c:	fb27 330b 	smlad	r3, r7, fp, r3
 8020260:	fb28 220a 	smlad	r2, r8, sl, r2
 8020264:	fb28 330c 	smlad	r3, r8, ip, r3
 8020268:	f8d4 8000 	ldr.w	r8, [r4]
 802026c:	fa2f f788 	sxtb16	r7, r8
 8020270:	fa2f f898 	sxtb16	r8, r8, ror #8
 8020274:	fb27 0009 	smlad	r0, r7, r9, r0
 8020278:	fb27 110b 	smlad	r1, r7, fp, r1
 802027c:	fb28 000a 	smlad	r0, r8, sl, r0
 8020280:	fb28 110c 	smlad	r1, r8, ip, r1
 8020284:	e8b5 1e00 	ldmia.w	r5!, {r9, sl, fp, ip}
 8020288:	fb27 2209 	smlad	r2, r7, r9, r2
 802028c:	fb27 330b 	smlad	r3, r7, fp, r3
 8020290:	fb28 220a 	smlad	r2, r8, sl, r2
 8020294:	fb28 330c 	smlad	r3, r8, ip, r3
 8020298:	f854 8006 	ldr.w	r8, [r4, r6]
 802029c:	fa2f f788 	sxtb16	r7, r8
 80202a0:	fa2f f898 	sxtb16	r8, r8, ror #8
 80202a4:	fb27 0009 	smlad	r0, r7, r9, r0
 80202a8:	fb27 110b 	smlad	r1, r7, fp, r1
 80202ac:	fb28 000a 	smlad	r0, r8, sl, r0
 80202b0:	fb28 110c 	smlad	r1, r8, ip, r1
 80202b4:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
 80202b8:	4444      	add	r4, r8
 80202ba:	bf00      	nop
 80202bc:	f8d4 8000 	ldr.w	r8, [r4]
 80202c0:	e8b5 1e00 	ldmia.w	r5!, {r9, sl, fp, ip}
 80202c4:	fa2f f788 	sxtb16	r7, r8
 80202c8:	fa2f f898 	sxtb16	r8, r8, ror #8
 80202cc:	fb27 330b 	smlad	r3, r7, fp, r3
 80202d0:	fb27 2209 	smlad	r2, r7, r9, r2
 80202d4:	fb28 220a 	smlad	r2, r8, sl, r2
 80202d8:	fb28 330c 	smlad	r3, r8, ip, r3
 80202dc:	f854 8006 	ldr.w	r8, [r4, r6]
 80202e0:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80202e4:	fa2f f788 	sxtb16	r7, r8
 80202e8:	fa2f f898 	sxtb16	r8, r8, ror #8
 80202ec:	fb27 110b 	smlad	r1, r7, fp, r1
 80202f0:	fb27 0009 	smlad	r0, r7, r9, r0
 80202f4:	fb28 110c 	smlad	r1, r8, ip, r1
 80202f8:	fb28 000a 	smlad	r0, r8, sl, r0
 80202fc:	e8b5 1e00 	ldmia.w	r5!, {r9, sl, fp, ip}
 8020300:	fb27 2209 	smlad	r2, r7, r9, r2
 8020304:	fb27 330b 	smlad	r3, r7, fp, r3
 8020308:	fb28 220a 	smlad	r2, r8, sl, r2
 802030c:	fb28 330c 	smlad	r3, r8, ip, r3
 8020310:	f8d4 8000 	ldr.w	r8, [r4]
 8020314:	fa2f f788 	sxtb16	r7, r8
 8020318:	fa2f f898 	sxtb16	r8, r8, ror #8
 802031c:	fb27 0009 	smlad	r0, r7, r9, r0
 8020320:	fb27 110b 	smlad	r1, r7, fp, r1
 8020324:	fb28 000a 	smlad	r0, r8, sl, r0
 8020328:	fb28 110c 	smlad	r1, r8, ip, r1
 802032c:	e8b5 1e00 	ldmia.w	r5!, {r9, sl, fp, ip}
 8020330:	fb27 2209 	smlad	r2, r7, r9, r2
 8020334:	fb27 330b 	smlad	r3, r7, fp, r3
 8020338:	fb28 220a 	smlad	r2, r8, sl, r2
 802033c:	fb28 330c 	smlad	r3, r8, ip, r3
 8020340:	f854 8006 	ldr.w	r8, [r4, r6]
 8020344:	fa2f f788 	sxtb16	r7, r8
 8020348:	fa2f f898 	sxtb16	r8, r8, ror #8
 802034c:	fb27 0009 	smlad	r0, r7, r9, r0
 8020350:	fb27 110b 	smlad	r1, r7, fp, r1
 8020354:	fb28 000a 	smlad	r0, r8, sl, r0
 8020358:	fb28 110c 	smlad	r1, r8, ip, r1
 802035c:	f8dd 8070 	ldr.w	r8, [sp, #112]	@ 0x70
 8020360:	f1be 0e01 	subs.w	lr, lr, #1
 8020364:	4444      	add	r4, r8
 8020366:	f47f af01 	bne.w	802016c <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x16c>
 802036a:	f016 0703 	ands.w	r7, r6, #3
 802036e:	f300 80ff 	bgt.w	8020570 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x570>
 8020372:	f8dd e010 	ldr.w	lr, [sp, #16]
 8020376:	f8dd a000 	ldr.w	sl, [sp]
 802037a:	f8dd b008 	ldr.w	fp, [sp, #8]
 802037e:	f8dd c018 	ldr.w	ip, [sp, #24]
 8020382:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8020384:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8020386:	f8dd 802c 	ldr.w	r8, [sp, #44]	@ 0x2c
 802038a:	44a8      	add	r8, r5
 802038c:	f1bc 0f00 	cmp.w	ip, #0
 8020390:	f040 832d 	bne.w	80209ee <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x9ee>
 8020394:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8020398:	ea4f 0040 	mov.w	r0, r0, lsl #1
 802039c:	fb52 e20a 	smmla	r2, r2, sl, lr
 80203a0:	fb50 e00a 	smmla	r0, r0, sl, lr
 80203a4:	fa42 f20b 	asr.w	r2, r2, fp
 80203a8:	fa40 f00b 	asr.w	r0, r0, fp
 80203ac:	f302 0207 	ssat	r2, #8, r2
 80203b0:	f300 0007 	ssat	r0, #8, r0
 80203b4:	702a      	strb	r2, [r5, #0]
 80203b6:	55e8      	strb	r0, [r5, r7]
 80203b8:	f8dd e014 	ldr.w	lr, [sp, #20]
 80203bc:	f8dd a004 	ldr.w	sl, [sp, #4]
 80203c0:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80203c4:	f8dd c01c 	ldr.w	ip, [sp, #28]
 80203c8:	f1bc 0f00 	cmp.w	ip, #0
 80203cc:	f040 8338 	bne.w	8020a40 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0xa40>
 80203d0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80203d4:	ea4f 0141 	mov.w	r1, r1, lsl #1
 80203d8:	fb53 e30a 	smmla	r3, r3, sl, lr
 80203dc:	fb51 e10a 	smmla	r1, r1, sl, lr
 80203e0:	fa43 f30b 	asr.w	r3, r3, fp
 80203e4:	fa41 f10b 	asr.w	r1, r1, fp
 80203e8:	f303 0307 	ssat	r3, #8, r3
 80203ec:	f301 0107 	ssat	r1, #8, r1
 80203f0:	f888 3000 	strb.w	r3, [r8]
 80203f4:	f808 1007 	strb.w	r1, [r8, r7]
 80203f8:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80203fa:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80203fc:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80203fe:	9e30      	ldr	r6, [sp, #192]	@ 0xc0
 8020400:	9d18      	ldr	r5, [sp, #96]	@ 0x60
 8020402:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8020406:	9215      	str	r2, [sp, #84]	@ 0x54
 8020408:	eb05 0546 	add.w	r5, r5, r6, lsl #1
 802040c:	9518      	str	r5, [sp, #96]	@ 0x60
 802040e:	3b01      	subs	r3, #1
 8020410:	9319      	str	r3, [sp, #100]	@ 0x64
 8020412:	f73f aea0 	bgt.w	8020156 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x156>
 8020416:	9b31      	ldr	r3, [sp, #196]	@ 0xc4
 8020418:	f013 0301 	ands.w	r3, r3, #1
 802041c:	f040 8141 	bne.w	80206a2 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x6a2>
 8020420:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020422:	441a      	add	r2, r3
 8020424:	9215      	str	r2, [sp, #84]	@ 0x54
 8020426:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8020428:	9933      	ldr	r1, [sp, #204]	@ 0xcc
 802042a:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 802042c:	440c      	add	r4, r1
 802042e:	9417      	str	r4, [sp, #92]	@ 0x5c
 8020430:	3b01      	subs	r3, #1
 8020432:	931a      	str	r3, [sp, #104]	@ 0x68
 8020434:	f47f ae89 	bne.w	802014a <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x14a>
 8020438:	9922      	ldr	r1, [sp, #136]	@ 0x88
 802043a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802043c:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8020440:	9212      	str	r2, [sp, #72]	@ 0x48
 8020442:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8020444:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8020446:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 802044a:	9213      	str	r2, [sp, #76]	@ 0x4c
 802044c:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802044e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8020450:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020452:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8020454:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8020456:	f100 0008 	add.w	r0, r0, #8
 802045a:	900d      	str	r0, [sp, #52]	@ 0x34
 802045c:	f102 0208 	add.w	r2, r2, #8
 8020460:	920f      	str	r2, [sp, #60]	@ 0x3c
 8020462:	f103 0308 	add.w	r3, r3, #8
 8020466:	9310      	str	r3, [sp, #64]	@ 0x40
 8020468:	f104 0404 	add.w	r4, r4, #4
 802046c:	42a5      	cmp	r5, r4
 802046e:	940e      	str	r4, [sp, #56]	@ 0x38
 8020470:	f47f ae26 	bne.w	80200c0 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0xc0>
 8020474:	9f13      	ldr	r7, [sp, #76]	@ 0x4c
 8020476:	9b2f      	ldr	r3, [sp, #188]	@ 0xbc
 8020478:	9932      	ldr	r1, [sp, #200]	@ 0xc8
 802047a:	9d31      	ldr	r5, [sp, #196]	@ 0xc4
 802047c:	f013 0301 	ands.w	r3, r3, #1
 8020480:	d071      	beq.n	8020566 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x566>
 8020482:	2900      	cmp	r1, #0
 8020484:	d06f      	beq.n	8020566 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x566>
 8020486:	911a      	str	r1, [sp, #104]	@ 0x68
 8020488:	2d00      	cmp	r5, #0
 802048a:	d06c      	beq.n	8020566 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x566>
 802048c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802048e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020490:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
 8020494:	6818      	ldr	r0, [r3, #0]
 8020496:	6821      	ldr	r1, [r4, #0]
 8020498:	f9b8 b000 	ldrsh.w	fp, [r8]
 802049c:	9100      	str	r1, [sp, #0]
 802049e:	f1bb 0f00 	cmp.w	fp, #0
 80204a2:	bfcc      	ite	gt
 80204a4:	2200      	movgt	r2, #0
 80204a6:	f04f 32ff 	movle.w	r2, #4294967295	@ 0xffffffff
 80204aa:	f1bb 0f15 	cmp.w	fp, #21
 80204ae:	bfc8      	it	gt
 80204b0:	2201      	movgt	r2, #1
 80204b2:	9b35      	ldr	r3, [sp, #212]	@ 0xd4
 80204b4:	f003 0303 	and.w	r3, r3, #3
 80204b8:	2b03      	cmp	r3, #3
 80204ba:	bf03      	ittte	eq
 80204bc:	3703      	addeq	r7, #3
 80204be:	197f      	addeq	r7, r7, r5
 80204c0:	2602      	moveq	r6, #2
 80204c2:	2600      	movne	r6, #0
 80204c4:	960b      	str	r6, [sp, #44]	@ 0x2c
 80204c6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80204c8:	f8dd a0cc 	ldr.w	sl, [sp, #204]	@ 0xcc
 80204cc:	9e34      	ldr	r6, [sp, #208]	@ 0xd0
 80204ce:	681c      	ldr	r4, [r3, #0]
 80204d0:	f8dd 90c0 	ldr.w	r9, [sp, #192]	@ 0xc0
 80204d4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80204d6:	9317      	str	r3, [sp, #92]	@ 0x5c
 80204d8:	9410      	str	r4, [sp, #64]	@ 0x40
 80204da:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80204de:	f8dd c05c 	ldr.w	ip, [sp, #92]	@ 0x5c
 80204e2:	9931      	ldr	r1, [sp, #196]	@ 0xc4
 80204e4:	9119      	str	r1, [sp, #100]	@ 0x64
 80204e6:	9910      	ldr	r1, [sp, #64]	@ 0x40
 80204e8:	f8dd 8048 	ldr.w	r8, [sp, #72]	@ 0x48
 80204ec:	f1b9 0f00 	cmp.w	r9, #0
 80204f0:	dd1a      	ble.n	8020528 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x528>
 80204f2:	464d      	mov	r5, r9
 80204f4:	f91c 301a 	ldrsb.w	r3, [ip, sl, lsl #1]
 80204f8:	f918 4019 	ldrsb.w	r4, [r8, r9, lsl #1]
 80204fc:	eba3 0306 	sub.w	r3, r3, r6
 8020500:	3d01      	subs	r5, #1
 8020502:	fb04 1103 	mla	r1, r4, r3, r1
 8020506:	f91c 300a 	ldrsb.w	r3, [ip, sl]
 802050a:	f918 4009 	ldrsb.w	r4, [r8, r9]
 802050e:	eba3 0306 	sub.w	r3, r3, r6
 8020512:	fb04 1103 	mla	r1, r4, r3, r1
 8020516:	f91c 3b01 	ldrsb.w	r3, [ip], #1
 802051a:	f918 4b01 	ldrsb.w	r4, [r8], #1
 802051e:	eba3 0306 	sub.w	r3, r3, r6
 8020522:	fb04 1103 	mla	r1, r4, r3, r1
 8020526:	d1e5      	bne.n	80204f4 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x4f4>
 8020528:	9c00      	ldr	r4, [sp, #0]
 802052a:	2a00      	cmp	r2, #0
 802052c:	f040 82b1 	bne.w	8020a92 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0xa92>
 8020530:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8020534:	fb51 0104 	smmla	r1, r1, r4, r0
 8020538:	fa41 f10b 	asr.w	r1, r1, fp
 802053c:	f301 0107 	ssat	r1, #8, r1
 8020540:	7039      	strb	r1, [r7, #0]
 8020542:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8020544:	9930      	ldr	r1, [sp, #192]	@ 0xc0
 8020546:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8020548:	4427      	add	r7, r4
 802054a:	ebac 0c41 	sub.w	ip, ip, r1, lsl #1
 802054e:	3b01      	subs	r3, #1
 8020550:	9319      	str	r3, [sp, #100]	@ 0x64
 8020552:	d1c8      	bne.n	80204e6 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x4e6>
 8020554:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8020556:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8020558:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 802055a:	440f      	add	r7, r1
 802055c:	4454      	add	r4, sl
 802055e:	9417      	str	r4, [sp, #92]	@ 0x5c
 8020560:	3b01      	subs	r3, #1
 8020562:	931a      	str	r3, [sp, #104]	@ 0x68
 8020564:	d1bb      	bne.n	80204de <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x4de>
 8020566:	f04f 0000 	mov.w	r0, #0
 802056a:	b024      	add	sp, #144	@ 0x90
 802056c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020570:	9f23      	ldr	r7, [sp, #140]	@ 0x8c
 8020572:	2f00      	cmp	r7, #0
 8020574:	f43f aefd 	beq.w	8020372 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x372>
 8020578:	f8dd e06c 	ldr.w	lr, [sp, #108]	@ 0x6c
 802057c:	f8dd 9074 	ldr.w	r9, [sp, #116]	@ 0x74
 8020580:	f994 c000 	ldrsb.w	ip, [r4]
 8020584:	f914 8006 	ldrsb.w	r8, [r4, r6]
 8020588:	f935 bb02 	ldrsh.w	fp, [r5], #2
 802058c:	f935 ab02 	ldrsh.w	sl, [r5], #2
 8020590:	fb1b 220c 	smlabb	r2, fp, ip, r2
 8020594:	fb1b 0008 	smlabb	r0, fp, r8, r0
 8020598:	fb1a 330c 	smlabb	r3, sl, ip, r3
 802059c:	fb1a 1108 	smlabb	r1, sl, r8, r1
 80205a0:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80205a4:	f935 bb02 	ldrsh.w	fp, [r5], #2
 80205a8:	f935 ab02 	ldrsh.w	sl, [r5], #2
 80205ac:	f994 c000 	ldrsb.w	ip, [r4]
 80205b0:	fb1b 2208 	smlabb	r2, fp, r8, r2
 80205b4:	fb1b 000c 	smlabb	r0, fp, ip, r0
 80205b8:	fb1a 3308 	smlabb	r3, sl, r8, r3
 80205bc:	fb1a 110c 	smlabb	r1, sl, ip, r1
 80205c0:	f914 8006 	ldrsb.w	r8, [r4, r6]
 80205c4:	f935 bb02 	ldrsh.w	fp, [r5], #2
 80205c8:	f935 ab02 	ldrsh.w	sl, [r5], #2
 80205cc:	fb1b 0008 	smlabb	r0, fp, r8, r0
 80205d0:	fb1b 220c 	smlabb	r2, fp, ip, r2
 80205d4:	fb1a 330c 	smlabb	r3, sl, ip, r3
 80205d8:	fb1a 1108 	smlabb	r1, sl, r8, r1
 80205dc:	4474      	add	r4, lr
 80205de:	f994 c000 	ldrsb.w	ip, [r4]
 80205e2:	f914 8006 	ldrsb.w	r8, [r4, r6]
 80205e6:	f935 bb02 	ldrsh.w	fp, [r5], #2
 80205ea:	f935 ab02 	ldrsh.w	sl, [r5], #2
 80205ee:	fb1b 220c 	smlabb	r2, fp, ip, r2
 80205f2:	fb1b 0008 	smlabb	r0, fp, r8, r0
 80205f6:	fb1a 330c 	smlabb	r3, sl, ip, r3
 80205fa:	fb1a 1108 	smlabb	r1, sl, r8, r1
 80205fe:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8020602:	f935 bb02 	ldrsh.w	fp, [r5], #2
 8020606:	f935 ab02 	ldrsh.w	sl, [r5], #2
 802060a:	f994 c000 	ldrsb.w	ip, [r4]
 802060e:	fb1b 2208 	smlabb	r2, fp, r8, r2
 8020612:	fb1b 000c 	smlabb	r0, fp, ip, r0
 8020616:	fb1a 3308 	smlabb	r3, sl, r8, r3
 802061a:	fb1a 110c 	smlabb	r1, sl, ip, r1
 802061e:	f914 8006 	ldrsb.w	r8, [r4, r6]
 8020622:	f935 bb02 	ldrsh.w	fp, [r5], #2
 8020626:	f935 ab02 	ldrsh.w	sl, [r5], #2
 802062a:	fb1b 0008 	smlabb	r0, fp, r8, r0
 802062e:	fb1b 220c 	smlabb	r2, fp, ip, r2
 8020632:	fb1a 330c 	smlabb	r3, sl, ip, r3
 8020636:	fb1a 1108 	smlabb	r1, sl, r8, r1
 802063a:	4474      	add	r4, lr
 802063c:	f994 c000 	ldrsb.w	ip, [r4]
 8020640:	f914 8006 	ldrsb.w	r8, [r4, r6]
 8020644:	f935 bb02 	ldrsh.w	fp, [r5], #2
 8020648:	f935 ab02 	ldrsh.w	sl, [r5], #2
 802064c:	fb1b 220c 	smlabb	r2, fp, ip, r2
 8020650:	fb1b 0008 	smlabb	r0, fp, r8, r0
 8020654:	fb1a 330c 	smlabb	r3, sl, ip, r3
 8020658:	fb1a 1108 	smlabb	r1, sl, r8, r1
 802065c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8020660:	f935 bb02 	ldrsh.w	fp, [r5], #2
 8020664:	f935 ab02 	ldrsh.w	sl, [r5], #2
 8020668:	f994 c000 	ldrsb.w	ip, [r4]
 802066c:	fb1b 2208 	smlabb	r2, fp, r8, r2
 8020670:	fb1b 000c 	smlabb	r0, fp, ip, r0
 8020674:	fb1a 3308 	smlabb	r3, sl, r8, r3
 8020678:	fb1a 110c 	smlabb	r1, sl, ip, r1
 802067c:	f914 8006 	ldrsb.w	r8, [r4, r6]
 8020680:	f935 bb02 	ldrsh.w	fp, [r5], #2
 8020684:	f935 ab02 	ldrsh.w	sl, [r5], #2
 8020688:	fb1b 0008 	smlabb	r0, fp, r8, r0
 802068c:	fb1b 220c 	smlabb	r2, fp, ip, r2
 8020690:	fb1a 330c 	smlabb	r3, sl, ip, r3
 8020694:	fb1a 1108 	smlabb	r1, sl, r8, r1
 8020698:	444c      	add	r4, r9
 802069a:	3f01      	subs	r7, #1
 802069c:	f73f af70 	bgt.w	8020580 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x580>
 80206a0:	e667      	b.n	8020372 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x372>
 80206a2:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 80206a4:	9b31      	ldr	r3, [sp, #196]	@ 0xc4
 80206a6:	2b01      	cmp	r3, #1
 80206a8:	bf1e      	ittt	ne
 80206aa:	9b1b      	ldrne	r3, [sp, #108]	@ 0x6c
 80206ac:	18c0      	addne	r0, r0, r3
 80206ae:	1b80      	subne	r0, r0, r6
 80206b0:	e9dd e508 	ldrd	lr, r5, [sp, #32]
 80206b4:	f8dd c0cc 	ldr.w	ip, [sp, #204]	@ 0xcc
 80206b8:	ea4f 0a4c 	mov.w	sl, ip, lsl #1
 80206bc:	f1ca 0a04 	rsb	sl, sl, #4
 80206c0:	9b38      	ldr	r3, [sp, #224]	@ 0xe0
 80206c2:	ea5f 0ba6 	movs.w	fp, r6, asr #2
 80206c6:	f000 8091 	beq.w	80207ec <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x7ec>
 80206ca:	6802      	ldr	r2, [r0, #0]
 80206cc:	e8b3 0390 	ldmia.w	r3!, {r4, r7, r8, r9}
 80206d0:	fa2f f182 	sxtb16	r1, r2
 80206d4:	fa2f f292 	sxtb16	r2, r2, ror #8
 80206d8:	fb21 ee04 	smlad	lr, r1, r4, lr
 80206dc:	fb22 ee07 	smlad	lr, r2, r7, lr
 80206e0:	fb22 5509 	smlad	r5, r2, r9, r5
 80206e4:	fb21 5508 	smlad	r5, r1, r8, r5
 80206e8:	5982      	ldr	r2, [r0, r6]
 80206ea:	e8b3 0390 	ldmia.w	r3!, {r4, r7, r8, r9}
 80206ee:	fa2f f182 	sxtb16	r1, r2
 80206f2:	fa2f f292 	sxtb16	r2, r2, ror #8
 80206f6:	fb21 ee04 	smlad	lr, r1, r4, lr
 80206fa:	fb22 ee07 	smlad	lr, r2, r7, lr
 80206fe:	fb22 5509 	smlad	r5, r2, r9, r5
 8020702:	fb21 5508 	smlad	r5, r1, r8, r5
 8020706:	f850 2016 	ldr.w	r2, [r0, r6, lsl #1]
 802070a:	e8b3 0390 	ldmia.w	r3!, {r4, r7, r8, r9}
 802070e:	fa2f f182 	sxtb16	r1, r2
 8020712:	fa2f f292 	sxtb16	r2, r2, ror #8
 8020716:	fb21 ee04 	smlad	lr, r1, r4, lr
 802071a:	fb22 ee07 	smlad	lr, r2, r7, lr
 802071e:	fb22 5509 	smlad	r5, r2, r9, r5
 8020722:	fb21 5508 	smlad	r5, r1, r8, r5
 8020726:	4460      	add	r0, ip
 8020728:	6802      	ldr	r2, [r0, #0]
 802072a:	e8b3 0390 	ldmia.w	r3!, {r4, r7, r8, r9}
 802072e:	fa2f f182 	sxtb16	r1, r2
 8020732:	fa2f f292 	sxtb16	r2, r2, ror #8
 8020736:	fb21 ee04 	smlad	lr, r1, r4, lr
 802073a:	fb22 ee07 	smlad	lr, r2, r7, lr
 802073e:	fb22 5509 	smlad	r5, r2, r9, r5
 8020742:	fb21 5508 	smlad	r5, r1, r8, r5
 8020746:	5982      	ldr	r2, [r0, r6]
 8020748:	e8b3 0390 	ldmia.w	r3!, {r4, r7, r8, r9}
 802074c:	fa2f f182 	sxtb16	r1, r2
 8020750:	fa2f f292 	sxtb16	r2, r2, ror #8
 8020754:	fb21 ee04 	smlad	lr, r1, r4, lr
 8020758:	fb22 ee07 	smlad	lr, r2, r7, lr
 802075c:	fb22 5509 	smlad	r5, r2, r9, r5
 8020760:	fb21 5508 	smlad	r5, r1, r8, r5
 8020764:	f850 2016 	ldr.w	r2, [r0, r6, lsl #1]
 8020768:	e8b3 0390 	ldmia.w	r3!, {r4, r7, r8, r9}
 802076c:	fa2f f182 	sxtb16	r1, r2
 8020770:	fa2f f292 	sxtb16	r2, r2, ror #8
 8020774:	fb21 ee04 	smlad	lr, r1, r4, lr
 8020778:	fb22 ee07 	smlad	lr, r2, r7, lr
 802077c:	fb22 5509 	smlad	r5, r2, r9, r5
 8020780:	fb21 5508 	smlad	r5, r1, r8, r5
 8020784:	4460      	add	r0, ip
 8020786:	6802      	ldr	r2, [r0, #0]
 8020788:	e8b3 0390 	ldmia.w	r3!, {r4, r7, r8, r9}
 802078c:	fa2f f182 	sxtb16	r1, r2
 8020790:	fa2f f292 	sxtb16	r2, r2, ror #8
 8020794:	fb21 ee04 	smlad	lr, r1, r4, lr
 8020798:	fb22 ee07 	smlad	lr, r2, r7, lr
 802079c:	fb22 5509 	smlad	r5, r2, r9, r5
 80207a0:	fb21 5508 	smlad	r5, r1, r8, r5
 80207a4:	5982      	ldr	r2, [r0, r6]
 80207a6:	e8b3 0390 	ldmia.w	r3!, {r4, r7, r8, r9}
 80207aa:	fa2f f182 	sxtb16	r1, r2
 80207ae:	fa2f f292 	sxtb16	r2, r2, ror #8
 80207b2:	fb21 ee04 	smlad	lr, r1, r4, lr
 80207b6:	fb22 ee07 	smlad	lr, r2, r7, lr
 80207ba:	fb22 5509 	smlad	r5, r2, r9, r5
 80207be:	fb21 5508 	smlad	r5, r1, r8, r5
 80207c2:	f850 2016 	ldr.w	r2, [r0, r6, lsl #1]
 80207c6:	e8b3 0390 	ldmia.w	r3!, {r4, r7, r8, r9}
 80207ca:	fa2f f182 	sxtb16	r1, r2
 80207ce:	fa2f f292 	sxtb16	r2, r2, ror #8
 80207d2:	fb21 ee04 	smlad	lr, r1, r4, lr
 80207d6:	fb22 ee07 	smlad	lr, r2, r7, lr
 80207da:	fb22 5509 	smlad	r5, r2, r9, r5
 80207de:	fb21 5508 	smlad	r5, r1, r8, r5
 80207e2:	4450      	add	r0, sl
 80207e4:	f1bb 0b01 	subs.w	fp, fp, #1
 80207e8:	f73f af6f 	bgt.w	80206ca <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x6ca>
 80207ec:	f016 0b03 	ands.w	fp, r6, #3
 80207f0:	d05f      	beq.n	80208b2 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x8b2>
 80207f2:	f990 1000 	ldrsb.w	r1, [r0]
 80207f6:	5782      	ldrsb	r2, [r0, r6]
 80207f8:	f910 a016 	ldrsb.w	sl, [r0, r6, lsl #1]
 80207fc:	f933 4b02 	ldrsh.w	r4, [r3], #2
 8020800:	f933 7b02 	ldrsh.w	r7, [r3], #2
 8020804:	f933 8b02 	ldrsh.w	r8, [r3], #2
 8020808:	f933 9b02 	ldrsh.w	r9, [r3], #2
 802080c:	fb11 ee04 	smlabb	lr, r1, r4, lr
 8020810:	fb11 5507 	smlabb	r5, r1, r7, r5
 8020814:	fb12 ee08 	smlabb	lr, r2, r8, lr
 8020818:	fb12 5509 	smlabb	r5, r2, r9, r5
 802081c:	f933 4b02 	ldrsh.w	r4, [r3], #2
 8020820:	f933 7b02 	ldrsh.w	r7, [r3], #2
 8020824:	fb1a ee04 	smlabb	lr, sl, r4, lr
 8020828:	fb1a 5507 	smlabb	r5, sl, r7, r5
 802082c:	4460      	add	r0, ip
 802082e:	f990 1000 	ldrsb.w	r1, [r0]
 8020832:	5782      	ldrsb	r2, [r0, r6]
 8020834:	f910 a016 	ldrsb.w	sl, [r0, r6, lsl #1]
 8020838:	f933 4b02 	ldrsh.w	r4, [r3], #2
 802083c:	f933 7b02 	ldrsh.w	r7, [r3], #2
 8020840:	f933 8b02 	ldrsh.w	r8, [r3], #2
 8020844:	f933 9b02 	ldrsh.w	r9, [r3], #2
 8020848:	fb11 ee04 	smlabb	lr, r1, r4, lr
 802084c:	fb11 5507 	smlabb	r5, r1, r7, r5
 8020850:	fb12 ee08 	smlabb	lr, r2, r8, lr
 8020854:	fb12 5509 	smlabb	r5, r2, r9, r5
 8020858:	f933 4b02 	ldrsh.w	r4, [r3], #2
 802085c:	f933 7b02 	ldrsh.w	r7, [r3], #2
 8020860:	fb1a ee04 	smlabb	lr, sl, r4, lr
 8020864:	fb1a 5507 	smlabb	r5, sl, r7, r5
 8020868:	4460      	add	r0, ip
 802086a:	f990 1000 	ldrsb.w	r1, [r0]
 802086e:	5782      	ldrsb	r2, [r0, r6]
 8020870:	f910 a016 	ldrsb.w	sl, [r0, r6, lsl #1]
 8020874:	f933 4b02 	ldrsh.w	r4, [r3], #2
 8020878:	f933 7b02 	ldrsh.w	r7, [r3], #2
 802087c:	f933 8b02 	ldrsh.w	r8, [r3], #2
 8020880:	f933 9b02 	ldrsh.w	r9, [r3], #2
 8020884:	fb11 ee04 	smlabb	lr, r1, r4, lr
 8020888:	fb11 5507 	smlabb	r5, r1, r7, r5
 802088c:	fb12 ee08 	smlabb	lr, r2, r8, lr
 8020890:	fb12 5509 	smlabb	r5, r2, r9, r5
 8020894:	f933 4b02 	ldrsh.w	r4, [r3], #2
 8020898:	f933 7b02 	ldrsh.w	r7, [r3], #2
 802089c:	fb1a ee04 	smlabb	lr, sl, r4, lr
 80208a0:	fb1a 5507 	smlabb	r5, sl, r7, r5
 80208a4:	eba0 004c 	sub.w	r0, r0, ip, lsl #1
 80208a8:	f100 0001 	add.w	r0, r0, #1
 80208ac:	f1bb 0b01 	subs.w	fp, fp, #1
 80208b0:	dc9f      	bgt.n	80207f2 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x7f2>
 80208b2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80208b4:	9915      	ldr	r1, [sp, #84]	@ 0x54
 80208b6:	eb01 0203 	add.w	r2, r1, r3
 80208ba:	f8dd a000 	ldr.w	sl, [sp]
 80208be:	9c04      	ldr	r4, [sp, #16]
 80208c0:	9b02      	ldr	r3, [sp, #8]
 80208c2:	9806      	ldr	r0, [sp, #24]
 80208c4:	2800      	cmp	r0, #0
 80208c6:	f040 8118 	bne.w	8020afa <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0xafa>
 80208ca:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 80208ce:	fb5e 4e0a 	smmla	lr, lr, sl, r4
 80208d2:	fa4e fe03 	asr.w	lr, lr, r3
 80208d6:	f30e 0e07 	ssat	lr, #8, lr
 80208da:	f881 e000 	strb.w	lr, [r1]
 80208de:	f8dd a004 	ldr.w	sl, [sp, #4]
 80208e2:	9c05      	ldr	r4, [sp, #20]
 80208e4:	9b03      	ldr	r3, [sp, #12]
 80208e6:	9807      	ldr	r0, [sp, #28]
 80208e8:	2800      	cmp	r0, #0
 80208ea:	f040 80ec 	bne.w	8020ac6 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0xac6>
 80208ee:	ea4f 0545 	mov.w	r5, r5, lsl #1
 80208f2:	fb55 450a 	smmla	r5, r5, sl, r4
 80208f6:	fa45 f503 	asr.w	r5, r5, r3
 80208fa:	f305 0507 	ssat	r5, #8, r5
 80208fe:	7015      	strb	r5, [r2, #0]
 8020900:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020902:	9d1e      	ldr	r5, [sp, #120]	@ 0x78
 8020904:	2b00      	cmp	r3, #0
 8020906:	bf14      	ite	ne
 8020908:	2303      	movne	r3, #3
 802090a:	2301      	moveq	r3, #1
 802090c:	2d00      	cmp	r5, #0
 802090e:	bf08      	it	eq
 8020910:	9b2f      	ldreq	r3, [sp, #188]	@ 0xbc
 8020912:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8020914:	441a      	add	r2, r3
 8020916:	9215      	str	r2, [sp, #84]	@ 0x54
 8020918:	e585      	b.n	8020426 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x426>
 802091a:	9938      	ldr	r1, [sp, #224]	@ 0xe0
 802091c:	f04f 0300 	mov.w	r3, #0
 8020920:	461a      	mov	r2, r3
 8020922:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8020924:	b198      	cbz	r0, 802094e <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x94e>
 8020926:	e8b1 1e00 	ldmia.w	r1!, {r9, sl, fp, ip}
 802092a:	fa02 f289 	sxtah	r2, r2, r9
 802092e:	fa02 f2a9 	sxtah	r2, r2, r9, ror #16
 8020932:	fa02 f28a 	sxtah	r2, r2, sl
 8020936:	fa02 f2aa 	sxtah	r2, r2, sl, ror #16
 802093a:	fa03 f38b 	sxtah	r3, r3, fp
 802093e:	fa03 f3ab 	sxtah	r3, r3, fp, ror #16
 8020942:	fa03 f38c 	sxtah	r3, r3, ip
 8020946:	fa03 f3ac 	sxtah	r3, r3, ip, ror #16
 802094a:	3801      	subs	r0, #1
 802094c:	d1eb      	bne.n	8020926 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x926>
 802094e:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8020950:	b138      	cbz	r0, 8020962 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x962>
 8020952:	f851 4b04 	ldr.w	r4, [r1], #4
 8020956:	fa02 f284 	sxtah	r2, r2, r4
 802095a:	fa03 f3a4 	sxtah	r3, r3, r4, ror #16
 802095e:	3801      	subs	r0, #1
 8020960:	d1f7      	bne.n	8020952 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x952>
 8020962:	f1c2 0200 	rsb	r2, r2, #0
 8020966:	f1c3 0300 	rsb	r3, r3, #0
 802096a:	9934      	ldr	r1, [sp, #208]	@ 0xd0
 802096c:	fb01 f202 	mul.w	r2, r1, r2
 8020970:	fb01 f003 	mul.w	r0, r1, r3
 8020974:	f7ff bbcf 	b.w	8020116 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x116>
 8020978:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802097a:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 802097c:	9a38      	ldr	r2, [sp, #224]	@ 0xe0
 802097e:	ea5f 0ba6 	movs.w	fp, r6, asr #2
 8020982:	d019      	beq.n	80209b8 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x9b8>
 8020984:	f04f 0a09 	mov.w	sl, #9
 8020988:	6805      	ldr	r5, [r0, #0]
 802098a:	f850 8004 	ldr.w	r8, [r0, r4]
 802098e:	fa2f f795 	sxtb16	r7, r5, ror #8
 8020992:	fa2f f585 	sxtb16	r5, r5
 8020996:	fa2f f998 	sxtb16	r9, r8, ror #8
 802099a:	fa2f f888 	sxtb16	r8, r8
 802099e:	e8a2 03a0 	stmia.w	r2!, {r5, r7, r8, r9}
 80209a2:	4430      	add	r0, r6
 80209a4:	f1ba 0a01 	subs.w	sl, sl, #1
 80209a8:	dcee      	bgt.n	8020988 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x988>
 80209aa:	eba0 0004 	sub.w	r0, r0, r4
 80209ae:	f100 0004 	add.w	r0, r0, #4
 80209b2:	f1bb 0b01 	subs.w	fp, fp, #1
 80209b6:	dce5      	bgt.n	8020984 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x984>
 80209b8:	f016 0b03 	ands.w	fp, r6, #3
 80209bc:	f43f aba5 	beq.w	802010a <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x10a>
 80209c0:	f04f 0a09 	mov.w	sl, #9
 80209c4:	f990 5000 	ldrsb.w	r5, [r0]
 80209c8:	f910 8004 	ldrsb.w	r8, [r0, r4]
 80209cc:	f822 5b02 	strh.w	r5, [r2], #2
 80209d0:	f822 8b02 	strh.w	r8, [r2], #2
 80209d4:	4430      	add	r0, r6
 80209d6:	f1ba 0a01 	subs.w	sl, sl, #1
 80209da:	dcf3      	bgt.n	80209c4 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x9c4>
 80209dc:	eba0 0004 	sub.w	r0, r0, r4
 80209e0:	f100 0001 	add.w	r0, r0, #1
 80209e4:	f1bb 0b01 	subs.w	fp, fp, #1
 80209e8:	dcea      	bgt.n	80209c0 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x9c0>
 80209ea:	f7ff bb8e 	b.w	802010a <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x10a>
 80209ee:	f11c 0c01 	adds.w	ip, ip, #1
 80209f2:	d014      	beq.n	8020a1e <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0xa1e>
 80209f4:	f04f 0c01 	mov.w	ip, #1
 80209f8:	fa0c fc0b 	lsl.w	ip, ip, fp
 80209fc:	ea4f 0cac 	mov.w	ip, ip, asr #2
 8020a00:	fb52 c20a 	smmla	r2, r2, sl, ip
 8020a04:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8020a08:	fa42 f20b 	asr.w	r2, r2, fp
 8020a0c:	4472      	add	r2, lr
 8020a0e:	fb50 c00a 	smmla	r0, r0, sl, ip
 8020a12:	ea4f 0040 	mov.w	r0, r0, lsl #1
 8020a16:	fa40 f00b 	asr.w	r0, r0, fp
 8020a1a:	4470      	add	r0, lr
 8020a1c:	e4c6      	b.n	80203ac <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x3ac>
 8020a1e:	f1cb 0c01 	rsb	ip, fp, #1
 8020a22:	fa02 f20c 	lsl.w	r2, r2, ip
 8020a26:	f302 021f 	ssat	r2, #32, r2
 8020a2a:	fb52 f21a 	smmulr	r2, r2, sl
 8020a2e:	fa00 f00c 	lsl.w	r0, r0, ip
 8020a32:	f300 001f 	ssat	r0, #32, r0
 8020a36:	fb50 f01a 	smmulr	r0, r0, sl
 8020a3a:	4472      	add	r2, lr
 8020a3c:	4470      	add	r0, lr
 8020a3e:	e4b5      	b.n	80203ac <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x3ac>
 8020a40:	f11c 0c01 	adds.w	ip, ip, #1
 8020a44:	d014      	beq.n	8020a70 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0xa70>
 8020a46:	f04f 0c01 	mov.w	ip, #1
 8020a4a:	fa0c fc0b 	lsl.w	ip, ip, fp
 8020a4e:	ea4f 0cac 	mov.w	ip, ip, asr #2
 8020a52:	fb53 c30a 	smmla	r3, r3, sl, ip
 8020a56:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8020a5a:	fa43 f30b 	asr.w	r3, r3, fp
 8020a5e:	4473      	add	r3, lr
 8020a60:	fb51 c10a 	smmla	r1, r1, sl, ip
 8020a64:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8020a68:	fa41 f10b 	asr.w	r1, r1, fp
 8020a6c:	4471      	add	r1, lr
 8020a6e:	e4bb      	b.n	80203e8 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x3e8>
 8020a70:	f1cb 0c01 	rsb	ip, fp, #1
 8020a74:	fa03 f30c 	lsl.w	r3, r3, ip
 8020a78:	f303 031f 	ssat	r3, #32, r3
 8020a7c:	fb53 f31a 	smmulr	r3, r3, sl
 8020a80:	fa01 f10c 	lsl.w	r1, r1, ip
 8020a84:	f301 011f 	ssat	r1, #32, r1
 8020a88:	fb51 f11a 	smmulr	r1, r1, sl
 8020a8c:	4473      	add	r3, lr
 8020a8e:	4471      	add	r1, lr
 8020a90:	e4aa      	b.n	80203e8 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x3e8>
 8020a92:	1c53      	adds	r3, r2, #1
 8020a94:	d00d      	beq.n	8020ab2 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0xab2>
 8020a96:	f04f 0301 	mov.w	r3, #1
 8020a9a:	fa03 f30b 	lsl.w	r3, r3, fp
 8020a9e:	ea4f 03a3 	mov.w	r3, r3, asr #2
 8020aa2:	fb51 3104 	smmla	r1, r1, r4, r3
 8020aa6:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8020aaa:	fa41 f10b 	asr.w	r1, r1, fp
 8020aae:	4401      	add	r1, r0
 8020ab0:	e544      	b.n	802053c <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x53c>
 8020ab2:	f1cb 0301 	rsb	r3, fp, #1
 8020ab6:	fa01 f103 	lsl.w	r1, r1, r3
 8020aba:	f301 011f 	ssat	r1, #32, r1
 8020abe:	fb51 f114 	smmulr	r1, r1, r4
 8020ac2:	4401      	add	r1, r0
 8020ac4:	e53a      	b.n	802053c <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x53c>
 8020ac6:	3001      	adds	r0, #1
 8020ac8:	d00d      	beq.n	8020ae6 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0xae6>
 8020aca:	f04f 0001 	mov.w	r0, #1
 8020ace:	fa00 f003 	lsl.w	r0, r0, r3
 8020ad2:	ea4f 00a0 	mov.w	r0, r0, asr #2
 8020ad6:	fb55 050a 	smmla	r5, r5, sl, r0
 8020ada:	ea4f 0545 	mov.w	r5, r5, lsl #1
 8020ade:	fa45 f503 	asr.w	r5, r5, r3
 8020ae2:	4425      	add	r5, r4
 8020ae4:	e709      	b.n	80208fa <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x8fa>
 8020ae6:	f1c3 0001 	rsb	r0, r3, #1
 8020aea:	fa05 f500 	lsl.w	r5, r5, r0
 8020aee:	f305 051f 	ssat	r5, #32, r5
 8020af2:	fb55 f51a 	smmulr	r5, r5, sl
 8020af6:	4425      	add	r5, r4
 8020af8:	e6ff      	b.n	80208fa <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x8fa>
 8020afa:	3001      	adds	r0, #1
 8020afc:	d00d      	beq.n	8020b1a <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0xb1a>
 8020afe:	f04f 0001 	mov.w	r0, #1
 8020b02:	fa00 f003 	lsl.w	r0, r0, r3
 8020b06:	ea4f 00a0 	mov.w	r0, r0, asr #2
 8020b0a:	fb5e 0e0a 	smmla	lr, lr, sl, r0
 8020b0e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8020b12:	fa4e fe03 	asr.w	lr, lr, r3
 8020b16:	44a6      	add	lr, r4
 8020b18:	e6dd      	b.n	80208d6 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x8d6>
 8020b1a:	f1c3 0001 	rsb	r0, r3, #1
 8020b1e:	fa0e fe00 	lsl.w	lr, lr, r0
 8020b22:	f30e 0e1f 	ssat	lr, #32, lr
 8020b26:	fb5e fe1a 	smmulr	lr, lr, sl
 8020b2a:	44a6      	add	lr, r4
 8020b2c:	e6d3      	b.n	80208d6 <st_sssa8_ch_nn_mat_mult_deep_conv2d_3x3+0x8d6>
 8020b2e:	bf00      	nop

08020b30 <st_sssa8_ch_nn_mat_mult_kernel_opt>:
 8020b30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020b34:	b086      	sub	sp, #24
 8020b36:	f89d 7058 	ldrb.w	r7, [sp, #88]	@ 0x58
 8020b3a:	9100      	str	r1, [sp, #0]
 8020b3c:	9203      	str	r2, [sp, #12]
 8020b3e:	2f00      	cmp	r7, #0
 8020b40:	9305      	str	r3, [sp, #20]
 8020b42:	bf18      	it	ne
 8020b44:	2301      	movne	r3, #1
 8020b46:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020b48:	fb04 3303 	mla	r3, r4, r3, r3
 8020b4c:	9304      	str	r3, [sp, #16]
 8020b4e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8020b50:	bf14      	ite	ne
 8020b52:	462f      	movne	r7, r5
 8020b54:	2701      	moveq	r7, #1
 8020b56:	9701      	str	r7, [sp, #4]
 8020b58:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8020b5c:	085b      	lsrs	r3, r3, #1
 8020b5e:	f000 809f 	beq.w	8020ca0 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x170>
 8020b62:	f8dd b050 	ldr.w	fp, [sp, #80]	@ 0x50
 8020b66:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8020b68:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8020b6c:	9302      	str	r3, [sp, #8]
 8020b6e:	f8dd e048 	ldr.w	lr, [sp, #72]	@ 0x48
 8020b72:	9f03      	ldr	r7, [sp, #12]
 8020b74:	ea5f 089e 	movs.w	r8, lr, lsr #2
 8020b78:	f8dd c000 	ldr.w	ip, [sp]
 8020b7c:	f857 6b04 	ldr.w	r6, [r7], #4
 8020b80:	f857 3b04 	ldr.w	r3, [r7], #4
 8020b84:	9703      	str	r7, [sp, #12]
 8020b86:	461a      	mov	r2, r3
 8020b88:	4631      	mov	r1, r6
 8020b8a:	d022      	beq.n	8020bd2 <st_sssa8_ch_nn_mat_mult_kernel_opt+0xa2>
 8020b8c:	f85c 701e 	ldr.w	r7, [ip, lr, lsl #1]
 8020b90:	f85c 9b04 	ldr.w	r9, [ip], #4
 8020b94:	f850 ab04 	ldr.w	sl, [r0], #4
 8020b98:	f850 5b04 	ldr.w	r5, [r0], #4
 8020b9c:	fb2a 6609 	smlad	r6, sl, r9, r6
 8020ba0:	fb2a 1107 	smlad	r1, sl, r7, r1
 8020ba4:	fb25 3309 	smlad	r3, r5, r9, r3
 8020ba8:	fb25 2207 	smlad	r2, r5, r7, r2
 8020bac:	f85c 701e 	ldr.w	r7, [ip, lr, lsl #1]
 8020bb0:	f85c 9b04 	ldr.w	r9, [ip], #4
 8020bb4:	f850 ab04 	ldr.w	sl, [r0], #4
 8020bb8:	f850 5b04 	ldr.w	r5, [r0], #4
 8020bbc:	fb2a 6609 	smlad	r6, sl, r9, r6
 8020bc0:	fb2a 1107 	smlad	r1, sl, r7, r1
 8020bc4:	fb25 3309 	smlad	r3, r5, r9, r3
 8020bc8:	fb25 2207 	smlad	r2, r5, r7, r2
 8020bcc:	f1b8 0801 	subs.w	r8, r8, #1
 8020bd0:	d1dc      	bne.n	8020b8c <st_sssa8_ch_nn_mat_mult_kernel_opt+0x5c>
 8020bd2:	f00e 0703 	and.w	r7, lr, #3
 8020bd6:	b18f      	cbz	r7, 8020bfc <st_sssa8_ch_nn_mat_mult_kernel_opt+0xcc>
 8020bd8:	f93c 801e 	ldrsh.w	r8, [ip, lr, lsl #1]
 8020bdc:	f93c ab02 	ldrsh.w	sl, [ip], #2
 8020be0:	f930 5b02 	ldrsh.w	r5, [r0], #2
 8020be4:	f930 9b02 	ldrsh.w	r9, [r0], #2
 8020be8:	fb0a 6605 	mla	r6, sl, r5, r6
 8020bec:	fb09 330a 	mla	r3, r9, sl, r3
 8020bf0:	fb08 1105 	mla	r1, r8, r5, r1
 8020bf4:	fb09 2208 	mla	r2, r9, r8, r2
 8020bf8:	3f01      	subs	r7, #1
 8020bfa:	dced      	bgt.n	8020bd8 <st_sssa8_ch_nn_mat_mult_kernel_opt+0xa8>
 8020bfc:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 8020c00:	9f15      	ldr	r7, [sp, #84]	@ 0x54
 8020c02:	f93a 4b02 	ldrsh.w	r4, [sl], #2
 8020c06:	f857 cb04 	ldr.w	ip, [r7], #4
 8020c0a:	f85b 5b04 	ldr.w	r5, [fp], #4
 8020c0e:	f1c4 0915 	rsb	r9, r4, #21
 8020c12:	ea99 0904 	eors.w	r9, r9, r4
 8020c16:	f340 80c8 	ble.w	8020daa <st_sssa8_ch_nn_mat_mult_kernel_opt+0x27a>
 8020c1a:	ea4f 0646 	mov.w	r6, r6, lsl #1
 8020c1e:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8020c22:	fb56 c605 	smmla	r6, r6, r5, ip
 8020c26:	fb51 c105 	smmla	r1, r1, r5, ip
 8020c2a:	fa46 f604 	asr.w	r6, r6, r4
 8020c2e:	fa41 f104 	asr.w	r1, r1, r4
 8020c32:	f93a 4b02 	ldrsh.w	r4, [sl], #2
 8020c36:	f857 cb04 	ldr.w	ip, [r7], #4
 8020c3a:	f85b 5b04 	ldr.w	r5, [fp], #4
 8020c3e:	f1c4 0915 	rsb	r9, r4, #21
 8020c42:	ea99 0904 	eors.w	r9, r9, r4
 8020c46:	f340 8099 	ble.w	8020d7c <st_sssa8_ch_nn_mat_mult_kernel_opt+0x24c>
 8020c4a:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8020c4e:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8020c52:	fb53 c305 	smmla	r3, r3, r5, ip
 8020c56:	fb52 c205 	smmla	r2, r2, r5, ip
 8020c5a:	fa43 f304 	asr.w	r3, r3, r4
 8020c5e:	fa42 f204 	asr.w	r2, r2, r4
 8020c62:	f306 0607 	ssat	r6, #8, r6
 8020c66:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8020c6a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8020c6c:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8020c70:	7026      	strb	r6, [r4, #0]
 8020c72:	44a0      	add	r8, r4
 8020c74:	f301 0107 	ssat	r1, #8, r1
 8020c78:	f888 1000 	strb.w	r1, [r8]
 8020c7c:	f303 0307 	ssat	r3, #8, r3
 8020c80:	f804 3009 	strb.w	r3, [r4, r9]
 8020c84:	f302 0207 	ssat	r2, #8, r2
 8020c88:	f808 2009 	strb.w	r2, [r8, r9]
 8020c8c:	eb04 0249 	add.w	r2, r4, r9, lsl #1
 8020c90:	9217      	str	r2, [sp, #92]	@ 0x5c
 8020c92:	f8cd a04c 	str.w	sl, [sp, #76]	@ 0x4c
 8020c96:	9c02      	ldr	r4, [sp, #8]
 8020c98:	9715      	str	r7, [sp, #84]	@ 0x54
 8020c9a:	45a2      	cmp	sl, r4
 8020c9c:	f47f af67 	bne.w	8020b6e <st_sssa8_ch_nn_mat_mult_kernel_opt+0x3e>
 8020ca0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8020ca2:	f013 0301 	ands.w	r3, r3, #1
 8020ca6:	d054      	beq.n	8020d52 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x222>
 8020ca8:	f8bd e048 	ldrh.w	lr, [sp, #72]	@ 0x48
 8020cac:	9b03      	ldr	r3, [sp, #12]
 8020cae:	f8dd c000 	ldr.w	ip, [sp]
 8020cb2:	6819      	ldr	r1, [r3, #0]
 8020cb4:	ea5f 079e 	movs.w	r7, lr, lsr #2
 8020cb8:	eb0c 044e 	add.w	r4, ip, lr, lsl #1
 8020cbc:	460e      	mov	r6, r1
 8020cbe:	d015      	beq.n	8020cec <st_sssa8_ch_nn_mat_mult_kernel_opt+0x1bc>
 8020cc0:	f85c 501e 	ldr.w	r5, [ip, lr, lsl #1]
 8020cc4:	f85c 8b04 	ldr.w	r8, [ip], #4
 8020cc8:	f850 ab04 	ldr.w	sl, [r0], #4
 8020ccc:	f850 3b04 	ldr.w	r3, [r0], #4
 8020cd0:	fb2a 6608 	smlad	r6, sl, r8, r6
 8020cd4:	fb2a 1105 	smlad	r1, sl, r5, r1
 8020cd8:	f85c a01e 	ldr.w	sl, [ip, lr, lsl #1]
 8020cdc:	f85c 8b04 	ldr.w	r8, [ip], #4
 8020ce0:	fb23 6608 	smlad	r6, r3, r8, r6
 8020ce4:	fb23 110a 	smlad	r1, r3, sl, r1
 8020ce8:	3f01      	subs	r7, #1
 8020cea:	d1e9      	bne.n	8020cc0 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x190>
 8020cec:	f01e 0703 	ands.w	r7, lr, #3
 8020cf0:	d00b      	beq.n	8020d0a <st_sssa8_ch_nn_mat_mult_kernel_opt+0x1da>
 8020cf2:	f83c 301e 	ldrh.w	r3, [ip, lr, lsl #1]
 8020cf6:	f83c 9b02 	ldrh.w	r9, [ip], #2
 8020cfa:	f930 ab02 	ldrsh.w	sl, [r0], #2
 8020cfe:	fb19 660a 	smlabb	r6, r9, sl, r6
 8020d02:	3f01      	subs	r7, #1
 8020d04:	fb13 110a 	smlabb	r1, r3, sl, r1
 8020d08:	dcf3      	bgt.n	8020cf2 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x1c2>
 8020d0a:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 8020d0e:	9f15      	ldr	r7, [sp, #84]	@ 0x54
 8020d10:	f9ba 4000 	ldrsh.w	r4, [sl]
 8020d14:	f8d7 c000 	ldr.w	ip, [r7]
 8020d18:	f8db 5000 	ldr.w	r5, [fp]
 8020d1c:	f1c4 0915 	rsb	r9, r4, #21
 8020d20:	ea99 0904 	eors.w	r9, r9, r4
 8020d24:	dd58      	ble.n	8020dd8 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x2a8>
 8020d26:	ea4f 0646 	mov.w	r6, r6, lsl #1
 8020d2a:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8020d2e:	fb56 c605 	smmla	r6, r6, r5, ip
 8020d32:	fb51 c105 	smmla	r1, r1, r5, ip
 8020d36:	fa46 f604 	asr.w	r6, r6, r4
 8020d3a:	fa41 f104 	asr.w	r1, r1, r4
 8020d3e:	f306 0607 	ssat	r6, #8, r6
 8020d42:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8020d44:	9c04      	ldr	r4, [sp, #16]
 8020d46:	7016      	strb	r6, [r2, #0]
 8020d48:	f301 0107 	ssat	r1, #8, r1
 8020d4c:	5511      	strb	r1, [r2, r4]
 8020d4e:	9b01      	ldr	r3, [sp, #4]
 8020d50:	441a      	add	r2, r3
 8020d52:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8020d54:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020d56:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020d58:	b133      	cbz	r3, 8020d68 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x238>
 8020d5a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8020d5c:	f104 0002 	add.w	r0, r4, #2
 8020d60:	fb03 0011 	mls	r0, r3, r1, r0
 8020d64:	4410      	add	r0, r2
 8020d66:	e006      	b.n	8020d76 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x246>
 8020d68:	eba2 0001 	sub.w	r0, r2, r1
 8020d6c:	9a05      	ldr	r2, [sp, #20]
 8020d6e:	f104 0402 	add.w	r4, r4, #2
 8020d72:	fb02 0004 	mla	r0, r2, r4, r0
 8020d76:	b006      	add	sp, #24
 8020d78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020d7c:	2c00      	cmp	r4, #0
 8020d7e:	dd42      	ble.n	8020e06 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x2d6>
 8020d80:	f04f 0901 	mov.w	r9, #1
 8020d84:	fa09 f904 	lsl.w	r9, r9, r4
 8020d88:	ea4f 09a9 	mov.w	r9, r9, asr #2
 8020d8c:	fb53 9305 	smmla	r3, r3, r5, r9
 8020d90:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8020d94:	fa43 f304 	asr.w	r3, r3, r4
 8020d98:	4463      	add	r3, ip
 8020d9a:	fb52 9205 	smmla	r2, r2, r5, r9
 8020d9e:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8020da2:	fa42 f204 	asr.w	r2, r2, r4
 8020da6:	4462      	add	r2, ip
 8020da8:	e75b      	b.n	8020c62 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x132>
 8020daa:	2c00      	cmp	r4, #0
 8020dac:	dd3c      	ble.n	8020e28 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x2f8>
 8020dae:	f04f 0901 	mov.w	r9, #1
 8020db2:	fa09 f904 	lsl.w	r9, r9, r4
 8020db6:	ea4f 09a9 	mov.w	r9, r9, asr #2
 8020dba:	fb56 9605 	smmla	r6, r6, r5, r9
 8020dbe:	ea4f 0646 	mov.w	r6, r6, lsl #1
 8020dc2:	fa46 f604 	asr.w	r6, r6, r4
 8020dc6:	4466      	add	r6, ip
 8020dc8:	fb51 9105 	smmla	r1, r1, r5, r9
 8020dcc:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8020dd0:	fa41 f104 	asr.w	r1, r1, r4
 8020dd4:	4461      	add	r1, ip
 8020dd6:	e72c      	b.n	8020c32 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x102>
 8020dd8:	2c00      	cmp	r4, #0
 8020dda:	dd36      	ble.n	8020e4a <st_sssa8_ch_nn_mat_mult_kernel_opt+0x31a>
 8020ddc:	f04f 0901 	mov.w	r9, #1
 8020de0:	fa09 f904 	lsl.w	r9, r9, r4
 8020de4:	ea4f 09a9 	mov.w	r9, r9, asr #2
 8020de8:	fb56 9605 	smmla	r6, r6, r5, r9
 8020dec:	ea4f 0646 	mov.w	r6, r6, lsl #1
 8020df0:	fa46 f604 	asr.w	r6, r6, r4
 8020df4:	4466      	add	r6, ip
 8020df6:	fb51 9105 	smmla	r1, r1, r5, r9
 8020dfa:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8020dfe:	fa41 f104 	asr.w	r1, r1, r4
 8020e02:	4461      	add	r1, ip
 8020e04:	e79b      	b.n	8020d3e <st_sssa8_ch_nn_mat_mult_kernel_opt+0x20e>
 8020e06:	f1c4 0901 	rsb	r9, r4, #1
 8020e0a:	fa03 f309 	lsl.w	r3, r3, r9
 8020e0e:	f303 031f 	ssat	r3, #32, r3
 8020e12:	fb53 f315 	smmulr	r3, r3, r5
 8020e16:	fa02 f209 	lsl.w	r2, r2, r9
 8020e1a:	f302 021f 	ssat	r2, #32, r2
 8020e1e:	fb52 f215 	smmulr	r2, r2, r5
 8020e22:	4463      	add	r3, ip
 8020e24:	4462      	add	r2, ip
 8020e26:	e71c      	b.n	8020c62 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x132>
 8020e28:	f1c4 0901 	rsb	r9, r4, #1
 8020e2c:	fa06 f609 	lsl.w	r6, r6, r9
 8020e30:	f306 061f 	ssat	r6, #32, r6
 8020e34:	fb56 f615 	smmulr	r6, r6, r5
 8020e38:	fa01 f109 	lsl.w	r1, r1, r9
 8020e3c:	f301 011f 	ssat	r1, #32, r1
 8020e40:	fb51 f115 	smmulr	r1, r1, r5
 8020e44:	4466      	add	r6, ip
 8020e46:	4461      	add	r1, ip
 8020e48:	e6f3      	b.n	8020c32 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x102>
 8020e4a:	f1c4 0901 	rsb	r9, r4, #1
 8020e4e:	fa06 f609 	lsl.w	r6, r6, r9
 8020e52:	f306 061f 	ssat	r6, #32, r6
 8020e56:	fb56 f615 	smmulr	r6, r6, r5
 8020e5a:	fa01 f109 	lsl.w	r1, r1, r9
 8020e5e:	f301 011f 	ssat	r1, #32, r1
 8020e62:	fb51 f115 	smmulr	r1, r1, r5
 8020e66:	4466      	add	r6, ip
 8020e68:	4461      	add	r1, ip
 8020e6a:	e768      	b.n	8020d3e <st_sssa8_ch_nn_mat_mult_kernel_opt+0x20e>

08020e6c <ai_mul_buffer_INT8>:
 8020e6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020e70:	ed2d 8b04 	vpush	{d8-d9}
 8020e74:	b093      	sub	sp, #76	@ 0x4c
 8020e76:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8020e7a:	930d      	str	r3, [sp, #52]	@ 0x34
 8020e7c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8020e7e:	9c20      	ldr	r4, [sp, #128]	@ 0x80
 8020e80:	edd3 8a00 	vldr	s17, [r3]
 8020e84:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020e86:	ed94 8a00 	vldr	s16, [r4]
 8020e8a:	ed93 9a00 	vldr	s18, [r3]
 8020e8e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8020e90:	9c26      	ldr	r4, [sp, #152]	@ 0x98
 8020e92:	f993 3000 	ldrsb.w	r3, [r3]
 8020e96:	930c      	str	r3, [sp, #48]	@ 0x30
 8020e98:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8020e9a:	920a      	str	r2, [sp, #40]	@ 0x28
 8020e9c:	f993 3000 	ldrsb.w	r3, [r3]
 8020ea0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8020ea2:	ee28 0a28 	vmul.f32	s0, s16, s17
 8020ea6:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8020ea8:	ee80 0a09 	vdiv.f32	s0, s0, s18
 8020eac:	f993 5000 	ldrsb.w	r5, [r3]
 8020eb0:	f10d 0046 	add.w	r0, sp, #70	@ 0x46
 8020eb4:	2300      	movs	r3, #0
 8020eb6:	f8ad 3046 	strh.w	r3, [sp, #70]	@ 0x46
 8020eba:	f7f4 f89b 	bl	8014ff4 <align_factor>
 8020ebe:	f9bd c046 	ldrsh.w	ip, [sp, #70]	@ 0x46
 8020ec2:	f10c 37ff 	add.w	r7, ip, #4294967295	@ 0xffffffff
 8020ec6:	b2bb      	uxth	r3, r7
 8020ec8:	2b14      	cmp	r3, #20
 8020eca:	f200 80b4 	bhi.w	8021036 <ai_mul_buffer_INT8+0x1ca>
 8020ece:	2301      	movs	r3, #1
 8020ed0:	fa03 f30c 	lsl.w	r3, r3, ip
 8020ed4:	fa05 f10c 	lsl.w	r1, r5, ip
 8020ed8:	eb01 0153 	add.w	r1, r1, r3, lsr #1
 8020edc:	2c00      	cmp	r4, #0
 8020ede:	f000 80ae 	beq.w	802103e <ai_mul_buffer_INT8+0x1d2>
 8020ee2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020ee4:	b29d      	uxth	r5, r3
 8020ee6:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 8020eea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020eec:	b29e      	uxth	r6, r3
 8020eee:	ea46 4603 	orr.w	r6, r6, r3, lsl #16
 8020ef2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020ef4:	2c01      	cmp	r4, #1
 8020ef6:	ea4f 0393 	mov.w	r3, r3, lsr #2
 8020efa:	f000 80b6 	beq.w	802106a <ai_mul_buffer_INT8+0x1fe>
 8020efe:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8020f00:	f992 2000 	ldrsb.w	r2, [r2]
 8020f04:	b294      	uxth	r4, r2
 8020f06:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8020f0a:	fa2f f484 	sxtb16	r4, r4
 8020f0e:	fad4 f406 	ssub16	r4, r4, r6
 8020f12:	2b00      	cmp	r3, #0
 8020f14:	f000 8178 	beq.w	8021208 <ai_mul_buffer_INT8+0x39c>
 8020f18:	009a      	lsls	r2, r3, #2
 8020f1a:	2601      	movs	r6, #1
 8020f1c:	f1ac 0302 	sub.w	r3, ip, #2
 8020f20:	920f      	str	r2, [sp, #60]	@ 0x3c
 8020f22:	409e      	lsls	r6, r3
 8020f24:	1c93      	adds	r3, r2, #2
 8020f26:	9a08      	ldr	r2, [sp, #32]
 8020f28:	9505      	str	r5, [sp, #20]
 8020f2a:	18d3      	adds	r3, r2, r3
 8020f2c:	9307      	str	r3, [sp, #28]
 8020f2e:	1423      	asrs	r3, r4, #16
 8020f30:	9306      	str	r3, [sp, #24]
 8020f32:	b224      	sxth	r4, r4
 8020f34:	f1cc 0301 	rsb	r3, ip, #1
 8020f38:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 8020f3c:	930e      	str	r3, [sp, #56]	@ 0x38
 8020f3e:	f102 0e02 	add.w	lr, r2, #2
 8020f42:	4625      	mov	r5, r4
 8020f44:	e031      	b.n	8020faa <ai_mul_buffer_INT8+0x13e>
 8020f46:	fb52 6200 	smmla	r2, r2, r0, r6
 8020f4a:	413a      	asrs	r2, r7
 8020f4c:	440a      	add	r2, r1
 8020f4e:	fb59 6900 	smmla	r9, r9, r0, r6
 8020f52:	fb53 6300 	smmla	r3, r3, r0, r6
 8020f56:	fb58 6800 	smmla	r8, r8, r0, r6
 8020f5a:	f302 0207 	ssat	r2, #8, r2
 8020f5e:	413b      	asrs	r3, r7
 8020f60:	b252      	sxtb	r2, r2
 8020f62:	440b      	add	r3, r1
 8020f64:	f303 0307 	ssat	r3, #8, r3
 8020f68:	fa49 f907 	asr.w	r9, r9, r7
 8020f6c:	b25b      	sxtb	r3, r3
 8020f6e:	4489      	add	r9, r1
 8020f70:	f309 0907 	ssat	r9, #8, r9
 8020f74:	fa48 f807 	asr.w	r8, r8, r7
 8020f78:	fa4f f989 	sxtb.w	r9, r9
 8020f7c:	4488      	add	r8, r1
 8020f7e:	f308 0807 	ssat	r8, #8, r8
 8020f82:	fa4f f888 	sxtb.w	r8, r8
 8020f86:	f04f 0b00 	mov.w	fp, #0
 8020f8a:	f362 0b07 	bfi	fp, r2, #0, #8
 8020f8e:	f363 2b0f 	bfi	fp, r3, #8, #8
 8020f92:	f369 4b17 	bfi	fp, r9, #16, #8
 8020f96:	9b07      	ldr	r3, [sp, #28]
 8020f98:	f368 6b1f 	bfi	fp, r8, #24, #8
 8020f9c:	f84e bc02 	str.w	fp, [lr, #-2]
 8020fa0:	f10e 0e04 	add.w	lr, lr, #4
 8020fa4:	4573      	cmp	r3, lr
 8020fa6:	f000 8125 	beq.w	80211f4 <ai_mul_buffer_INT8+0x388>
 8020faa:	f85a 3b04 	ldr.w	r3, [sl], #4
 8020fae:	9c05      	ldr	r4, [sp, #20]
 8020fb0:	fa2f f283 	sxtb16	r2, r3
 8020fb4:	ea4f 2333 	mov.w	r3, r3, ror #8
 8020fb8:	fa2f f383 	sxtb16	r3, r3
 8020fbc:	fad3 f304 	ssub16	r3, r3, r4
 8020fc0:	fad2 f204 	ssub16	r2, r2, r4
 8020fc4:	9c06      	ldr	r4, [sp, #24]
 8020fc6:	ea4f 4922 	mov.w	r9, r2, asr #16
 8020fca:	ea4f 4823 	mov.w	r8, r3, asr #16
 8020fce:	f1bc 0f15 	cmp.w	ip, #21
 8020fd2:	fb12 f205 	smulbb	r2, r2, r5
 8020fd6:	fb04 f909 	mul.w	r9, r4, r9
 8020fda:	fb13 f305 	smulbb	r3, r3, r5
 8020fde:	fb04 f808 	mul.w	r8, r4, r8
 8020fe2:	dcb0      	bgt.n	8020f46 <ai_mul_buffer_INT8+0xda>
 8020fe4:	f1bc 0f00 	cmp.w	ip, #0
 8020fe8:	f340 80da 	ble.w	80211a0 <ai_mul_buffer_INT8+0x334>
 8020fec:	0052      	lsls	r2, r2, #1
 8020fee:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8020ff2:	fb52 1200 	smmla	r2, r2, r0, r1
 8020ff6:	005b      	lsls	r3, r3, #1
 8020ff8:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8020ffc:	fa42 f20c 	asr.w	r2, r2, ip
 8021000:	fb59 1900 	smmla	r9, r9, r0, r1
 8021004:	fb53 1300 	smmla	r3, r3, r0, r1
 8021008:	fb58 1800 	smmla	r8, r8, r0, r1
 802100c:	f302 0207 	ssat	r2, #8, r2
 8021010:	b252      	sxtb	r2, r2
 8021012:	fa43 f30c 	asr.w	r3, r3, ip
 8021016:	f303 0307 	ssat	r3, #8, r3
 802101a:	b25b      	sxtb	r3, r3
 802101c:	fa49 f90c 	asr.w	r9, r9, ip
 8021020:	f309 0907 	ssat	r9, #8, r9
 8021024:	fa4f f989 	sxtb.w	r9, r9
 8021028:	fa48 f80c 	asr.w	r8, r8, ip
 802102c:	f308 0807 	ssat	r8, #8, r8
 8021030:	fa4f f888 	sxtb.w	r8, r8
 8021034:	e7a7      	b.n	8020f86 <ai_mul_buffer_INT8+0x11a>
 8021036:	4629      	mov	r1, r5
 8021038:	2c00      	cmp	r4, #0
 802103a:	f47f af52 	bne.w	8020ee2 <ai_mul_buffer_INT8+0x76>
 802103e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8021040:	9301      	str	r3, [sp, #4]
 8021042:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021044:	9300      	str	r3, [sp, #0]
 8021046:	e9dd 1209 	ldrd	r1, r2, [sp, #36]	@ 0x24
 802104a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802104c:	9808      	ldr	r0, [sp, #32]
 802104e:	9502      	str	r5, [sp, #8]
 8021050:	eeb0 1a49 	vmov.f32	s2, s18
 8021054:	eef0 0a68 	vmov.f32	s1, s17
 8021058:	eeb0 0a48 	vmov.f32	s0, s16
 802105c:	f000 fce4 	bl	8021a28 <ai_math_elementwise_mul_int8>
 8021060:	b013      	add	sp, #76	@ 0x4c
 8021062:	ecbd 8b04 	vpop	{d8-d9}
 8021066:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802106a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802106c:	f992 2000 	ldrsb.w	r2, [r2]
 8021070:	fa1f fe82 	uxth.w	lr, r2
 8021074:	ea4e 4e02 	orr.w	lr, lr, r2, lsl #16
 8021078:	fa2f fe8e 	sxtb16	lr, lr
 802107c:	fade f505 	ssub16	r5, lr, r5
 8021080:	2b00      	cmp	r3, #0
 8021082:	f000 813b 	beq.w	80212fc <ai_mul_buffer_INT8+0x490>
 8021086:	009a      	lsls	r2, r3, #2
 8021088:	f1ac 0302 	sub.w	r3, ip, #2
 802108c:	fa04 f903 	lsl.w	r9, r4, r3
 8021090:	920f      	str	r2, [sp, #60]	@ 0x3c
 8021092:	1c93      	adds	r3, r2, #2
 8021094:	9a08      	ldr	r2, [sp, #32]
 8021096:	9605      	str	r6, [sp, #20]
 8021098:	18d3      	adds	r3, r2, r3
 802109a:	9307      	str	r3, [sp, #28]
 802109c:	142b      	asrs	r3, r5, #16
 802109e:	9306      	str	r3, [sp, #24]
 80210a0:	b22d      	sxth	r5, r5
 80210a2:	f1cc 0301 	rsb	r3, ip, #1
 80210a6:	f8dd b028 	ldr.w	fp, [sp, #40]	@ 0x28
 80210aa:	930e      	str	r3, [sp, #56]	@ 0x38
 80210ac:	1c94      	adds	r4, r2, #2
 80210ae:	462e      	mov	r6, r5
 80210b0:	e030      	b.n	8021114 <ai_mul_buffer_INT8+0x2a8>
 80210b2:	fb52 9200 	smmla	r2, r2, r0, r9
 80210b6:	413a      	asrs	r2, r7
 80210b8:	440a      	add	r2, r1
 80210ba:	fb58 9800 	smmla	r8, r8, r0, r9
 80210be:	fb53 9300 	smmla	r3, r3, r0, r9
 80210c2:	fb5e 9e00 	smmla	lr, lr, r0, r9
 80210c6:	f302 0207 	ssat	r2, #8, r2
 80210ca:	413b      	asrs	r3, r7
 80210cc:	b252      	sxtb	r2, r2
 80210ce:	440b      	add	r3, r1
 80210d0:	f303 0307 	ssat	r3, #8, r3
 80210d4:	fa48 f807 	asr.w	r8, r8, r7
 80210d8:	b25b      	sxtb	r3, r3
 80210da:	4488      	add	r8, r1
 80210dc:	f308 0807 	ssat	r8, #8, r8
 80210e0:	fa4e fe07 	asr.w	lr, lr, r7
 80210e4:	fa4f f888 	sxtb.w	r8, r8
 80210e8:	448e      	add	lr, r1
 80210ea:	f30e 0e07 	ssat	lr, #8, lr
 80210ee:	fa4f fe8e 	sxtb.w	lr, lr
 80210f2:	f04f 0a00 	mov.w	sl, #0
 80210f6:	f362 0a07 	bfi	sl, r2, #0, #8
 80210fa:	f363 2a0f 	bfi	sl, r3, #8, #8
 80210fe:	f368 4a17 	bfi	sl, r8, #16, #8
 8021102:	9b07      	ldr	r3, [sp, #28]
 8021104:	f36e 6a1f 	bfi	sl, lr, #24, #8
 8021108:	f844 ac02 	str.w	sl, [r4, #-2]
 802110c:	3404      	adds	r4, #4
 802110e:	42a3      	cmp	r3, r4
 8021110:	f000 80ea 	beq.w	80212e8 <ai_mul_buffer_INT8+0x47c>
 8021114:	f85b 3b04 	ldr.w	r3, [fp], #4
 8021118:	9d05      	ldr	r5, [sp, #20]
 802111a:	fa2f f283 	sxtb16	r2, r3
 802111e:	ea4f 2333 	mov.w	r3, r3, ror #8
 8021122:	fa2f f383 	sxtb16	r3, r3
 8021126:	fad3 f305 	ssub16	r3, r3, r5
 802112a:	fad2 f205 	ssub16	r2, r2, r5
 802112e:	9d06      	ldr	r5, [sp, #24]
 8021130:	ea4f 4822 	mov.w	r8, r2, asr #16
 8021134:	ea4f 4e23 	mov.w	lr, r3, asr #16
 8021138:	f1bc 0f15 	cmp.w	ip, #21
 802113c:	fb12 f206 	smulbb	r2, r2, r6
 8021140:	fb05 f808 	mul.w	r8, r5, r8
 8021144:	fb13 f306 	smulbb	r3, r3, r6
 8021148:	fb05 fe0e 	mul.w	lr, r5, lr
 802114c:	dcb1      	bgt.n	80210b2 <ai_mul_buffer_INT8+0x246>
 802114e:	f1bc 0f00 	cmp.w	ip, #0
 8021152:	f340 809f 	ble.w	8021294 <ai_mul_buffer_INT8+0x428>
 8021156:	0052      	lsls	r2, r2, #1
 8021158:	ea4f 0848 	mov.w	r8, r8, lsl #1
 802115c:	fb52 1200 	smmla	r2, r2, r0, r1
 8021160:	005b      	lsls	r3, r3, #1
 8021162:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8021166:	fa42 f20c 	asr.w	r2, r2, ip
 802116a:	fb58 1800 	smmla	r8, r8, r0, r1
 802116e:	fb53 1300 	smmla	r3, r3, r0, r1
 8021172:	fb5e 1e00 	smmla	lr, lr, r0, r1
 8021176:	f302 0207 	ssat	r2, #8, r2
 802117a:	b252      	sxtb	r2, r2
 802117c:	fa43 f30c 	asr.w	r3, r3, ip
 8021180:	f303 0307 	ssat	r3, #8, r3
 8021184:	b25b      	sxtb	r3, r3
 8021186:	fa48 f80c 	asr.w	r8, r8, ip
 802118a:	f308 0807 	ssat	r8, #8, r8
 802118e:	fa4f f888 	sxtb.w	r8, r8
 8021192:	fa4e fe0c 	asr.w	lr, lr, ip
 8021196:	f30e 0e07 	ssat	lr, #8, lr
 802119a:	fa4f fe8e 	sxtb.w	lr, lr
 802119e:	e7a8      	b.n	80210f2 <ai_mul_buffer_INT8+0x286>
 80211a0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80211a2:	40a2      	lsls	r2, r4
 80211a4:	f302 021f 	ssat	r2, #32, r2
 80211a8:	fb52 f210 	smmulr	r2, r2, r0
 80211ac:	fa09 f904 	lsl.w	r9, r9, r4
 80211b0:	f309 091f 	ssat	r9, #32, r9
 80211b4:	fb59 f910 	smmulr	r9, r9, r0
 80211b8:	40a3      	lsls	r3, r4
 80211ba:	f303 031f 	ssat	r3, #32, r3
 80211be:	fb53 f310 	smmulr	r3, r3, r0
 80211c2:	fa08 f804 	lsl.w	r8, r8, r4
 80211c6:	f308 081f 	ssat	r8, #32, r8
 80211ca:	fb58 f810 	smmulr	r8, r8, r0
 80211ce:	440a      	add	r2, r1
 80211d0:	f302 0207 	ssat	r2, #8, r2
 80211d4:	b252      	sxtb	r2, r2
 80211d6:	440b      	add	r3, r1
 80211d8:	f303 0307 	ssat	r3, #8, r3
 80211dc:	b25b      	sxtb	r3, r3
 80211de:	4489      	add	r9, r1
 80211e0:	f309 0907 	ssat	r9, #8, r9
 80211e4:	fa4f f989 	sxtb.w	r9, r9
 80211e8:	4488      	add	r8, r1
 80211ea:	f308 0807 	ssat	r8, #8, r8
 80211ee:	fa4f f888 	sxtb.w	r8, r8
 80211f2:	e6c8      	b.n	8020f86 <ai_mul_buffer_INT8+0x11a>
 80211f4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80211f6:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80211f8:	f993 2000 	ldrsb.w	r2, [r3]
 80211fc:	9b08      	ldr	r3, [sp, #32]
 80211fe:	4423      	add	r3, r4
 8021200:	9308      	str	r3, [sp, #32]
 8021202:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021204:	4423      	add	r3, r4
 8021206:	9309      	str	r3, [sp, #36]	@ 0x24
 8021208:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802120a:	1ad2      	subs	r2, r2, r3
 802120c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802120e:	f013 0403 	ands.w	r4, r3, #3
 8021212:	f43f af25 	beq.w	8021060 <ai_mul_buffer_INT8+0x1f4>
 8021216:	f1ac 0302 	sub.w	r3, ip, #2
 802121a:	2501      	movs	r5, #1
 802121c:	f1bc 0f15 	cmp.w	ip, #21
 8021220:	fa05 fe03 	lsl.w	lr, r5, r3
 8021224:	f340 80ae 	ble.w	8021384 <ai_mul_buffer_INT8+0x518>
 8021228:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 802122a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802122c:	f996 3000 	ldrsb.w	r3, [r6]
 8021230:	1b5b      	subs	r3, r3, r5
 8021232:	fb02 f303 	mul.w	r3, r2, r3
 8021236:	fb53 e300 	smmla	r3, r3, r0, lr
 802123a:	413b      	asrs	r3, r7
 802123c:	440b      	add	r3, r1
 802123e:	f303 0307 	ssat	r3, #8, r3
 8021242:	9d08      	ldr	r5, [sp, #32]
 8021244:	3c01      	subs	r4, #1
 8021246:	702b      	strb	r3, [r5, #0]
 8021248:	f43f af0a 	beq.w	8021060 <ai_mul_buffer_INT8+0x1f4>
 802124c:	f996 3001 	ldrsb.w	r3, [r6, #1]
 8021250:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8021252:	1b5b      	subs	r3, r3, r5
 8021254:	fb02 f303 	mul.w	r3, r2, r3
 8021258:	fb53 e300 	smmla	r3, r3, r0, lr
 802125c:	413b      	asrs	r3, r7
 802125e:	440b      	add	r3, r1
 8021260:	f303 0307 	ssat	r3, #8, r3
 8021264:	9d08      	ldr	r5, [sp, #32]
 8021266:	2c01      	cmp	r4, #1
 8021268:	706b      	strb	r3, [r5, #1]
 802126a:	f43f aef9 	beq.w	8021060 <ai_mul_buffer_INT8+0x1f4>
 802126e:	f996 3002 	ldrsb.w	r3, [r6, #2]
 8021272:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8021274:	1b5b      	subs	r3, r3, r5
 8021276:	fb02 f303 	mul.w	r3, r2, r3
 802127a:	fb53 e300 	smmla	r3, r3, r0, lr
 802127e:	413b      	asrs	r3, r7
 8021280:	440b      	add	r3, r1
 8021282:	f303 0307 	ssat	r3, #8, r3
 8021286:	9d08      	ldr	r5, [sp, #32]
 8021288:	70ab      	strb	r3, [r5, #2]
 802128a:	b013      	add	sp, #76	@ 0x4c
 802128c:	ecbd 8b04 	vpop	{d8-d9}
 8021290:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021294:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8021296:	40aa      	lsls	r2, r5
 8021298:	f302 021f 	ssat	r2, #32, r2
 802129c:	fb52 f210 	smmulr	r2, r2, r0
 80212a0:	fa08 f805 	lsl.w	r8, r8, r5
 80212a4:	f308 081f 	ssat	r8, #32, r8
 80212a8:	fb58 f810 	smmulr	r8, r8, r0
 80212ac:	40ab      	lsls	r3, r5
 80212ae:	f303 031f 	ssat	r3, #32, r3
 80212b2:	fb53 f310 	smmulr	r3, r3, r0
 80212b6:	fa0e fe05 	lsl.w	lr, lr, r5
 80212ba:	f30e 0e1f 	ssat	lr, #32, lr
 80212be:	fb5e fe10 	smmulr	lr, lr, r0
 80212c2:	440a      	add	r2, r1
 80212c4:	f302 0207 	ssat	r2, #8, r2
 80212c8:	b252      	sxtb	r2, r2
 80212ca:	440b      	add	r3, r1
 80212cc:	f303 0307 	ssat	r3, #8, r3
 80212d0:	b25b      	sxtb	r3, r3
 80212d2:	4488      	add	r8, r1
 80212d4:	f308 0807 	ssat	r8, #8, r8
 80212d8:	fa4f f888 	sxtb.w	r8, r8
 80212dc:	448e      	add	lr, r1
 80212de:	f30e 0e07 	ssat	lr, #8, lr
 80212e2:	fa4f fe8e 	sxtb.w	lr, lr
 80212e6:	e704      	b.n	80210f2 <ai_mul_buffer_INT8+0x286>
 80212e8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80212ea:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80212ec:	f993 2000 	ldrsb.w	r2, [r3]
 80212f0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80212f2:	4423      	add	r3, r4
 80212f4:	930a      	str	r3, [sp, #40]	@ 0x28
 80212f6:	9b08      	ldr	r3, [sp, #32]
 80212f8:	4423      	add	r3, r4
 80212fa:	9308      	str	r3, [sp, #32]
 80212fc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80212fe:	f013 0403 	ands.w	r4, r3, #3
 8021302:	f43f aead 	beq.w	8021060 <ai_mul_buffer_INT8+0x1f4>
 8021306:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021308:	2501      	movs	r5, #1
 802130a:	1ad2      	subs	r2, r2, r3
 802130c:	f1bc 0f15 	cmp.w	ip, #21
 8021310:	f1ac 0302 	sub.w	r3, ip, #2
 8021314:	fa05 fe03 	lsl.w	lr, r5, r3
 8021318:	dc3c      	bgt.n	8021394 <ai_mul_buffer_INT8+0x528>
 802131a:	f1bc 0f00 	cmp.w	ip, #0
 802131e:	f340 8099 	ble.w	8021454 <ai_mul_buffer_INT8+0x5e8>
 8021322:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8021324:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8021326:	f995 3000 	ldrsb.w	r3, [r5]
 802132a:	1b9b      	subs	r3, r3, r6
 802132c:	fb02 f303 	mul.w	r3, r2, r3
 8021330:	005b      	lsls	r3, r3, #1
 8021332:	fb53 1300 	smmla	r3, r3, r0, r1
 8021336:	fa43 f30c 	asr.w	r3, r3, ip
 802133a:	f303 0307 	ssat	r3, #8, r3
 802133e:	9f08      	ldr	r7, [sp, #32]
 8021340:	3c01      	subs	r4, #1
 8021342:	703b      	strb	r3, [r7, #0]
 8021344:	f43f ae8c 	beq.w	8021060 <ai_mul_buffer_INT8+0x1f4>
 8021348:	f995 3001 	ldrsb.w	r3, [r5, #1]
 802134c:	1b9b      	subs	r3, r3, r6
 802134e:	fb02 f303 	mul.w	r3, r2, r3
 8021352:	005b      	lsls	r3, r3, #1
 8021354:	fb53 1300 	smmla	r3, r3, r0, r1
 8021358:	fa43 f30c 	asr.w	r3, r3, ip
 802135c:	f303 0307 	ssat	r3, #8, r3
 8021360:	2c01      	cmp	r4, #1
 8021362:	707b      	strb	r3, [r7, #1]
 8021364:	f43f ae7c 	beq.w	8021060 <ai_mul_buffer_INT8+0x1f4>
 8021368:	f995 3002 	ldrsb.w	r3, [r5, #2]
 802136c:	1b9b      	subs	r3, r3, r6
 802136e:	fb02 f303 	mul.w	r3, r2, r3
 8021372:	005b      	lsls	r3, r3, #1
 8021374:	fb53 1300 	smmla	r3, r3, r0, r1
 8021378:	fa43 f30c 	asr.w	r3, r3, ip
 802137c:	f303 0307 	ssat	r3, #8, r3
 8021380:	70bb      	strb	r3, [r7, #2]
 8021382:	e66d      	b.n	8021060 <ai_mul_buffer_INT8+0x1f4>
 8021384:	f1bc 0f00 	cmp.w	ip, #0
 8021388:	dd2b      	ble.n	80213e2 <ai_mul_buffer_INT8+0x576>
 802138a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802138c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802138e:	f995 3000 	ldrsb.w	r3, [r5]
 8021392:	e7ca      	b.n	802132a <ai_mul_buffer_INT8+0x4be>
 8021394:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8021396:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8021398:	f996 3000 	ldrsb.w	r3, [r6]
 802139c:	1b5b      	subs	r3, r3, r5
 802139e:	fb02 f303 	mul.w	r3, r2, r3
 80213a2:	fb53 e300 	smmla	r3, r3, r0, lr
 80213a6:	413b      	asrs	r3, r7
 80213a8:	440b      	add	r3, r1
 80213aa:	f303 0307 	ssat	r3, #8, r3
 80213ae:	9d08      	ldr	r5, [sp, #32]
 80213b0:	3c01      	subs	r4, #1
 80213b2:	702b      	strb	r3, [r5, #0]
 80213b4:	f43f ae54 	beq.w	8021060 <ai_mul_buffer_INT8+0x1f4>
 80213b8:	f996 3001 	ldrsb.w	r3, [r6, #1]
 80213bc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80213be:	1b5b      	subs	r3, r3, r5
 80213c0:	fb02 f303 	mul.w	r3, r2, r3
 80213c4:	fb53 e300 	smmla	r3, r3, r0, lr
 80213c8:	413b      	asrs	r3, r7
 80213ca:	440b      	add	r3, r1
 80213cc:	f303 0307 	ssat	r3, #8, r3
 80213d0:	9d08      	ldr	r5, [sp, #32]
 80213d2:	2c01      	cmp	r4, #1
 80213d4:	706b      	strb	r3, [r5, #1]
 80213d6:	f43f ae43 	beq.w	8021060 <ai_mul_buffer_INT8+0x1f4>
 80213da:	f996 3002 	ldrsb.w	r3, [r6, #2]
 80213de:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80213e0:	e748      	b.n	8021274 <ai_mul_buffer_INT8+0x408>
 80213e2:	eba5 0c0c 	sub.w	ip, r5, ip
 80213e6:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80213e8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80213ea:	f995 3000 	ldrsb.w	r3, [r5]
 80213ee:	1b9b      	subs	r3, r3, r6
 80213f0:	fb02 f303 	mul.w	r3, r2, r3
 80213f4:	fa03 f30c 	lsl.w	r3, r3, ip
 80213f8:	f303 031f 	ssat	r3, #32, r3
 80213fc:	fb53 f310 	smmulr	r3, r3, r0
 8021400:	440b      	add	r3, r1
 8021402:	f303 0307 	ssat	r3, #8, r3
 8021406:	9f08      	ldr	r7, [sp, #32]
 8021408:	3c01      	subs	r4, #1
 802140a:	703b      	strb	r3, [r7, #0]
 802140c:	f43f ae28 	beq.w	8021060 <ai_mul_buffer_INT8+0x1f4>
 8021410:	f995 3001 	ldrsb.w	r3, [r5, #1]
 8021414:	1b9b      	subs	r3, r3, r6
 8021416:	fb02 f303 	mul.w	r3, r2, r3
 802141a:	fa03 f30c 	lsl.w	r3, r3, ip
 802141e:	f303 031f 	ssat	r3, #32, r3
 8021422:	fb53 f310 	smmulr	r3, r3, r0
 8021426:	440b      	add	r3, r1
 8021428:	f303 0307 	ssat	r3, #8, r3
 802142c:	2c01      	cmp	r4, #1
 802142e:	707b      	strb	r3, [r7, #1]
 8021430:	f43f ae16 	beq.w	8021060 <ai_mul_buffer_INT8+0x1f4>
 8021434:	f995 3002 	ldrsb.w	r3, [r5, #2]
 8021438:	1b9b      	subs	r3, r3, r6
 802143a:	fb02 f303 	mul.w	r3, r2, r3
 802143e:	fa03 f30c 	lsl.w	r3, r3, ip
 8021442:	f303 031f 	ssat	r3, #32, r3
 8021446:	fb53 f310 	smmulr	r3, r3, r0
 802144a:	440b      	add	r3, r1
 802144c:	f303 0307 	ssat	r3, #8, r3
 8021450:	70bb      	strb	r3, [r7, #2]
 8021452:	e605      	b.n	8021060 <ai_mul_buffer_INT8+0x1f4>
 8021454:	eba5 0c0c 	sub.w	ip, r5, ip
 8021458:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802145a:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 802145c:	f995 3000 	ldrsb.w	r3, [r5]
 8021460:	e7c5      	b.n	80213ee <ai_mul_buffer_INT8+0x582>
 8021462:	bf00      	nop

08021464 <ai_sum_f32>:
 8021464:	edd1 7a00 	vldr	s15, [r1]
 8021468:	ed92 7a00 	vldr	s14, [r2]
 802146c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8021470:	edc0 7a00 	vstr	s15, [r0]
 8021474:	4770      	bx	lr
 8021476:	bf00      	nop

08021478 <ai_mul_f32>:
 8021478:	edd1 7a00 	vldr	s15, [r1]
 802147c:	ed92 7a00 	vldr	s14, [r2]
 8021480:	ee67 7a87 	vmul.f32	s15, s15, s14
 8021484:	edc0 7a00 	vstr	s15, [r0]
 8021488:	4770      	bx	lr
 802148a:	bf00      	nop

0802148c <ai_sum_buffer_INT8>:
 802148c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8021490:	9c07      	ldr	r4, [sp, #28]
 8021492:	f8dd 8034 	ldr.w	r8, [sp, #52]	@ 0x34
 8021496:	ed94 0a00 	vldr	s0, [r4]
 802149a:	9c08      	ldr	r4, [sp, #32]
 802149c:	f994 6000 	ldrsb.w	r6, [r4]
 80214a0:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 80214a2:	edd4 0a00 	vldr	s1, [r4]
 80214a6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80214a8:	f994 9000 	ldrsb.w	r9, [r4]
 80214ac:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80214ae:	ed94 1a00 	vldr	s2, [r4]
 80214b2:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80214b4:	f994 5000 	ldrsb.w	r5, [r4]
 80214b8:	f1b8 0f00 	cmp.w	r8, #0
 80214bc:	d10e      	bne.n	80214dc <ai_sum_buffer_INT8+0x50>
 80214be:	eeb4 0a41 	vcmp.f32	s0, s2
 80214c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80214c6:	d102      	bne.n	80214ce <ai_sum_buffer_INT8+0x42>
 80214c8:	42ae      	cmp	r6, r5
 80214ca:	f000 8138 	beq.w	802173e <ai_sum_buffer_INT8+0x2b2>
 80214ce:	e9cd 9508 	strd	r9, r5, [sp, #32]
 80214d2:	9607      	str	r6, [sp, #28]
 80214d4:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80214d8:	f000 bc6c 	b.w	8021db4 <ai_math_elementwise_sum_int8>
 80214dc:	eec0 5a81 	vdiv.f32	s11, s1, s2
 80214e0:	f04f 0c01 	mov.w	ip, #1
 80214e4:	089f      	lsrs	r7, r3, #2
 80214e6:	eec0 7a01 	vdiv.f32	s15, s0, s2
 80214ea:	ee15 4a90 	vmov	r4, s11
 80214ee:	ee17 ea90 	vmov	lr, s15
 80214f2:	f3c4 54c7 	ubfx	r4, r4, #23, #8
 80214f6:	f1c4 047e 	rsb	r4, r4, #126	@ 0x7e
 80214fa:	f3ce 5ec7 	ubfx	lr, lr, #23, #8
 80214fe:	ea04 74e4 	and.w	r4, r4, r4, asr #31
 8021502:	f1ce 0e7e 	rsb	lr, lr, #126	@ 0x7e
 8021506:	4574      	cmp	r4, lr
 8021508:	bfa8      	it	ge
 802150a:	4674      	movge	r4, lr
 802150c:	f104 0e1d 	add.w	lr, r4, #29
 8021510:	fa0c fe0e 	lsl.w	lr, ip, lr
 8021514:	ee07 ea10 	vmov	s14, lr
 8021518:	45e0      	cmp	r8, ip
 802151a:	eeb8 6ac7 	vcvt.f32.s32	s12, s14
 802151e:	f000 8087 	beq.w	8021630 <ai_sum_buffer_INT8+0x1a4>
 8021522:	ee07 6a10 	vmov	s14, r6
 8021526:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 802152a:	ee07 5a10 	vmov	s14, r5
 802152e:	f992 2000 	ldrsb.w	r2, [r2]
 8021532:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8021536:	eba2 0209 	sub.w	r2, r2, r9
 802153a:	eea6 7ae7 	vfms.f32	s14, s13, s15
 802153e:	f104 0616 	add.w	r6, r4, #22
 8021542:	3415      	adds	r4, #21
 8021544:	ee05 2a10 	vmov	s10, r2
 8021548:	ee77 7aa7 	vadd.f32	s15, s15, s15
 802154c:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8021550:	fa0c f204 	lsl.w	r2, ip, r4
 8021554:	fa0c f406 	lsl.w	r4, ip, r6
 8021558:	eea5 7a25 	vfma.f32	s14, s10, s11
 802155c:	ee67 6a86 	vmul.f32	s13, s15, s12
 8021560:	ee07 4a90 	vmov	s15, r4
 8021564:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8021568:	ee67 7a87 	vmul.f32	s15, s15, s14
 802156c:	eebd 7ae6 	vcvt.s32.f32	s14, s13
 8021570:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8021574:	ee17 4a10 	vmov	r4, s14
 8021578:	ee17 5a90 	vmov	r5, s15
 802157c:	4415      	add	r5, r2
 802157e:	2f00      	cmp	r7, #0
 8021580:	f000 80f8 	beq.w	8021774 <ai_sum_buffer_INT8+0x2e8>
 8021584:	ea4f 0887 	mov.w	r8, r7, lsl #2
 8021588:	f100 0e04 	add.w	lr, r0, #4
 802158c:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8021590:	f851 2b04 	ldr.w	r2, [r1], #4
 8021594:	ea4f 2c02 	mov.w	ip, r2, lsl #8
 8021598:	f00c 2cff 	and.w	ip, ip, #4278255360	@ 0xff00ff00
 802159c:	fb34 590c 	smlawb	r9, r4, ip, r5
 80215a0:	fa49 f906 	asr.w	r9, r9, r6
 80215a4:	f309 0907 	ssat	r9, #8, r9
 80215a8:	f80e 9c04 	strb.w	r9, [lr, #-4]
 80215ac:	f002 22ff 	and.w	r2, r2, #4278255360	@ 0xff00ff00
 80215b0:	fb34 5902 	smlawb	r9, r4, r2, r5
 80215b4:	fa49 f906 	asr.w	r9, r9, r6
 80215b8:	f309 0907 	ssat	r9, #8, r9
 80215bc:	f80e 9c03 	strb.w	r9, [lr, #-3]
 80215c0:	fb34 5c1c 	smlawt	ip, r4, ip, r5
 80215c4:	fa4c fc06 	asr.w	ip, ip, r6
 80215c8:	f30c 0c07 	ssat	ip, #8, ip
 80215cc:	f80e cc02 	strb.w	ip, [lr, #-2]
 80215d0:	fb34 5212 	smlawt	r2, r4, r2, r5
 80215d4:	4132      	asrs	r2, r6
 80215d6:	f302 0207 	ssat	r2, #8, r2
 80215da:	42b9      	cmp	r1, r7
 80215dc:	f80e 2c01 	strb.w	r2, [lr, #-1]
 80215e0:	f10e 0e04 	add.w	lr, lr, #4
 80215e4:	d1d4      	bne.n	8021590 <ai_sum_buffer_INT8+0x104>
 80215e6:	4440      	add	r0, r8
 80215e8:	f013 0303 	ands.w	r3, r3, #3
 80215ec:	d01e      	beq.n	802162c <ai_sum_buffer_INT8+0x1a0>
 80215ee:	f997 2000 	ldrsb.w	r2, [r7]
 80215f2:	0212      	lsls	r2, r2, #8
 80215f4:	fb34 5202 	smlawb	r2, r4, r2, r5
 80215f8:	4132      	asrs	r2, r6
 80215fa:	f302 0207 	ssat	r2, #8, r2
 80215fe:	3b01      	subs	r3, #1
 8021600:	7002      	strb	r2, [r0, #0]
 8021602:	d013      	beq.n	802162c <ai_sum_buffer_INT8+0x1a0>
 8021604:	f997 2001 	ldrsb.w	r2, [r7, #1]
 8021608:	0212      	lsls	r2, r2, #8
 802160a:	fb34 5202 	smlawb	r2, r4, r2, r5
 802160e:	4132      	asrs	r2, r6
 8021610:	f302 0207 	ssat	r2, #8, r2
 8021614:	2b01      	cmp	r3, #1
 8021616:	7042      	strb	r2, [r0, #1]
 8021618:	d008      	beq.n	802162c <ai_sum_buffer_INT8+0x1a0>
 802161a:	f997 3002 	ldrsb.w	r3, [r7, #2]
 802161e:	021b      	lsls	r3, r3, #8
 8021620:	fb34 5303 	smlawb	r3, r4, r3, r5
 8021624:	4133      	asrs	r3, r6
 8021626:	f303 0307 	ssat	r3, #8, r3
 802162a:	7083      	strb	r3, [r0, #2]
 802162c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8021630:	ee07 9a10 	vmov	s14, r9
 8021634:	eeb8 5ac7 	vcvt.f32.s32	s10, s14
 8021638:	ee07 5a10 	vmov	s14, r5
 802163c:	f991 1000 	ldrsb.w	r1, [r1]
 8021640:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8021644:	1b89      	subs	r1, r1, r6
 8021646:	eea5 7a65 	vfms.f32	s14, s10, s11
 802164a:	f104 0e16 	add.w	lr, r4, #22
 802164e:	3415      	adds	r4, #21
 8021650:	ee06 1a90 	vmov	s13, r1
 8021654:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8021658:	fa08 f10e 	lsl.w	r1, r8, lr
 802165c:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8021660:	fa08 f404 	lsl.w	r4, r8, r4
 8021664:	ee07 1a90 	vmov	s15, r1
 8021668:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802166c:	ee75 5aa5 	vadd.f32	s11, s11, s11
 8021670:	ee67 7a87 	vmul.f32	s15, s15, s14
 8021674:	ee65 5a86 	vmul.f32	s11, s11, s12
 8021678:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802167c:	eebd 7ae5 	vcvt.s32.f32	s14, s11
 8021680:	ee17 5a90 	vmov	r5, s15
 8021684:	ee17 6a10 	vmov	r6, s14
 8021688:	4425      	add	r5, r4
 802168a:	2f00      	cmp	r7, #0
 802168c:	d074      	beq.n	8021778 <ai_sum_buffer_INT8+0x2ec>
 802168e:	ea4f 0887 	mov.w	r8, r7, lsl #2
 8021692:	f100 0c04 	add.w	ip, r0, #4
 8021696:	eb02 0787 	add.w	r7, r2, r7, lsl #2
 802169a:	f852 1b04 	ldr.w	r1, [r2], #4
 802169e:	020c      	lsls	r4, r1, #8
 80216a0:	f004 24ff 	and.w	r4, r4, #4278255360	@ 0xff00ff00
 80216a4:	fb36 5904 	smlawb	r9, r6, r4, r5
 80216a8:	fa49 f90e 	asr.w	r9, r9, lr
 80216ac:	f309 0907 	ssat	r9, #8, r9
 80216b0:	f80c 9c04 	strb.w	r9, [ip, #-4]
 80216b4:	f001 21ff 	and.w	r1, r1, #4278255360	@ 0xff00ff00
 80216b8:	fb36 5901 	smlawb	r9, r6, r1, r5
 80216bc:	fa49 f90e 	asr.w	r9, r9, lr
 80216c0:	f309 0907 	ssat	r9, #8, r9
 80216c4:	f80c 9c03 	strb.w	r9, [ip, #-3]
 80216c8:	fb36 5414 	smlawt	r4, r6, r4, r5
 80216cc:	fa44 f40e 	asr.w	r4, r4, lr
 80216d0:	f304 0407 	ssat	r4, #8, r4
 80216d4:	f80c 4c02 	strb.w	r4, [ip, #-2]
 80216d8:	fb36 5111 	smlawt	r1, r6, r1, r5
 80216dc:	fa41 f10e 	asr.w	r1, r1, lr
 80216e0:	f301 0107 	ssat	r1, #8, r1
 80216e4:	42ba      	cmp	r2, r7
 80216e6:	f80c 1c01 	strb.w	r1, [ip, #-1]
 80216ea:	f10c 0c04 	add.w	ip, ip, #4
 80216ee:	d1d4      	bne.n	802169a <ai_sum_buffer_INT8+0x20e>
 80216f0:	4440      	add	r0, r8
 80216f2:	f013 0303 	ands.w	r3, r3, #3
 80216f6:	d099      	beq.n	802162c <ai_sum_buffer_INT8+0x1a0>
 80216f8:	f997 2000 	ldrsb.w	r2, [r7]
 80216fc:	0212      	lsls	r2, r2, #8
 80216fe:	fb36 5202 	smlawb	r2, r6, r2, r5
 8021702:	fa42 f20e 	asr.w	r2, r2, lr
 8021706:	f302 0207 	ssat	r2, #8, r2
 802170a:	3b01      	subs	r3, #1
 802170c:	7002      	strb	r2, [r0, #0]
 802170e:	d08d      	beq.n	802162c <ai_sum_buffer_INT8+0x1a0>
 8021710:	f997 2001 	ldrsb.w	r2, [r7, #1]
 8021714:	0212      	lsls	r2, r2, #8
 8021716:	fb36 5202 	smlawb	r2, r6, r2, r5
 802171a:	fa42 f20e 	asr.w	r2, r2, lr
 802171e:	f302 0207 	ssat	r2, #8, r2
 8021722:	2b01      	cmp	r3, #1
 8021724:	7042      	strb	r2, [r0, #1]
 8021726:	d081      	beq.n	802162c <ai_sum_buffer_INT8+0x1a0>
 8021728:	f997 3002 	ldrsb.w	r3, [r7, #2]
 802172c:	021b      	lsls	r3, r3, #8
 802172e:	fb36 5303 	smlawb	r3, r6, r3, r5
 8021732:	fa43 f30e 	asr.w	r3, r3, lr
 8021736:	f303 0307 	ssat	r3, #8, r3
 802173a:	7083      	strb	r3, [r0, #2]
 802173c:	e776      	b.n	802162c <ai_sum_buffer_INT8+0x1a0>
 802173e:	eef4 0a41 	vcmp.f32	s1, s2
 8021742:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021746:	f47f aec2 	bne.w	80214ce <ai_sum_buffer_INT8+0x42>
 802174a:	45b1      	cmp	r9, r6
 802174c:	f47f aebf 	bne.w	80214ce <ai_sum_buffer_INT8+0x42>
 8021750:	2b00      	cmp	r3, #0
 8021752:	f43f af6b 	beq.w	802162c <ai_sum_buffer_INT8+0x1a0>
 8021756:	4403      	add	r3, r0
 8021758:	f911 4b01 	ldrsb.w	r4, [r1], #1
 802175c:	f912 5b01 	ldrsb.w	r5, [r2], #1
 8021760:	442c      	add	r4, r5
 8021762:	eba4 0409 	sub.w	r4, r4, r9
 8021766:	f304 0407 	ssat	r4, #8, r4
 802176a:	f800 4b01 	strb.w	r4, [r0], #1
 802176e:	4298      	cmp	r0, r3
 8021770:	d1f2      	bne.n	8021758 <ai_sum_buffer_INT8+0x2cc>
 8021772:	e75b      	b.n	802162c <ai_sum_buffer_INT8+0x1a0>
 8021774:	460f      	mov	r7, r1
 8021776:	e737      	b.n	80215e8 <ai_sum_buffer_INT8+0x15c>
 8021778:	4617      	mov	r7, r2
 802177a:	e7ba      	b.n	80216f2 <ai_sum_buffer_INT8+0x266>

0802177c <ai_array_to_buffer_fmt>:
 802177c:	f3c0 4343 	ubfx	r3, r0, #17, #4
 8021780:	2b02      	cmp	r3, #2
 8021782:	d055      	beq.n	8021830 <ai_array_to_buffer_fmt+0xb4>
 8021784:	4a2d      	ldr	r2, [pc, #180]	@ (802183c <ai_array_to_buffer_fmt+0xc0>)
 8021786:	f020 437e 	bic.w	r3, r0, #4261412864	@ 0xfe000000
 802178a:	4293      	cmp	r3, r2
 802178c:	d010      	beq.n	80217b0 <ai_array_to_buffer_fmt+0x34>
 802178e:	dc21      	bgt.n	80217d4 <ai_array_to_buffer_fmt+0x58>
 8021790:	4a2b      	ldr	r2, [pc, #172]	@ (8021840 <ai_array_to_buffer_fmt+0xc4>)
 8021792:	4293      	cmp	r3, r2
 8021794:	d00c      	beq.n	80217b0 <ai_array_to_buffer_fmt+0x34>
 8021796:	dd0f      	ble.n	80217b8 <ai_array_to_buffer_fmt+0x3c>
 8021798:	4a2a      	ldr	r2, [pc, #168]	@ (8021844 <ai_array_to_buffer_fmt+0xc8>)
 802179a:	4293      	cmp	r3, r2
 802179c:	d008      	beq.n	80217b0 <ai_array_to_buffer_fmt+0x34>
 802179e:	f502 32fa 	add.w	r2, r2, #128000	@ 0x1f400
 80217a2:	4293      	cmp	r3, r2
 80217a4:	d004      	beq.n	80217b0 <ai_array_to_buffer_fmt+0x34>
 80217a6:	4a28      	ldr	r2, [pc, #160]	@ (8021848 <ai_array_to_buffer_fmt+0xcc>)
 80217a8:	4293      	cmp	r3, r2
 80217aa:	bf0c      	ite	eq
 80217ac:	4613      	moveq	r3, r2
 80217ae:	2340      	movne	r3, #64	@ 0x40
 80217b0:	f000 40d0 	and.w	r0, r0, #1744830464	@ 0x68000000
 80217b4:	4318      	orrs	r0, r3
 80217b6:	4770      	bx	lr
 80217b8:	f5a2 6280 	sub.w	r2, r2, #1024	@ 0x400
 80217bc:	4293      	cmp	r3, r2
 80217be:	d0f7      	beq.n	80217b0 <ai_array_to_buffer_fmt+0x34>
 80217c0:	dd2c      	ble.n	802181c <ai_array_to_buffer_fmt+0xa0>
 80217c2:	4a22      	ldr	r2, [pc, #136]	@ (802184c <ai_array_to_buffer_fmt+0xd0>)
 80217c4:	f000 40d0 	and.w	r0, r0, #1744830464	@ 0x68000000
 80217c8:	4293      	cmp	r3, r2
 80217ca:	bf0c      	ite	eq
 80217cc:	4613      	moveq	r3, r2
 80217ce:	2340      	movne	r3, #64	@ 0x40
 80217d0:	4318      	orrs	r0, r3
 80217d2:	4770      	bx	lr
 80217d4:	4a1e      	ldr	r2, [pc, #120]	@ (8021850 <ai_array_to_buffer_fmt+0xd4>)
 80217d6:	4293      	cmp	r3, r2
 80217d8:	d0ea      	beq.n	80217b0 <ai_array_to_buffer_fmt+0x34>
 80217da:	dd10      	ble.n	80217fe <ai_array_to_buffer_fmt+0x82>
 80217dc:	4a1d      	ldr	r2, [pc, #116]	@ (8021854 <ai_array_to_buffer_fmt+0xd8>)
 80217de:	4293      	cmp	r3, r2
 80217e0:	d0e6      	beq.n	80217b0 <ai_array_to_buffer_fmt+0x34>
 80217e2:	f202 72f1 	addw	r2, r2, #2033	@ 0x7f1
 80217e6:	4293      	cmp	r3, r2
 80217e8:	d0e2      	beq.n	80217b0 <ai_array_to_buffer_fmt+0x34>
 80217ea:	f5a2 6200 	sub.w	r2, r2, #2048	@ 0x800
 80217ee:	4293      	cmp	r3, r2
 80217f0:	bf0c      	ite	eq
 80217f2:	4613      	moveq	r3, r2
 80217f4:	2340      	movne	r3, #64	@ 0x40
 80217f6:	f000 40d0 	and.w	r0, r0, #1744830464	@ 0x68000000
 80217fa:	4318      	orrs	r0, r3
 80217fc:	4770      	bx	lr
 80217fe:	f2a2 3287 	subw	r2, r2, #903	@ 0x387
 8021802:	4293      	cmp	r3, r2
 8021804:	d0d4      	beq.n	80217b0 <ai_array_to_buffer_fmt+0x34>
 8021806:	f502 7260 	add.w	r2, r2, #896	@ 0x380
 802180a:	4293      	cmp	r3, r2
 802180c:	d0d0      	beq.n	80217b0 <ai_array_to_buffer_fmt+0x34>
 802180e:	f5a2 6280 	sub.w	r2, r2, #1024	@ 0x400
 8021812:	4293      	cmp	r3, r2
 8021814:	bf0c      	ite	eq
 8021816:	4613      	moveq	r3, r2
 8021818:	2340      	movne	r3, #64	@ 0x40
 802181a:	e7c9      	b.n	80217b0 <ai_array_to_buffer_fmt+0x34>
 802181c:	f5a2 6280 	sub.w	r2, r2, #1024	@ 0x400
 8021820:	4293      	cmp	r3, r2
 8021822:	d0c5      	beq.n	80217b0 <ai_array_to_buffer_fmt+0x34>
 8021824:	3280      	adds	r2, #128	@ 0x80
 8021826:	4293      	cmp	r3, r2
 8021828:	bf0c      	ite	eq
 802182a:	4613      	moveq	r3, r2
 802182c:	2340      	movne	r3, #64	@ 0x40
 802182e:	e7bf      	b.n	80217b0 <ai_array_to_buffer_fmt+0x34>
 8021830:	4b09      	ldr	r3, [pc, #36]	@ (8021858 <ai_array_to_buffer_fmt+0xdc>)
 8021832:	4003      	ands	r3, r0
 8021834:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8021838:	e7ba      	b.n	80217b0 <ai_array_to_buffer_fmt+0x34>
 802183a:	bf00      	nop
 802183c:	00821040 	.word	0x00821040
 8021840:	00040840 	.word	0x00040840
 8021844:	00041040 	.word	0x00041040
 8021848:	0004084f 	.word	0x0004084f
 802184c:	00040447 	.word	0x00040447
 8021850:	00840447 	.word	0x00840447
 8021854:	0084084f 	.word	0x0084084f
 8021858:	00803fff 	.word	0x00803fff

0802185c <ai_array_get_byte_size>:
 802185c:	b319      	cbz	r1, 80218a6 <ai_array_get_byte_size+0x4a>
 802185e:	f3c0 13c6 	ubfx	r3, r0, #7, #7
 8021862:	b500      	push	{lr}
 8021864:	f46f 7288 	mvn.w	r2, #272	@ 0x110
 8021868:	f3c0 4e43 	ubfx	lr, r0, #17, #4
 802186c:	fb03 f101 	mul.w	r1, r3, r1
 8021870:	fa42 f20e 	asr.w	r2, r2, lr
 8021874:	07d2      	lsls	r2, r2, #31
 8021876:	f3c0 5c41 	ubfx	ip, r0, #21, #2
 802187a:	f101 0107 	add.w	r1, r1, #7
 802187e:	ea4f 10e0 	mov.w	r0, r0, asr #7
 8021882:	bf58      	it	pl
 8021884:	f000 007f 	andpl.w	r0, r0, #127	@ 0x7f
 8021888:	f021 0107 	bic.w	r1, r1, #7
 802188c:	bf58      	it	pl
 802188e:	fa40 f00c 	asrpl.w	r0, r0, ip
 8021892:	fa21 f10c 	lsr.w	r1, r1, ip
 8021896:	bf54      	ite	pl
 8021898:	4083      	lslpl	r3, r0
 802189a:	2300      	movmi	r3, #0
 802189c:	3107      	adds	r1, #7
 802189e:	4419      	add	r1, r3
 80218a0:	08c8      	lsrs	r0, r1, #3
 80218a2:	f85d fb04 	ldr.w	pc, [sp], #4
 80218a6:	4608      	mov	r0, r1
 80218a8:	4770      	bx	lr
 80218aa:	bf00      	nop

080218ac <core_get_broadcasted_shape>:
 80218ac:	b470      	push	{r4, r5, r6}
 80218ae:	6804      	ldr	r4, [r0, #0]
 80218b0:	f3c4 2417 	ubfx	r4, r4, #8, #24
 80218b4:	b324      	cbz	r4, 8021900 <core_get_broadcasted_shape+0x54>
 80218b6:	4623      	mov	r3, r4
 80218b8:	3b01      	subs	r3, #1
 80218ba:	429c      	cmp	r4, r3
 80218bc:	d91b      	bls.n	80218f6 <core_get_broadcasted_shape+0x4a>
 80218be:	6814      	ldr	r4, [r2, #0]
 80218c0:	680e      	ldr	r6, [r1, #0]
 80218c2:	ebb3 2f14 	cmp.w	r3, r4, lsr #8
 80218c6:	bf36      	itet	cc
 80218c8:	6854      	ldrcc	r4, [r2, #4]
 80218ca:	2401      	movcs	r4, #1
 80218cc:	f854 4023 	ldrcc.w	r4, [r4, r3, lsl #2]
 80218d0:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 80218d4:	bf38      	it	cc
 80218d6:	ea4f 0c83 	movcc.w	ip, r3, lsl #2
 80218da:	ebb3 2f16 	cmp.w	r3, r6, lsr #8
 80218de:	f04f 0501 	mov.w	r5, #1
 80218e2:	bf3c      	itt	cc
 80218e4:	684d      	ldrcc	r5, [r1, #4]
 80218e6:	f855 500c 	ldrcc.w	r5, [r5, ip]
 80218ea:	42ac      	cmp	r4, r5
 80218ec:	bf38      	it	cc
 80218ee:	462c      	movcc	r4, r5
 80218f0:	6845      	ldr	r5, [r0, #4]
 80218f2:	f845 400c 	str.w	r4, [r5, ip]
 80218f6:	b11b      	cbz	r3, 8021900 <core_get_broadcasted_shape+0x54>
 80218f8:	6804      	ldr	r4, [r0, #0]
 80218fa:	f3c4 2417 	ubfx	r4, r4, #8, #24
 80218fe:	e7db      	b.n	80218b8 <core_get_broadcasted_shape+0xc>
 8021900:	bc70      	pop	{r4, r5, r6}
 8021902:	4770      	bx	lr

08021904 <core_compute_offsets>:
 8021904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021908:	e9d1 4600 	ldrd	r4, r6, [r1]
 802190c:	f5b4 6fa0 	cmp.w	r4, #1280	@ 0x500
 8021910:	f8d2 9004 	ldr.w	r9, [r2, #4]
 8021914:	6871      	ldr	r1, [r6, #4]
 8021916:	6812      	ldr	r2, [r2, #0]
 8021918:	bf28      	it	cs
 802191a:	6935      	ldrcs	r5, [r6, #16]
 802191c:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8021920:	f8d0 b000 	ldr.w	fp, [r0]
 8021924:	bf2e      	itee	cs
 8021926:	fb05 fe01 	mulcs.w	lr, r5, r1
 802192a:	468e      	movcc	lr, r1
 802192c:	2501      	movcc	r5, #1
 802192e:	f5b2 6fa0 	cmp.w	r2, #1280	@ 0x500
 8021932:	bf28      	it	cs
 8021934:	f8d9 2010 	ldrcs.w	r2, [r9, #16]
 8021938:	e9d6 4802 	ldrd	r4, r8, [r6, #8]
 802193c:	e9d9 6902 	ldrd	r6, r9, [r9, #8]
 8021940:	bf38      	it	cc
 8021942:	2201      	movcc	r2, #1
 8021944:	b083      	sub	sp, #12
 8021946:	ebb4 0a06 	subs.w	sl, r4, r6
 802194a:	bf18      	it	ne
 802194c:	f04f 0a01 	movne.w	sl, #1
 8021950:	f5bb 7f00 	cmp.w	fp, #512	@ 0x200
 8021954:	9201      	str	r2, [sp, #4]
 8021956:	f3cb 2217 	ubfx	r2, fp, #8, #24
 802195a:	d308      	bcc.n	802196e <core_compute_offsets+0x6a>
 802195c:	6847      	ldr	r7, [r0, #4]
 802195e:	4561      	cmp	r1, ip
 8021960:	bf0c      	ite	eq
 8021962:	461a      	moveq	r2, r3
 8021964:	2200      	movne	r2, #0
 8021966:	607a      	str	r2, [r7, #4]
 8021968:	6802      	ldr	r2, [r0, #0]
 802196a:	f3c2 2217 	ubfx	r2, r2, #8, #24
 802196e:	9f01      	ldr	r7, [sp, #4]
 8021970:	42bd      	cmp	r5, r7
 8021972:	d03f      	beq.n	80219f4 <core_compute_offsets+0xf0>
 8021974:	eba1 0b0c 	sub.w	fp, r1, ip
 8021978:	fabb fb8b 	clz	fp, fp
 802197c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8021980:	fb01 fb0b 	mul.w	fp, r1, fp
 8021984:	f1cb 0b00 	rsb	fp, fp, #0
 8021988:	2a04      	cmp	r2, #4
 802198a:	d906      	bls.n	802199a <core_compute_offsets+0x96>
 802198c:	6847      	ldr	r7, [r0, #4]
 802198e:	fb0b f203 	mul.w	r2, fp, r3
 8021992:	613a      	str	r2, [r7, #16]
 8021994:	6802      	ldr	r2, [r0, #0]
 8021996:	f3c2 2217 	ubfx	r2, r2, #8, #24
 802199a:	42b4      	cmp	r4, r6
 802199c:	d03a      	beq.n	8021a14 <core_compute_offsets+0x110>
 802199e:	f04f 0b00 	mov.w	fp, #0
 80219a2:	2a02      	cmp	r2, #2
 80219a4:	fb0e fa0a 	mul.w	sl, lr, sl
 80219a8:	d90e      	bls.n	80219c8 <core_compute_offsets+0xc4>
 80219aa:	9a01      	ldr	r2, [sp, #4]
 80219ac:	6847      	ldr	r7, [r0, #4]
 80219ae:	1aaa      	subs	r2, r5, r2
 80219b0:	bf18      	it	ne
 80219b2:	2201      	movne	r2, #1
 80219b4:	ebab 0b0a 	sub.w	fp, fp, sl
 80219b8:	fb01 bb02 	mla	fp, r1, r2, fp
 80219bc:	fb03 f20b 	mul.w	r2, r3, fp
 80219c0:	60ba      	str	r2, [r7, #8]
 80219c2:	6802      	ldr	r2, [r0, #0]
 80219c4:	f3c2 2217 	ubfx	r2, r2, #8, #24
 80219c8:	45c8      	cmp	r8, r9
 80219ca:	d019      	beq.n	8021a00 <core_compute_offsets+0xfc>
 80219cc:	2100      	movs	r1, #0
 80219ce:	2a03      	cmp	r2, #3
 80219d0:	d90d      	bls.n	80219ee <core_compute_offsets+0xea>
 80219d2:	ebb8 0809 	subs.w	r8, r8, r9
 80219d6:	fb0e f404 	mul.w	r4, lr, r4
 80219da:	bf18      	it	ne
 80219dc:	f04f 0801 	movne.w	r8, #1
 80219e0:	fb08 1114 	mls	r1, r8, r4, r1
 80219e4:	6842      	ldr	r2, [r0, #4]
 80219e6:	4451      	add	r1, sl
 80219e8:	fb03 f101 	mul.w	r1, r3, r1
 80219ec:	60d1      	str	r1, [r2, #12]
 80219ee:	b003      	add	sp, #12
 80219f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80219f4:	ebb1 0b0c 	subs.w	fp, r1, ip
 80219f8:	bf18      	it	ne
 80219fa:	f04f 0b01 	movne.w	fp, #1
 80219fe:	e7c3      	b.n	8021988 <core_compute_offsets+0x84>
 8021a00:	42b4      	cmp	r4, r6
 8021a02:	d0e3      	beq.n	80219cc <core_compute_offsets+0xc8>
 8021a04:	9e01      	ldr	r6, [sp, #4]
 8021a06:	42b5      	cmp	r5, r6
 8021a08:	d0e0      	beq.n	80219cc <core_compute_offsets+0xc8>
 8021a0a:	ebb1 010c 	subs.w	r1, r1, ip
 8021a0e:	bf18      	it	ne
 8021a10:	2101      	movne	r1, #1
 8021a12:	e7dc      	b.n	80219ce <core_compute_offsets+0xca>
 8021a14:	9f01      	ldr	r7, [sp, #4]
 8021a16:	42bd      	cmp	r5, r7
 8021a18:	d0c1      	beq.n	802199e <core_compute_offsets+0x9a>
 8021a1a:	ebb1 0b0c 	subs.w	fp, r1, ip
 8021a1e:	bf18      	it	ne
 8021a20:	f04f 0b01 	movne.w	fp, #1
 8021a24:	e7bd      	b.n	80219a2 <core_compute_offsets+0x9e>
 8021a26:	bf00      	nop

08021a28 <ai_math_elementwise_mul_int8>:
 8021a28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a2c:	b08d      	sub	sp, #52	@ 0x34
 8021a2e:	ee20 0a80 	vmul.f32	s0, s1, s0
 8021a32:	9306      	str	r3, [sp, #24]
 8021a34:	2300      	movs	r3, #0
 8021a36:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8021a3a:	f99d 3058 	ldrsb.w	r3, [sp, #88]	@ 0x58
 8021a3e:	9003      	str	r0, [sp, #12]
 8021a40:	9307      	str	r3, [sp, #28]
 8021a42:	ee80 0a01 	vdiv.f32	s0, s0, s2
 8021a46:	f99d 305c 	ldrsb.w	r3, [sp, #92]	@ 0x5c
 8021a4a:	9305      	str	r3, [sp, #20]
 8021a4c:	f10d 002e 	add.w	r0, sp, #46	@ 0x2e
 8021a50:	f99d 5060 	ldrsb.w	r5, [sp, #96]	@ 0x60
 8021a54:	9204      	str	r2, [sp, #16]
 8021a56:	460c      	mov	r4, r1
 8021a58:	f7f3 facc 	bl	8014ff4 <align_factor>
 8021a5c:	f9bd e02e 	ldrsh.w	lr, [sp, #46]	@ 0x2e
 8021a60:	f10e 36ff 	add.w	r6, lr, #4294967295	@ 0xffffffff
 8021a64:	b2b3      	uxth	r3, r6
 8021a66:	2b14      	cmp	r3, #20
 8021a68:	f200 811c 	bhi.w	8021ca4 <ai_math_elementwise_mul_int8+0x27c>
 8021a6c:	2301      	movs	r3, #1
 8021a6e:	fa05 fc0e 	lsl.w	ip, r5, lr
 8021a72:	fa03 f30e 	lsl.w	r3, r3, lr
 8021a76:	eb0c 0c53 	add.w	ip, ip, r3, lsr #1
 8021a7a:	9a07      	ldr	r2, [sp, #28]
 8021a7c:	b293      	uxth	r3, r2
 8021a7e:	ea43 4a02 	orr.w	sl, r3, r2, lsl #16
 8021a82:	9b05      	ldr	r3, [sp, #20]
 8021a84:	b29d      	uxth	r5, r3
 8021a86:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 8021a8a:	9b06      	ldr	r3, [sp, #24]
 8021a8c:	089b      	lsrs	r3, r3, #2
 8021a8e:	f000 818e 	beq.w	8021dae <ai_math_elementwise_mul_int8+0x386>
 8021a92:	f1ae 0202 	sub.w	r2, lr, #2
 8021a96:	2701      	movs	r7, #1
 8021a98:	4097      	lsls	r7, r2
 8021a9a:	9a03      	ldr	r2, [sp, #12]
 8021a9c:	1c91      	adds	r1, r2, #2
 8021a9e:	009a      	lsls	r2, r3, #2
 8021aa0:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8021aa4:	9302      	str	r3, [sp, #8]
 8021aa6:	9b04      	ldr	r3, [sp, #16]
 8021aa8:	9301      	str	r3, [sp, #4]
 8021aaa:	f1ce 0301 	rsb	r3, lr, #1
 8021aae:	9209      	str	r2, [sp, #36]	@ 0x24
 8021ab0:	9308      	str	r3, [sp, #32]
 8021ab2:	46b9      	mov	r9, r7
 8021ab4:	e02e      	b.n	8021b14 <ai_math_elementwise_mul_int8+0xec>
 8021ab6:	fb58 9800 	smmla	r8, r8, r0, r9
 8021aba:	fa48 f806 	asr.w	r8, r8, r6
 8021abe:	44e0      	add	r8, ip
 8021ac0:	fb53 9300 	smmla	r3, r3, r0, r9
 8021ac4:	fb57 9700 	smmla	r7, r7, r0, r9
 8021ac8:	fb5b 9200 	smmla	r2, fp, r0, r9
 8021acc:	f308 0807 	ssat	r8, #8, r8
 8021ad0:	4137      	asrs	r7, r6
 8021ad2:	fa4f f888 	sxtb.w	r8, r8
 8021ad6:	4467      	add	r7, ip
 8021ad8:	f307 0707 	ssat	r7, #8, r7
 8021adc:	4133      	asrs	r3, r6
 8021ade:	b27f      	sxtb	r7, r7
 8021ae0:	4463      	add	r3, ip
 8021ae2:	f303 0307 	ssat	r3, #8, r3
 8021ae6:	4132      	asrs	r2, r6
 8021ae8:	b25b      	sxtb	r3, r3
 8021aea:	4462      	add	r2, ip
 8021aec:	f302 0207 	ssat	r2, #8, r2
 8021af0:	b252      	sxtb	r2, r2
 8021af2:	f04f 0b00 	mov.w	fp, #0
 8021af6:	f368 0b07 	bfi	fp, r8, #0, #8
 8021afa:	f367 2b0f 	bfi	fp, r7, #8, #8
 8021afe:	f363 4b17 	bfi	fp, r3, #16, #8
 8021b02:	9b02      	ldr	r3, [sp, #8]
 8021b04:	f362 6b1f 	bfi	fp, r2, #24, #8
 8021b08:	429c      	cmp	r4, r3
 8021b0a:	f841 bc02 	str.w	fp, [r1, #-2]
 8021b0e:	f101 0104 	add.w	r1, r1, #4
 8021b12:	d074      	beq.n	8021bfe <ai_math_elementwise_mul_int8+0x1d6>
 8021b14:	9a01      	ldr	r2, [sp, #4]
 8021b16:	f854 7b04 	ldr.w	r7, [r4], #4
 8021b1a:	f852 3b04 	ldr.w	r3, [r2], #4
 8021b1e:	9201      	str	r2, [sp, #4]
 8021b20:	ea4f 2b37 	mov.w	fp, r7, ror #8
 8021b24:	ea4f 2233 	mov.w	r2, r3, ror #8
 8021b28:	fa2f f787 	sxtb16	r7, r7
 8021b2c:	fa2f fb8b 	sxtb16	fp, fp
 8021b30:	fa2f f383 	sxtb16	r3, r3
 8021b34:	fa2f f282 	sxtb16	r2, r2
 8021b38:	fadb fb0a 	ssub16	fp, fp, sl
 8021b3c:	fad7 f70a 	ssub16	r7, r7, sl
 8021b40:	fad2 f205 	ssub16	r2, r2, r5
 8021b44:	fad3 f305 	ssub16	r3, r3, r5
 8021b48:	f1be 0f15 	cmp.w	lr, #21
 8021b4c:	fb17 f803 	smulbb	r8, r7, r3
 8021b50:	fb13 f337 	smultt	r3, r3, r7
 8021b54:	fb1b f702 	smulbb	r7, fp, r2
 8021b58:	fb12 fb3b 	smultt	fp, r2, fp
 8021b5c:	dcab      	bgt.n	8021ab6 <ai_math_elementwise_mul_int8+0x8e>
 8021b5e:	f1be 0f00 	cmp.w	lr, #0
 8021b62:	dd23      	ble.n	8021bac <ai_math_elementwise_mul_int8+0x184>
 8021b64:	ea4f 024b 	mov.w	r2, fp, lsl #1
 8021b68:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8021b6c:	005b      	lsls	r3, r3, #1
 8021b6e:	fb58 c800 	smmla	r8, r8, r0, ip
 8021b72:	007f      	lsls	r7, r7, #1
 8021b74:	fa48 f80e 	asr.w	r8, r8, lr
 8021b78:	fb53 c300 	smmla	r3, r3, r0, ip
 8021b7c:	fb57 c700 	smmla	r7, r7, r0, ip
 8021b80:	fb52 c200 	smmla	r2, r2, r0, ip
 8021b84:	f308 0807 	ssat	r8, #8, r8
 8021b88:	fa4f f888 	sxtb.w	r8, r8
 8021b8c:	fa47 f70e 	asr.w	r7, r7, lr
 8021b90:	f307 0707 	ssat	r7, #8, r7
 8021b94:	b27f      	sxtb	r7, r7
 8021b96:	fa43 f30e 	asr.w	r3, r3, lr
 8021b9a:	f303 0307 	ssat	r3, #8, r3
 8021b9e:	b25b      	sxtb	r3, r3
 8021ba0:	fa42 f20e 	asr.w	r2, r2, lr
 8021ba4:	f302 0207 	ssat	r2, #8, r2
 8021ba8:	b252      	sxtb	r2, r2
 8021baa:	e7a2      	b.n	8021af2 <ai_math_elementwise_mul_int8+0xca>
 8021bac:	9a08      	ldr	r2, [sp, #32]
 8021bae:	fa08 f802 	lsl.w	r8, r8, r2
 8021bb2:	f308 081f 	ssat	r8, #32, r8
 8021bb6:	fb58 f810 	smmulr	r8, r8, r0
 8021bba:	4093      	lsls	r3, r2
 8021bbc:	f303 031f 	ssat	r3, #32, r3
 8021bc0:	fb53 f310 	smmulr	r3, r3, r0
 8021bc4:	4097      	lsls	r7, r2
 8021bc6:	f307 071f 	ssat	r7, #32, r7
 8021bca:	fb57 f710 	smmulr	r7, r7, r0
 8021bce:	fa0b f202 	lsl.w	r2, fp, r2
 8021bd2:	f302 021f 	ssat	r2, #32, r2
 8021bd6:	fb52 f210 	smmulr	r2, r2, r0
 8021bda:	44e0      	add	r8, ip
 8021bdc:	f308 0807 	ssat	r8, #8, r8
 8021be0:	fa4f f888 	sxtb.w	r8, r8
 8021be4:	4467      	add	r7, ip
 8021be6:	f307 0707 	ssat	r7, #8, r7
 8021bea:	b27f      	sxtb	r7, r7
 8021bec:	4463      	add	r3, ip
 8021bee:	f303 0307 	ssat	r3, #8, r3
 8021bf2:	b25b      	sxtb	r3, r3
 8021bf4:	4462      	add	r2, ip
 8021bf6:	f302 0207 	ssat	r2, #8, r2
 8021bfa:	b252      	sxtb	r2, r2
 8021bfc:	e779      	b.n	8021af2 <ai_math_elementwise_mul_int8+0xca>
 8021bfe:	9b03      	ldr	r3, [sp, #12]
 8021c00:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021c02:	4413      	add	r3, r2
 8021c04:	9303      	str	r3, [sp, #12]
 8021c06:	9b04      	ldr	r3, [sp, #16]
 8021c08:	4413      	add	r3, r2
 8021c0a:	9304      	str	r3, [sp, #16]
 8021c0c:	9b06      	ldr	r3, [sp, #24]
 8021c0e:	f013 0203 	ands.w	r2, r3, #3
 8021c12:	d044      	beq.n	8021c9e <ai_math_elementwise_mul_int8+0x276>
 8021c14:	f1ae 0302 	sub.w	r3, lr, #2
 8021c18:	2101      	movs	r1, #1
 8021c1a:	f1be 0f15 	cmp.w	lr, #21
 8021c1e:	fa01 f803 	lsl.w	r8, r1, r3
 8021c22:	dd41      	ble.n	8021ca8 <ai_math_elementwise_mul_int8+0x280>
 8021c24:	9d02      	ldr	r5, [sp, #8]
 8021c26:	9f07      	ldr	r7, [sp, #28]
 8021c28:	f995 3000 	ldrsb.w	r3, [r5]
 8021c2c:	9c04      	ldr	r4, [sp, #16]
 8021c2e:	eba3 0e07 	sub.w	lr, r3, r7
 8021c32:	f994 4000 	ldrsb.w	r4, [r4]
 8021c36:	9b05      	ldr	r3, [sp, #20]
 8021c38:	1ae4      	subs	r4, r4, r3
 8021c3a:	fb04 f30e 	mul.w	r3, r4, lr
 8021c3e:	fb53 8300 	smmla	r3, r3, r0, r8
 8021c42:	4133      	asrs	r3, r6
 8021c44:	4463      	add	r3, ip
 8021c46:	f303 0307 	ssat	r3, #8, r3
 8021c4a:	9903      	ldr	r1, [sp, #12]
 8021c4c:	3a01      	subs	r2, #1
 8021c4e:	700b      	strb	r3, [r1, #0]
 8021c50:	d025      	beq.n	8021c9e <ai_math_elementwise_mul_int8+0x276>
 8021c52:	9c04      	ldr	r4, [sp, #16]
 8021c54:	f995 3001 	ldrsb.w	r3, [r5, #1]
 8021c58:	f994 4001 	ldrsb.w	r4, [r4, #1]
 8021c5c:	9905      	ldr	r1, [sp, #20]
 8021c5e:	1bdb      	subs	r3, r3, r7
 8021c60:	1a64      	subs	r4, r4, r1
 8021c62:	fb04 f303 	mul.w	r3, r4, r3
 8021c66:	fb53 8300 	smmla	r3, r3, r0, r8
 8021c6a:	4133      	asrs	r3, r6
 8021c6c:	4463      	add	r3, ip
 8021c6e:	f303 0307 	ssat	r3, #8, r3
 8021c72:	9903      	ldr	r1, [sp, #12]
 8021c74:	2a01      	cmp	r2, #1
 8021c76:	704b      	strb	r3, [r1, #1]
 8021c78:	d011      	beq.n	8021c9e <ai_math_elementwise_mul_int8+0x276>
 8021c7a:	9c04      	ldr	r4, [sp, #16]
 8021c7c:	f995 3002 	ldrsb.w	r3, [r5, #2]
 8021c80:	f994 2002 	ldrsb.w	r2, [r4, #2]
 8021c84:	9905      	ldr	r1, [sp, #20]
 8021c86:	1bdb      	subs	r3, r3, r7
 8021c88:	1a52      	subs	r2, r2, r1
 8021c8a:	fb02 f303 	mul.w	r3, r2, r3
 8021c8e:	fb53 8300 	smmla	r3, r3, r0, r8
 8021c92:	4133      	asrs	r3, r6
 8021c94:	4463      	add	r3, ip
 8021c96:	f303 0307 	ssat	r3, #8, r3
 8021c9a:	9903      	ldr	r1, [sp, #12]
 8021c9c:	708b      	strb	r3, [r1, #2]
 8021c9e:	b00d      	add	sp, #52	@ 0x34
 8021ca0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021ca4:	46ac      	mov	ip, r5
 8021ca6:	e6e8      	b.n	8021a7a <ai_math_elementwise_mul_int8+0x52>
 8021ca8:	f1be 0f00 	cmp.w	lr, #0
 8021cac:	dd3c      	ble.n	8021d28 <ai_math_elementwise_mul_int8+0x300>
 8021cae:	9c02      	ldr	r4, [sp, #8]
 8021cb0:	9e04      	ldr	r6, [sp, #16]
 8021cb2:	f994 3000 	ldrsb.w	r3, [r4]
 8021cb6:	9d07      	ldr	r5, [sp, #28]
 8021cb8:	f996 1000 	ldrsb.w	r1, [r6]
 8021cbc:	9f05      	ldr	r7, [sp, #20]
 8021cbe:	1b5b      	subs	r3, r3, r5
 8021cc0:	1bc9      	subs	r1, r1, r7
 8021cc2:	fb01 f303 	mul.w	r3, r1, r3
 8021cc6:	005b      	lsls	r3, r3, #1
 8021cc8:	fb53 c300 	smmla	r3, r3, r0, ip
 8021ccc:	fa43 f30e 	asr.w	r3, r3, lr
 8021cd0:	f303 0307 	ssat	r3, #8, r3
 8021cd4:	9903      	ldr	r1, [sp, #12]
 8021cd6:	3a01      	subs	r2, #1
 8021cd8:	700b      	strb	r3, [r1, #0]
 8021cda:	d0e0      	beq.n	8021c9e <ai_math_elementwise_mul_int8+0x276>
 8021cdc:	f994 3001 	ldrsb.w	r3, [r4, #1]
 8021ce0:	f996 1001 	ldrsb.w	r1, [r6, #1]
 8021ce4:	1b5b      	subs	r3, r3, r5
 8021ce6:	1bc9      	subs	r1, r1, r7
 8021ce8:	fb01 f303 	mul.w	r3, r1, r3
 8021cec:	005b      	lsls	r3, r3, #1
 8021cee:	fb53 c300 	smmla	r3, r3, r0, ip
 8021cf2:	fa43 f30e 	asr.w	r3, r3, lr
 8021cf6:	f303 0307 	ssat	r3, #8, r3
 8021cfa:	9903      	ldr	r1, [sp, #12]
 8021cfc:	2a01      	cmp	r2, #1
 8021cfe:	704b      	strb	r3, [r1, #1]
 8021d00:	d0cd      	beq.n	8021c9e <ai_math_elementwise_mul_int8+0x276>
 8021d02:	f994 3002 	ldrsb.w	r3, [r4, #2]
 8021d06:	f996 2002 	ldrsb.w	r2, [r6, #2]
 8021d0a:	1b5b      	subs	r3, r3, r5
 8021d0c:	1bd2      	subs	r2, r2, r7
 8021d0e:	fb02 f303 	mul.w	r3, r2, r3
 8021d12:	005b      	lsls	r3, r3, #1
 8021d14:	fb53 c300 	smmla	r3, r3, r0, ip
 8021d18:	fa43 f30e 	asr.w	r3, r3, lr
 8021d1c:	f303 0307 	ssat	r3, #8, r3
 8021d20:	708b      	strb	r3, [r1, #2]
 8021d22:	b00d      	add	sp, #52	@ 0x34
 8021d24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021d28:	9c02      	ldr	r4, [sp, #8]
 8021d2a:	9e04      	ldr	r6, [sp, #16]
 8021d2c:	f994 3000 	ldrsb.w	r3, [r4]
 8021d30:	9d07      	ldr	r5, [sp, #28]
 8021d32:	9f05      	ldr	r7, [sp, #20]
 8021d34:	eba1 0e0e 	sub.w	lr, r1, lr
 8021d38:	f996 1000 	ldrsb.w	r1, [r6]
 8021d3c:	1b5b      	subs	r3, r3, r5
 8021d3e:	1bc9      	subs	r1, r1, r7
 8021d40:	fb01 f303 	mul.w	r3, r1, r3
 8021d44:	fa03 f30e 	lsl.w	r3, r3, lr
 8021d48:	f303 031f 	ssat	r3, #32, r3
 8021d4c:	fb53 f310 	smmulr	r3, r3, r0
 8021d50:	4463      	add	r3, ip
 8021d52:	f303 0307 	ssat	r3, #8, r3
 8021d56:	9903      	ldr	r1, [sp, #12]
 8021d58:	3a01      	subs	r2, #1
 8021d5a:	700b      	strb	r3, [r1, #0]
 8021d5c:	d09f      	beq.n	8021c9e <ai_math_elementwise_mul_int8+0x276>
 8021d5e:	f996 3001 	ldrsb.w	r3, [r6, #1]
 8021d62:	f994 1001 	ldrsb.w	r1, [r4, #1]
 8021d66:	1bdb      	subs	r3, r3, r7
 8021d68:	1b49      	subs	r1, r1, r5
 8021d6a:	fb01 f303 	mul.w	r3, r1, r3
 8021d6e:	fa03 f30e 	lsl.w	r3, r3, lr
 8021d72:	f303 031f 	ssat	r3, #32, r3
 8021d76:	fb53 f310 	smmulr	r3, r3, r0
 8021d7a:	4463      	add	r3, ip
 8021d7c:	f303 0307 	ssat	r3, #8, r3
 8021d80:	9903      	ldr	r1, [sp, #12]
 8021d82:	2a01      	cmp	r2, #1
 8021d84:	704b      	strb	r3, [r1, #1]
 8021d86:	d08a      	beq.n	8021c9e <ai_math_elementwise_mul_int8+0x276>
 8021d88:	f994 3002 	ldrsb.w	r3, [r4, #2]
 8021d8c:	f996 2002 	ldrsb.w	r2, [r6, #2]
 8021d90:	1b5b      	subs	r3, r3, r5
 8021d92:	1bd2      	subs	r2, r2, r7
 8021d94:	fb02 f303 	mul.w	r3, r2, r3
 8021d98:	fa03 f30e 	lsl.w	r3, r3, lr
 8021d9c:	f303 031f 	ssat	r3, #32, r3
 8021da0:	fb53 f310 	smmulr	r3, r3, r0
 8021da4:	4463      	add	r3, ip
 8021da6:	f303 0307 	ssat	r3, #8, r3
 8021daa:	708b      	strb	r3, [r1, #2]
 8021dac:	e777      	b.n	8021c9e <ai_math_elementwise_mul_int8+0x276>
 8021dae:	9402      	str	r4, [sp, #8]
 8021db0:	e72c      	b.n	8021c0c <ai_math_elementwise_mul_int8+0x1e4>
 8021db2:	bf00      	nop

08021db4 <ai_math_elementwise_sum_int8>:
 8021db4:	eec0 7a81 	vdiv.f32	s15, s1, s2
 8021db8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021dbc:	b085      	sub	sp, #20
 8021dbe:	4684      	mov	ip, r0
 8021dc0:	9001      	str	r0, [sp, #4]
 8021dc2:	f99d 003c 	ldrsb.w	r0, [sp, #60]	@ 0x3c
 8021dc6:	9302      	str	r3, [sp, #8]
 8021dc8:	461d      	mov	r5, r3
 8021dca:	2401      	movs	r4, #1
 8021dcc:	eec0 6a01 	vdiv.f32	s13, s0, s2
 8021dd0:	ee07 0a10 	vmov	s14, r0
 8021dd4:	f99d 0038 	ldrsb.w	r0, [sp, #56]	@ 0x38
 8021dd8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8021ddc:	ee17 3a90 	vmov	r3, s15
 8021de0:	4240      	negs	r0, r0
 8021de2:	ee37 6aa7 	vadd.f32	s12, s15, s15
 8021de6:	ee27 7ac7 	vnmul.f32	s14, s15, s14
 8021dea:	ee07 0a90 	vmov	s15, r0
 8021dee:	ee16 0a90 	vmov	r0, s13
 8021df2:	f3c3 53c7 	ubfx	r3, r3, #23, #8
 8021df6:	f1c3 037e 	rsb	r3, r3, #126	@ 0x7e
 8021dfa:	f3c0 50c7 	ubfx	r0, r0, #23, #8
 8021dfe:	ea03 73e3 	and.w	r3, r3, r3, asr #31
 8021e02:	f1c0 007e 	rsb	r0, r0, #126	@ 0x7e
 8021e06:	4283      	cmp	r3, r0
 8021e08:	bfa8      	it	ge
 8021e0a:	4603      	movge	r3, r0
 8021e0c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8021e10:	f99d 0040 	ldrsb.w	r0, [sp, #64]	@ 0x40
 8021e14:	eea7 7aa6 	vfma.f32	s14, s15, s13
 8021e18:	f103 0916 	add.w	r9, r3, #22
 8021e1c:	ea5f 0b95 	movs.w	fp, r5, lsr #2
 8021e20:	ee07 0a90 	vmov	s15, r0
 8021e24:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8021e28:	fa04 f009 	lsl.w	r0, r4, r9
 8021e2c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8021e30:	ee07 0a10 	vmov	s14, r0
 8021e34:	f103 001d 	add.w	r0, r3, #29
 8021e38:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8021e3c:	fa04 f000 	lsl.w	r0, r4, r0
 8021e40:	ee67 7a87 	vmul.f32	s15, s15, s14
 8021e44:	ee07 0a10 	vmov	s14, r0
 8021e48:	ee76 5aa6 	vadd.f32	s11, s13, s13
 8021e4c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8021e50:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8021e54:	ee65 5a87 	vmul.f32	s11, s11, s14
 8021e58:	ee17 6a90 	vmov	r6, s15
 8021e5c:	ee26 7a07 	vmul.f32	s14, s12, s14
 8021e60:	eefd 7ae5 	vcvt.s32.f32	s15, s11
 8021e64:	f103 0315 	add.w	r3, r3, #21
 8021e68:	ee17 8a90 	vmov	r8, s15
 8021e6c:	fa04 f403 	lsl.w	r4, r4, r3
 8021e70:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8021e74:	4426      	add	r6, r4
 8021e76:	ee17 7a90 	vmov	r7, s15
 8021e7a:	f106 36ff 	add.w	r6, r6, #4294967295	@ 0xffffffff
 8021e7e:	f000 8081 	beq.w	8021f84 <ai_math_elementwise_sum_int8+0x1d0>
 8021e82:	4663      	mov	r3, ip
 8021e84:	1d1d      	adds	r5, r3, #4
 8021e86:	ea4f 038b 	mov.w	r3, fp, lsl #2
 8021e8a:	9303      	str	r3, [sp, #12]
 8021e8c:	eb01 0b8b 	add.w	fp, r1, fp, lsl #2
 8021e90:	4692      	mov	sl, r2
 8021e92:	f851 4b04 	ldr.w	r4, [r1], #4
 8021e96:	f85a 3b04 	ldr.w	r3, [sl], #4
 8021e9a:	ea4f 2e04 	mov.w	lr, r4, lsl #8
 8021e9e:	f00e 2eff 	and.w	lr, lr, #4278255360	@ 0xff00ff00
 8021ea2:	fb38 6c0e 	smlawb	ip, r8, lr, r6
 8021ea6:	0218      	lsls	r0, r3, #8
 8021ea8:	f000 20ff 	and.w	r0, r0, #4278255360	@ 0xff00ff00
 8021eac:	fb37 cc00 	smlawb	ip, r7, r0, ip
 8021eb0:	fa4c fc09 	asr.w	ip, ip, r9
 8021eb4:	f30c 0c07 	ssat	ip, #8, ip
 8021eb8:	f805 cc04 	strb.w	ip, [r5, #-4]
 8021ebc:	f004 24ff 	and.w	r4, r4, #4278255360	@ 0xff00ff00
 8021ec0:	fb38 6c04 	smlawb	ip, r8, r4, r6
 8021ec4:	f003 23ff 	and.w	r3, r3, #4278255360	@ 0xff00ff00
 8021ec8:	fb37 cc03 	smlawb	ip, r7, r3, ip
 8021ecc:	fa4c fc09 	asr.w	ip, ip, r9
 8021ed0:	f30c 0c07 	ssat	ip, #8, ip
 8021ed4:	f805 cc03 	strb.w	ip, [r5, #-3]
 8021ed8:	fb38 6e1e 	smlawt	lr, r8, lr, r6
 8021edc:	fb37 e010 	smlawt	r0, r7, r0, lr
 8021ee0:	fa40 f009 	asr.w	r0, r0, r9
 8021ee4:	f300 0007 	ssat	r0, #8, r0
 8021ee8:	f805 0c02 	strb.w	r0, [r5, #-2]
 8021eec:	fb38 6414 	smlawt	r4, r8, r4, r6
 8021ef0:	fb37 4313 	smlawt	r3, r7, r3, r4
 8021ef4:	fa43 f309 	asr.w	r3, r3, r9
 8021ef8:	f303 0307 	ssat	r3, #8, r3
 8021efc:	4559      	cmp	r1, fp
 8021efe:	f805 3c01 	strb.w	r3, [r5, #-1]
 8021f02:	f105 0504 	add.w	r5, r5, #4
 8021f06:	d1c4      	bne.n	8021e92 <ai_math_elementwise_sum_int8+0xde>
 8021f08:	9b01      	ldr	r3, [sp, #4]
 8021f0a:	9903      	ldr	r1, [sp, #12]
 8021f0c:	440b      	add	r3, r1
 8021f0e:	9301      	str	r3, [sp, #4]
 8021f10:	440a      	add	r2, r1
 8021f12:	9b02      	ldr	r3, [sp, #8]
 8021f14:	f013 0003 	ands.w	r0, r3, #3
 8021f18:	d031      	beq.n	8021f7e <ai_math_elementwise_sum_int8+0x1ca>
 8021f1a:	f99b 1000 	ldrsb.w	r1, [fp]
 8021f1e:	0209      	lsls	r1, r1, #8
 8021f20:	fb38 6101 	smlawb	r1, r8, r1, r6
 8021f24:	f992 3000 	ldrsb.w	r3, [r2]
 8021f28:	021b      	lsls	r3, r3, #8
 8021f2a:	fb37 1303 	smlawb	r3, r7, r3, r1
 8021f2e:	fa43 f309 	asr.w	r3, r3, r9
 8021f32:	f303 0307 	ssat	r3, #8, r3
 8021f36:	9c01      	ldr	r4, [sp, #4]
 8021f38:	3801      	subs	r0, #1
 8021f3a:	7023      	strb	r3, [r4, #0]
 8021f3c:	d01f      	beq.n	8021f7e <ai_math_elementwise_sum_int8+0x1ca>
 8021f3e:	f99b 1001 	ldrsb.w	r1, [fp, #1]
 8021f42:	0209      	lsls	r1, r1, #8
 8021f44:	fb38 6101 	smlawb	r1, r8, r1, r6
 8021f48:	f992 3001 	ldrsb.w	r3, [r2, #1]
 8021f4c:	021b      	lsls	r3, r3, #8
 8021f4e:	fb37 1303 	smlawb	r3, r7, r3, r1
 8021f52:	fa43 f309 	asr.w	r3, r3, r9
 8021f56:	f303 0307 	ssat	r3, #8, r3
 8021f5a:	2801      	cmp	r0, #1
 8021f5c:	7063      	strb	r3, [r4, #1]
 8021f5e:	d00e      	beq.n	8021f7e <ai_math_elementwise_sum_int8+0x1ca>
 8021f60:	f99b 3002 	ldrsb.w	r3, [fp, #2]
 8021f64:	021b      	lsls	r3, r3, #8
 8021f66:	fb38 6803 	smlawb	r8, r8, r3, r6
 8021f6a:	f992 3002 	ldrsb.w	r3, [r2, #2]
 8021f6e:	021b      	lsls	r3, r3, #8
 8021f70:	fb37 8303 	smlawb	r3, r7, r3, r8
 8021f74:	fa43 f309 	asr.w	r3, r3, r9
 8021f78:	f303 0307 	ssat	r3, #8, r3
 8021f7c:	70a3      	strb	r3, [r4, #2]
 8021f7e:	b005      	add	sp, #20
 8021f80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021f84:	468b      	mov	fp, r1
 8021f86:	e7c4      	b.n	8021f12 <ai_math_elementwise_sum_int8+0x15e>

08021f88 <_lite_kernel_nl_softmax_is8os8>:
 8021f88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021f8c:	b08f      	sub	sp, #60	@ 0x3c
 8021f8e:	469b      	mov	fp, r3
 8021f90:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8021f92:	f8dd 8060 	ldr.w	r8, [sp, #96]	@ 0x60
 8021f96:	920c      	str	r2, [sp, #48]	@ 0x30
 8021f98:	f513 7f80 	cmn.w	r3, #256	@ 0x100
 8021f9c:	e9cd 1009 	strd	r1, r0, [sp, #36]	@ 0x24
 8021fa0:	f280 83f6 	bge.w	8022790 <_lite_kernel_nl_softmax_is8os8+0x808>
 8021fa4:	fb0b f302 	mul.w	r3, fp, r2
 8021fa8:	2b01      	cmp	r3, #1
 8021faa:	f44f 7980 	mov.w	r9, #256	@ 0x100
 8021fae:	f240 83ff 	bls.w	80227b0 <_lite_kernel_nl_softmax_is8os8+0x828>
 8021fb2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021fb4:	f8cd 9000 	str.w	r9, [sp]
 8021fb8:	3b04      	subs	r3, #4
 8021fba:	f04f 0a00 	mov.w	sl, #0
 8021fbe:	f04f 4e80 	mov.w	lr, #1073741824	@ 0x40000000
 8021fc2:	4699      	mov	r9, r3
 8021fc4:	f8cd b004 	str.w	fp, [sp, #4]
 8021fc8:	f8cd 8060 	str.w	r8, [sp, #96]	@ 0x60
 8021fcc:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8021fce:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8021fd0:	fa0a f203 	lsl.w	r2, sl, r3
 8021fd4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8021fd6:	4252      	negs	r2, r2
 8021fd8:	4053      	eors	r3, r2
 8021fda:	0fdb      	lsrs	r3, r3, #31
 8021fdc:	2b00      	cmp	r3, #0
 8021fde:	4bd6      	ldr	r3, [pc, #856]	@ (8022338 <_lite_kernel_nl_softmax_is8os8+0x3b0>)
 8021fe0:	bf06      	itte	eq
 8021fe2:	2100      	moveq	r1, #0
 8021fe4:	f04f 4380 	moveq.w	r3, #1073741824	@ 0x40000000
 8021fe8:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
 8021fec:	fbc0 3102 	smlal	r3, r1, r0, r2
 8021ff0:	2900      	cmp	r1, #0
 8021ff2:	da04      	bge.n	8021ffe <_lite_kernel_nl_softmax_is8os8+0x76>
 8021ff4:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8021ff8:	189b      	adds	r3, r3, r2
 8021ffa:	f141 0100 	adc.w	r1, r1, #0
 8021ffe:	0fdb      	lsrs	r3, r3, #31
 8022000:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 8022004:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 8022008:	0154      	lsls	r4, r2, #5
 802200a:	f104 5480 	add.w	r4, r4, #268435456	@ 0x10000000
 802200e:	f04f 0c00 	mov.w	ip, #0
 8022012:	4671      	mov	r1, lr
 8022014:	fbc4 1c04 	smlal	r1, ip, r4, r4
 8022018:	f1bc 0f00 	cmp.w	ip, #0
 802201c:	eba2 0203 	sub.w	r2, r2, r3
 8022020:	ea4f 75e4 	mov.w	r5, r4, asr #31
 8022024:	da05      	bge.n	8022032 <_lite_kernel_nl_softmax_is8os8+0xaa>
 8022026:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 802202a:	1808      	adds	r0, r1, r0
 802202c:	4601      	mov	r1, r0
 802202e:	f14c 0c00 	adc.w	ip, ip, #0
 8022032:	0fc9      	lsrs	r1, r1, #31
 8022034:	ea41 014c 	orr.w	r1, r1, ip, lsl #1
 8022038:	fba1 0701 	umull	r0, r7, r1, r1
 802203c:	ea4f 7cec 	mov.w	ip, ip, asr #31
 8022040:	f110 4080 	adds.w	r0, r0, #1073741824	@ 0x40000000
 8022044:	fb01 f80c 	mul.w	r8, r1, ip
 8022048:	eb47 0748 	adc.w	r7, r7, r8, lsl #1
 802204c:	2f00      	cmp	r7, #0
 802204e:	da06      	bge.n	802205e <_lite_kernel_nl_softmax_is8os8+0xd6>
 8022050:	f06f 4800 	mvn.w	r8, #2147483648	@ 0x80000000
 8022054:	eb10 0808 	adds.w	r8, r0, r8
 8022058:	4640      	mov	r0, r8
 802205a:	f147 0700 	adc.w	r7, r7, #0
 802205e:	0fc0      	lsrs	r0, r0, #31
 8022060:	ea40 0047 	orr.w	r0, r0, r7, lsl #1
 8022064:	1087      	asrs	r7, r0, #2
 8022066:	bf54      	ite	pl
 8022068:	f04f 0801 	movpl.w	r8, #1
 802206c:	f04f 0802 	movmi.w	r8, #2
 8022070:	f000 0003 	and.w	r0, r0, #3
 8022074:	4580      	cmp	r8, r0
 8022076:	ea81 0004 	eor.w	r0, r1, r4
 802207a:	ea4f 70d0 	mov.w	r0, r0, lsr #31
 802207e:	bfb8      	it	lt
 8022080:	3701      	addlt	r7, #1
 8022082:	2800      	cmp	r0, #0
 8022084:	48ac      	ldr	r0, [pc, #688]	@ (8022338 <_lite_kernel_nl_softmax_is8os8+0x3b0>)
 8022086:	fb01 f505 	mul.w	r5, r1, r5
 802208a:	fb04 550c 	mla	r5, r4, ip, r5
 802208e:	bf14      	ite	ne
 8022090:	4684      	movne	ip, r0
 8022092:	f04f 4c80 	moveq.w	ip, #1073741824	@ 0x40000000
 8022096:	fba1 0b04 	umull	r0, fp, r1, r4
 802209a:	bf0c      	ite	eq
 802209c:	f04f 0800 	moveq.w	r8, #0
 80220a0:	f04f 38ff 	movne.w	r8, #4294967295	@ 0xffffffff
 80220a4:	445d      	add	r5, fp
 80220a6:	eb10 000c 	adds.w	r0, r0, ip
 80220aa:	eb45 0508 	adc.w	r5, r5, r8
 80220ae:	2d00      	cmp	r5, #0
 80220b0:	da06      	bge.n	80220c0 <_lite_kernel_nl_softmax_is8os8+0x138>
 80220b2:	f06f 4c00 	mvn.w	ip, #2147483648	@ 0x80000000
 80220b6:	eb10 0c0c 	adds.w	ip, r0, ip
 80220ba:	4660      	mov	r0, ip
 80220bc:	f145 0500 	adc.w	r5, r5, #0
 80220c0:	0fc0      	lsrs	r0, r0, #31
 80220c2:	ea40 0045 	orr.w	r0, r0, r5, lsl #1
 80220c6:	4438      	add	r0, r7
 80220c8:	0fc5      	lsrs	r5, r0, #31
 80220ca:	2d00      	cmp	r5, #0
 80220cc:	4e9b      	ldr	r6, [pc, #620]	@ (802233c <_lite_kernel_nl_softmax_is8os8+0x3b4>)
 80220ce:	4d9a      	ldr	r5, [pc, #616]	@ (8022338 <_lite_kernel_nl_softmax_is8os8+0x3b0>)
 80220d0:	bf06      	itte	eq
 80220d2:	2700      	moveq	r7, #0
 80220d4:	f04f 4580 	moveq.w	r5, #1073741824	@ 0x40000000
 80220d8:	f04f 37ff 	movne.w	r7, #4294967295	@ 0xffffffff
 80220dc:	fbc0 5706 	smlal	r5, r7, r0, r6
 80220e0:	2f00      	cmp	r7, #0
 80220e2:	da05      	bge.n	80220f0 <_lite_kernel_nl_softmax_is8os8+0x168>
 80220e4:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 80220e8:	1828      	adds	r0, r5, r0
 80220ea:	4605      	mov	r5, r0
 80220ec:	f147 0700 	adc.w	r7, r7, #0
 80220f0:	0fed      	lsrs	r5, r5, #31
 80220f2:	ea45 0547 	orr.w	r5, r5, r7, lsl #1
 80220f6:	4429      	add	r1, r5
 80220f8:	1048      	asrs	r0, r1, #1
 80220fa:	d402      	bmi.n	8022102 <_lite_kernel_nl_softmax_is8os8+0x17a>
 80220fc:	07c9      	lsls	r1, r1, #31
 80220fe:	bf48      	it	mi
 8022100:	3001      	addmi	r0, #1
 8022102:	4404      	add	r4, r0
 8022104:	0fe1      	lsrs	r1, r4, #31
 8022106:	2900      	cmp	r1, #0
 8022108:	498b      	ldr	r1, [pc, #556]	@ (8022338 <_lite_kernel_nl_softmax_is8os8+0x3b0>)
 802210a:	4d8d      	ldr	r5, [pc, #564]	@ (8022340 <_lite_kernel_nl_softmax_is8os8+0x3b8>)
 802210c:	bf13      	iteet	ne
 802210e:	4608      	movne	r0, r1
 8022110:	f04f 4080 	moveq.w	r0, #1073741824	@ 0x40000000
 8022114:	2100      	moveq	r1, #0
 8022116:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
 802211a:	fbc4 0105 	smlal	r0, r1, r4, r5
 802211e:	2900      	cmp	r1, #0
 8022120:	da04      	bge.n	802212c <_lite_kernel_nl_softmax_is8os8+0x1a4>
 8022122:	f06f 4400 	mvn.w	r4, #2147483648	@ 0x80000000
 8022126:	1900      	adds	r0, r0, r4
 8022128:	f141 0100 	adc.w	r1, r1, #0
 802212c:	0fc0      	lsrs	r0, r0, #31
 802212e:	ea40 0041 	orr.w	r0, r0, r1, lsl #1
 8022132:	f100 40e2 	add.w	r0, r0, #1895825408	@ 0x71000000
 8022136:	2100      	movs	r1, #0
 8022138:	4e82      	ldr	r6, [pc, #520]	@ (8022344 <_lite_kernel_nl_softmax_is8os8+0x3bc>)
 802213a:	f5a0 2025 	sub.w	r0, r0, #675840	@ 0xa5000
 802213e:	f2a0 706c 	subw	r0, r0, #1900	@ 0x76c
 8022142:	460f      	mov	r7, r1
 8022144:	4675      	mov	r5, lr
 8022146:	fbc0 5706 	smlal	r5, r7, r0, r6
 802214a:	f3c2 6400 	ubfx	r4, r2, #24, #1
 802214e:	3c01      	subs	r4, #1
 8022150:	0fed      	lsrs	r5, r5, #31
 8022152:	4004      	ands	r4, r0
 8022154:	ea45 0547 	orr.w	r5, r5, r7, lsl #1
 8022158:	f342 6000 	sbfx	r0, r2, #24, #1
 802215c:	4e7a      	ldr	r6, [pc, #488]	@ (8022348 <_lite_kernel_nl_softmax_is8os8+0x3c0>)
 802215e:	4028      	ands	r0, r5
 8022160:	4060      	eors	r0, r4
 8022162:	460f      	mov	r7, r1
 8022164:	4675      	mov	r5, lr
 8022166:	fbc0 5706 	smlal	r5, r7, r0, r6
 802216a:	f3c2 6440 	ubfx	r4, r2, #25, #1
 802216e:	3c01      	subs	r4, #1
 8022170:	0fed      	lsrs	r5, r5, #31
 8022172:	4004      	ands	r4, r0
 8022174:	ea45 0547 	orr.w	r5, r5, r7, lsl #1
 8022178:	f342 6040 	sbfx	r0, r2, #25, #1
 802217c:	4e73      	ldr	r6, [pc, #460]	@ (802234c <_lite_kernel_nl_softmax_is8os8+0x3c4>)
 802217e:	4028      	ands	r0, r5
 8022180:	4060      	eors	r0, r4
 8022182:	460f      	mov	r7, r1
 8022184:	4675      	mov	r5, lr
 8022186:	fbc0 5706 	smlal	r5, r7, r0, r6
 802218a:	f3c2 6480 	ubfx	r4, r2, #26, #1
 802218e:	3c01      	subs	r4, #1
 8022190:	0fed      	lsrs	r5, r5, #31
 8022192:	4004      	ands	r4, r0
 8022194:	ea45 0547 	orr.w	r5, r5, r7, lsl #1
 8022198:	f342 6080 	sbfx	r0, r2, #26, #1
 802219c:	4e6c      	ldr	r6, [pc, #432]	@ (8022350 <_lite_kernel_nl_softmax_is8os8+0x3c8>)
 802219e:	4028      	ands	r0, r5
 80221a0:	4060      	eors	r0, r4
 80221a2:	f3c2 65c0 	ubfx	r5, r2, #27, #1
 80221a6:	460f      	mov	r7, r1
 80221a8:	4674      	mov	r4, lr
 80221aa:	fbc0 4706 	smlal	r4, r7, r0, r6
 80221ae:	3d01      	subs	r5, #1
 80221b0:	4005      	ands	r5, r0
 80221b2:	0fe0      	lsrs	r0, r4, #31
 80221b4:	ea40 0047 	orr.w	r0, r0, r7, lsl #1
 80221b8:	f342 64c0 	sbfx	r4, r2, #27, #1
 80221bc:	4004      	ands	r4, r0
 80221be:	4e65      	ldr	r6, [pc, #404]	@ (8022354 <_lite_kernel_nl_softmax_is8os8+0x3cc>)
 80221c0:	406c      	eors	r4, r5
 80221c2:	460f      	mov	r7, r1
 80221c4:	4675      	mov	r5, lr
 80221c6:	fbc4 5706 	smlal	r5, r7, r4, r6
 80221ca:	f3c2 7000 	ubfx	r0, r2, #28, #1
 80221ce:	3801      	subs	r0, #1
 80221d0:	0fed      	lsrs	r5, r5, #31
 80221d2:	ea45 0547 	orr.w	r5, r5, r7, lsl #1
 80221d6:	4020      	ands	r0, r4
 80221d8:	f342 7400 	sbfx	r4, r2, #28, #1
 80221dc:	402c      	ands	r4, r5
 80221de:	4f5e      	ldr	r7, [pc, #376]	@ (8022358 <_lite_kernel_nl_softmax_is8os8+0x3d0>)
 80221e0:	4060      	eors	r0, r4
 80221e2:	468c      	mov	ip, r1
 80221e4:	4675      	mov	r5, lr
 80221e6:	fbc0 5c07 	smlal	r5, ip, r0, r7
 80221ea:	f3c2 7440 	ubfx	r4, r2, #29, #1
 80221ee:	3c01      	subs	r4, #1
 80221f0:	0fed      	lsrs	r5, r5, #31
 80221f2:	4004      	ands	r4, r0
 80221f4:	ea45 054c 	orr.w	r5, r5, ip, lsl #1
 80221f8:	f342 7040 	sbfx	r0, r2, #29, #1
 80221fc:	4028      	ands	r0, r5
 80221fe:	4060      	eors	r0, r4
 8022200:	25f2      	movs	r5, #242	@ 0xf2
 8022202:	4674      	mov	r4, lr
 8022204:	fbc0 4105 	smlal	r4, r1, r0, r5
 8022208:	0fe4      	lsrs	r4, r4, #31
 802220a:	ea44 0441 	orr.w	r4, r4, r1, lsl #1
 802220e:	f3c2 7180 	ubfx	r1, r2, #30, #1
 8022212:	fab3 f383 	clz	r3, r3
 8022216:	f342 7280 	sbfx	r2, r2, #30, #1
 802221a:	3901      	subs	r1, #1
 802221c:	095b      	lsrs	r3, r3, #5
 802221e:	4001      	ands	r1, r0
 8022220:	4022      	ands	r2, r4
 8022222:	404a      	eors	r2, r1
 8022224:	1e59      	subs	r1, r3, #1
 8022226:	425b      	negs	r3, r3
 8022228:	400a      	ands	r2, r1
 802222a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802222e:	4053      	eors	r3, r2
 8022230:	f849 3f04 	str.w	r3, [r9, #4]!
 8022234:	9b00      	ldr	r3, [sp, #0]
 8022236:	f10a 0a01 	add.w	sl, sl, #1
 802223a:	4553      	cmp	r3, sl
 802223c:	f63f aec6 	bhi.w	8021fcc <_lite_kernel_nl_softmax_is8os8+0x44>
 8022240:	f8dd b004 	ldr.w	fp, [sp, #4]
 8022244:	f8dd 8060 	ldr.w	r8, [sp, #96]	@ 0x60
 8022248:	4699      	mov	r9, r3
 802224a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802224c:	2b00      	cmp	r3, #0
 802224e:	f000 81e8 	beq.w	8022622 <_lite_kernel_nl_softmax_is8os8+0x69a>
 8022252:	fb08 f30b 	mul.w	r3, r8, fp
 8022256:	930d      	str	r3, [sp, #52]	@ 0x34
 8022258:	f1bb 0f00 	cmp.w	fp, #0
 802225c:	f000 81e1 	beq.w	8022622 <_lite_kernel_nl_softmax_is8os8+0x69a>
 8022260:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022262:	445b      	add	r3, fp
 8022264:	9306      	str	r3, [sp, #24]
 8022266:	2300      	movs	r3, #0
 8022268:	46dc      	mov	ip, fp
 802226a:	930b      	str	r3, [sp, #44]	@ 0x2c
 802226c:	46cb      	mov	fp, r9
 802226e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022270:	9303      	str	r3, [sp, #12]
 8022272:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022274:	9301      	str	r3, [sp, #4]
 8022276:	4641      	mov	r1, r8
 8022278:	9b01      	ldr	r3, [sp, #4]
 802227a:	2901      	cmp	r1, #1
 802227c:	f993 2000 	ldrsb.w	r2, [r3]
 8022280:	f240 8255 	bls.w	802272e <_lite_kernel_nl_softmax_is8os8+0x7a6>
 8022284:	eb03 000c 	add.w	r0, r3, ip
 8022288:	2301      	movs	r3, #1
 802228a:	f990 4000 	ldrsb.w	r4, [r0]
 802228e:	3301      	adds	r3, #1
 8022290:	42a2      	cmp	r2, r4
 8022292:	bfb8      	it	lt
 8022294:	4622      	movlt	r2, r4
 8022296:	4299      	cmp	r1, r3
 8022298:	4460      	add	r0, ip
 802229a:	d1f6      	bne.n	802228a <_lite_kernel_nl_softmax_is8os8+0x302>
 802229c:	2500      	movs	r5, #0
 802229e:	9801      	ldr	r0, [sp, #4]
 80222a0:	9f1c      	ldr	r7, [sp, #112]	@ 0x70
 80222a2:	462b      	mov	r3, r5
 80222a4:	f240 7eff 	movw	lr, #2047	@ 0x7ff
 80222a8:	f990 4000 	ldrsb.w	r4, [r0]
 80222ac:	1b14      	subs	r4, r2, r4
 80222ae:	455c      	cmp	r4, fp
 80222b0:	f103 0301 	add.w	r3, r3, #1
 80222b4:	4460      	add	r0, ip
 80222b6:	da0d      	bge.n	80222d4 <_lite_kernel_nl_softmax_is8os8+0x34c>
 80222b8:	f857 4024 	ldr.w	r4, [r7, r4, lsl #2]
 80222bc:	1326      	asrs	r6, r4, #12
 80222be:	bf58      	it	pl
 80222c0:	46f0      	movpl	r8, lr
 80222c2:	f3c4 040b 	ubfx	r4, r4, #0, #12
 80222c6:	bf48      	it	mi
 80222c8:	f44f 6800 	movmi.w	r8, #2048	@ 0x800
 80222cc:	4544      	cmp	r4, r8
 80222ce:	bfc8      	it	gt
 80222d0:	3601      	addgt	r6, #1
 80222d2:	4435      	add	r5, r6
 80222d4:	4299      	cmp	r1, r3
 80222d6:	d8e7      	bhi.n	80222a8 <_lite_kernel_nl_softmax_is8os8+0x320>
 80222d8:	2d00      	cmp	r5, #0
 80222da:	f000 822b 	beq.w	8022734 <_lite_kernel_nl_softmax_is8os8+0x7ac>
 80222de:	fab5 f485 	clz	r4, r5
 80222e2:	40a5      	lsls	r5, r4
 80222e4:	f105 4300 	add.w	r3, r5, #2147483648	@ 0x80000000
 80222e8:	17d8      	asrs	r0, r3, #31
 80222ea:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
 80222ee:	bf08      	it	eq
 80222f0:	2d00      	cmpeq	r5, #0
 80222f2:	9404      	str	r4, [sp, #16]
 80222f4:	f1c4 0923 	rsb	r9, r4, #35	@ 0x23
 80222f8:	f000 8220 	beq.w	802273c <_lite_kernel_nl_softmax_is8os8+0x7b4>
 80222fc:	f113 4300 	adds.w	r3, r3, #2147483648	@ 0x80000000
 8022300:	f140 0000 	adc.w	r0, r0, #0
 8022304:	085b      	lsrs	r3, r3, #1
 8022306:	ea43 73c0 	orr.w	r3, r3, r0, lsl #31
 802230a:	ea4f 0a60 	mov.w	sl, r0, asr #1
 802230e:	4813      	ldr	r0, [pc, #76]	@ (802235c <_lite_kernel_nl_softmax_is8os8+0x3d4>)
 8022310:	9300      	str	r3, [sp, #0]
 8022312:	425d      	negs	r5, r3
 8022314:	fb00 550a 	mla	r5, r0, sl, r5
 8022318:	fba3 0400 	umull	r0, r4, r3, r0
 802231c:	442c      	add	r4, r5
 802231e:	4d06      	ldr	r5, [pc, #24]	@ (8022338 <_lite_kernel_nl_softmax_is8os8+0x3b0>)
 8022320:	1940      	adds	r0, r0, r5
 8022322:	f164 0400 	sbc.w	r4, r4, #0
 8022326:	2c00      	cmp	r4, #0
 8022328:	da1a      	bge.n	8022360 <_lite_kernel_nl_softmax_is8os8+0x3d8>
 802232a:	f06f 4500 	mvn.w	r5, #2147483648	@ 0x80000000
 802232e:	1945      	adds	r5, r0, r5
 8022330:	4628      	mov	r0, r5
 8022332:	f144 0400 	adc.w	r4, r4, #0
 8022336:	e013      	b.n	8022360 <_lite_kernel_nl_softmax_is8os8+0x3d8>
 8022338:	c0000001 	.word	0xc0000001
 802233c:	2aaaaaab 	.word	0x2aaaaaab
 8022340:	70f5a894 	.word	0x70f5a894
 8022344:	63afbe7b 	.word	0x63afbe7b
 8022348:	4da2cbf2 	.word	0x4da2cbf2
 802234c:	2f16ac6c 	.word	0x2f16ac6c
 8022350:	1152aaa4 	.word	0x1152aaa4
 8022354:	02582ab7 	.word	0x02582ab7
 8022358:	000afe11 	.word	0x000afe11
 802235c:	c3c3c3c4 	.word	0xc3c3c3c4
 8022360:	0fc0      	lsrs	r0, r0, #31
 8022362:	ea40 0044 	orr.w	r0, r0, r4, lsl #1
 8022366:	f100 375a 	add.w	r7, r0, #1515870810	@ 0x5a5a5a5a
 802236a:	17fc      	asrs	r4, r7, #31
 802236c:	9002      	str	r0, [sp, #8]
 802236e:	fb03 f804 	mul.w	r8, r3, r4
 8022372:	fba3 0e07 	umull	r0, lr, r3, r7
 8022376:	f110 4080 	adds.w	r0, r0, #1073741824	@ 0x40000000
 802237a:	fb07 880a 	mla	r8, r7, sl, r8
 802237e:	eb48 0e0e 	adc.w	lr, r8, lr
 8022382:	f1be 0f00 	cmp.w	lr, #0
 8022386:	463e      	mov	r6, r7
 8022388:	da06      	bge.n	8022398 <_lite_kernel_nl_softmax_is8os8+0x410>
 802238a:	f06f 4800 	mvn.w	r8, #2147483648	@ 0x80000000
 802238e:	eb10 0808 	adds.w	r8, r0, r8
 8022392:	4640      	mov	r0, r8
 8022394:	f14e 0e00 	adc.w	lr, lr, #0
 8022398:	0fc0      	lsrs	r0, r0, #31
 802239a:	ea40 004e 	orr.w	r0, r0, lr, lsl #1
 802239e:	f1c0 5000 	rsb	r0, r0, #536870912	@ 0x20000000
 80223a2:	ea80 0e07 	eor.w	lr, r0, r7
 80223a6:	4db3      	ldr	r5, [pc, #716]	@ (8022674 <_lite_kernel_nl_softmax_is8os8+0x6ec>)
 80223a8:	ea4f 7ede 	mov.w	lr, lr, lsr #31
 80223ac:	f1be 0f00 	cmp.w	lr, #0
 80223b0:	bf13      	iteet	ne
 80223b2:	46ae      	movne	lr, r5
 80223b4:	f04f 4e80 	moveq.w	lr, #1073741824	@ 0x40000000
 80223b8:	2500      	moveq	r5, #0
 80223ba:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
 80223be:	fb00 f404 	mul.w	r4, r0, r4
 80223c2:	ea4f 78e0 	mov.w	r8, r0, asr #31
 80223c6:	fb06 4408 	mla	r4, r6, r8, r4
 80223ca:	fba0 0606 	umull	r0, r6, r0, r6
 80223ce:	eb10 000e 	adds.w	r0, r0, lr
 80223d2:	4434      	add	r4, r6
 80223d4:	eb44 0605 	adc.w	r6, r4, r5
 80223d8:	2e00      	cmp	r6, #0
 80223da:	da05      	bge.n	80223e8 <_lite_kernel_nl_softmax_is8os8+0x460>
 80223dc:	f06f 4400 	mvn.w	r4, #2147483648	@ 0x80000000
 80223e0:	1904      	adds	r4, r0, r4
 80223e2:	4620      	mov	r0, r4
 80223e4:	f146 0600 	adc.w	r6, r6, #0
 80223e8:	0fc0      	lsrs	r0, r0, #31
 80223ea:	ea40 0046 	orr.w	r0, r0, r6, lsl #1
 80223ee:	f1b0 4f60 	cmp.w	r0, #3758096384	@ 0xe0000000
 80223f2:	f340 8141 	ble.w	8022678 <_lite_kernel_nl_softmax_is8os8+0x6f0>
 80223f6:	eb07 0480 	add.w	r4, r7, r0, lsl #2
 80223fa:	9800      	ldr	r0, [sp, #0]
 80223fc:	4060      	eors	r0, r4
 80223fe:	0fc0      	lsrs	r0, r0, #31
 8022400:	2800      	cmp	r0, #0
 8022402:	ea4f 75e4 	mov.w	r5, r4, asr #31
 8022406:	489b      	ldr	r0, [pc, #620]	@ (8022674 <_lite_kernel_nl_softmax_is8os8+0x6ec>)
 8022408:	fb03 f605 	mul.w	r6, r3, r5
 802240c:	bf18      	it	ne
 802240e:	4607      	movne	r7, r0
 8022410:	fb04 660a 	mla	r6, r4, sl, r6
 8022414:	fba3 0804 	umull	r0, r8, r3, r4
 8022418:	bf06      	itte	eq
 802241a:	f04f 4780 	moveq.w	r7, #1073741824	@ 0x40000000
 802241e:	f04f 0e00 	moveq.w	lr, #0
 8022422:	f04f 3eff 	movne.w	lr, #4294967295	@ 0xffffffff
 8022426:	4446      	add	r6, r8
 8022428:	19c0      	adds	r0, r0, r7
 802242a:	eb46 060e 	adc.w	r6, r6, lr
 802242e:	2e00      	cmp	r6, #0
 8022430:	da05      	bge.n	802243e <_lite_kernel_nl_softmax_is8os8+0x4b6>
 8022432:	f06f 4700 	mvn.w	r7, #2147483648	@ 0x80000000
 8022436:	19c7      	adds	r7, r0, r7
 8022438:	4638      	mov	r0, r7
 802243a:	f146 0600 	adc.w	r6, r6, #0
 802243e:	0fc0      	lsrs	r0, r0, #31
 8022440:	ea40 0046 	orr.w	r0, r0, r6, lsl #1
 8022444:	f1c0 5000 	rsb	r0, r0, #536870912	@ 0x20000000
 8022448:	ea84 0600 	eor.w	r6, r4, r0
 802244c:	0ff6      	lsrs	r6, r6, #31
 802244e:	2e00      	cmp	r6, #0
 8022450:	bf08      	it	eq
 8022452:	2700      	moveq	r7, #0
 8022454:	4e87      	ldr	r6, [pc, #540]	@ (8022674 <_lite_kernel_nl_softmax_is8os8+0x6ec>)
 8022456:	bf14      	ite	ne
 8022458:	f04f 37ff 	movne.w	r7, #4294967295	@ 0xffffffff
 802245c:	f04f 4680 	moveq.w	r6, #1073741824	@ 0x40000000
 8022460:	fb00 f505 	mul.w	r5, r0, r5
 8022464:	ea4f 7ee0 	mov.w	lr, r0, asr #31
 8022468:	fb04 550e 	mla	r5, r4, lr, r5
 802246c:	fba0 0e04 	umull	r0, lr, r0, r4
 8022470:	1980      	adds	r0, r0, r6
 8022472:	4475      	add	r5, lr
 8022474:	eb45 0507 	adc.w	r5, r5, r7
 8022478:	2d00      	cmp	r5, #0
 802247a:	da05      	bge.n	8022488 <_lite_kernel_nl_softmax_is8os8+0x500>
 802247c:	f06f 4600 	mvn.w	r6, #2147483648	@ 0x80000000
 8022480:	1986      	adds	r6, r0, r6
 8022482:	4630      	mov	r0, r6
 8022484:	f145 0500 	adc.w	r5, r5, #0
 8022488:	0fc0      	lsrs	r0, r0, #31
 802248a:	ea40 0045 	orr.w	r0, r0, r5, lsl #1
 802248e:	f1b0 5f00 	cmp.w	r0, #536870912	@ 0x20000000
 8022492:	f2c0 8123 	blt.w	80226dc <_lite_kernel_nl_softmax_is8os8+0x754>
 8022496:	f06f 4500 	mvn.w	r5, #2147483648	@ 0x80000000
 802249a:	1960      	adds	r0, r4, r5
 802249c:	9c00      	ldr	r4, [sp, #0]
 802249e:	ea94 0f00 	teq	r4, r0
 80224a2:	f140 80e2 	bpl.w	802266a <_lite_kernel_nl_softmax_is8os8+0x6e2>
 80224a6:	4d73      	ldr	r5, [pc, #460]	@ (8022674 <_lite_kernel_nl_softmax_is8os8+0x6ec>)
 80224a8:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
 80224ac:	17c4      	asrs	r4, r0, #31
 80224ae:	fb03 f704 	mul.w	r7, r3, r4
 80224b2:	fb00 770a 	mla	r7, r0, sl, r7
 80224b6:	fba3 3e00 	umull	r3, lr, r3, r0
 80224ba:	195b      	adds	r3, r3, r5
 80224bc:	4477      	add	r7, lr
 80224be:	eb47 0706 	adc.w	r7, r7, r6
 80224c2:	2f00      	cmp	r7, #0
 80224c4:	da05      	bge.n	80224d2 <_lite_kernel_nl_softmax_is8os8+0x54a>
 80224c6:	f06f 4500 	mvn.w	r5, #2147483648	@ 0x80000000
 80224ca:	195d      	adds	r5, r3, r5
 80224cc:	462b      	mov	r3, r5
 80224ce:	f147 0700 	adc.w	r7, r7, #0
 80224d2:	0fdb      	lsrs	r3, r3, #31
 80224d4:	ea43 0347 	orr.w	r3, r3, r7, lsl #1
 80224d8:	f1c3 5300 	rsb	r3, r3, #536870912	@ 0x20000000
 80224dc:	ea80 0503 	eor.w	r5, r0, r3
 80224e0:	0fed      	lsrs	r5, r5, #31
 80224e2:	2d00      	cmp	r5, #0
 80224e4:	bf08      	it	eq
 80224e6:	2600      	moveq	r6, #0
 80224e8:	4d62      	ldr	r5, [pc, #392]	@ (8022674 <_lite_kernel_nl_softmax_is8os8+0x6ec>)
 80224ea:	bf14      	ite	ne
 80224ec:	f04f 36ff 	movne.w	r6, #4294967295	@ 0xffffffff
 80224f0:	f04f 4580 	moveq.w	r5, #1073741824	@ 0x40000000
 80224f4:	fb03 f404 	mul.w	r4, r3, r4
 80224f8:	17df      	asrs	r7, r3, #31
 80224fa:	fb00 4407 	mla	r4, r0, r7, r4
 80224fe:	fba3 3700 	umull	r3, r7, r3, r0
 8022502:	195b      	adds	r3, r3, r5
 8022504:	443c      	add	r4, r7
 8022506:	eb44 0406 	adc.w	r4, r4, r6
 802250a:	2c00      	cmp	r4, #0
 802250c:	da04      	bge.n	8022518 <_lite_kernel_nl_softmax_is8os8+0x590>
 802250e:	f06f 4500 	mvn.w	r5, #2147483648	@ 0x80000000
 8022512:	195b      	adds	r3, r3, r5
 8022514:	f144 0400 	adc.w	r4, r4, #0
 8022518:	0fdb      	lsrs	r3, r3, #31
 802251a:	ea43 0344 	orr.w	r3, r3, r4, lsl #1
 802251e:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8022522:	f2c0 8095 	blt.w	8022650 <_lite_kernel_nl_softmax_is8os8+0x6c8>
 8022526:	f06f 4700 	mvn.w	r7, #2147483648	@ 0x80000000
 802252a:	4438      	add	r0, r7
 802252c:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8022530:	bfb8      	it	lt
 8022532:	0047      	lsllt	r7, r0, #1
 8022534:	f1b9 0f1f 	cmp.w	r9, #31
 8022538:	dd05      	ble.n	8022546 <_lite_kernel_nl_softmax_is8os8+0x5be>
 802253a:	9b04      	ldr	r3, [sp, #16]
 802253c:	f1c3 0304 	rsb	r3, r3, #4
 8022540:	411f      	asrs	r7, r3
 8022542:	f04f 091f 	mov.w	r9, #31
 8022546:	2900      	cmp	r1, #0
 8022548:	d04f      	beq.n	80225ea <_lite_kernel_nl_softmax_is8os8+0x662>
 802254a:	f04f 0801 	mov.w	r8, #1
 802254e:	fa08 f809 	lsl.w	r8, r8, r9
 8022552:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 8022556:	ea4f 0068 	mov.w	r0, r8, asr #1
 802255a:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 802255e:	9002      	str	r0, [sp, #8]
 8022560:	3001      	adds	r0, #1
 8022562:	9004      	str	r0, [sp, #16]
 8022564:	ea08 0003 	and.w	r0, r8, r3
 8022568:	9008      	str	r0, [sp, #32]
 802256a:	9d01      	ldr	r5, [sp, #4]
 802256c:	9c03      	ldr	r4, [sp, #12]
 802256e:	9305      	str	r3, [sp, #20]
 8022570:	fa43 f009 	asr.w	r0, r3, r9
 8022574:	9007      	str	r0, [sp, #28]
 8022576:	f04f 0a80 	mov.w	sl, #128	@ 0x80
 802257a:	2000      	movs	r0, #0
 802257c:	4696      	mov	lr, r2
 802257e:	9100      	str	r1, [sp, #0]
 8022580:	f995 3000 	ldrsb.w	r3, [r5]
 8022584:	ebae 0303 	sub.w	r3, lr, r3
 8022588:	455b      	cmp	r3, fp
 802258a:	da4d      	bge.n	8022628 <_lite_kernel_nl_softmax_is8os8+0x6a0>
 802258c:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 802258e:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8022592:	ea82 0307 	eor.w	r3, r2, r7
 8022596:	0fdb      	lsrs	r3, r3, #31
 8022598:	2b00      	cmp	r3, #0
 802259a:	4b36      	ldr	r3, [pc, #216]	@ (8022674 <_lite_kernel_nl_softmax_is8os8+0x6ec>)
 802259c:	bf06      	itte	eq
 802259e:	2600      	moveq	r6, #0
 80225a0:	f04f 4380 	moveq.w	r3, #1073741824	@ 0x40000000
 80225a4:	f04f 36ff 	movne.w	r6, #4294967295	@ 0xffffffff
 80225a8:	fbc7 3602 	smlal	r3, r6, r7, r2
 80225ac:	2e00      	cmp	r6, #0
 80225ae:	da03      	bge.n	80225b8 <_lite_kernel_nl_softmax_is8os8+0x630>
 80225b0:	9905      	ldr	r1, [sp, #20]
 80225b2:	185b      	adds	r3, r3, r1
 80225b4:	f146 0600 	adc.w	r6, r6, #0
 80225b8:	0fdb      	lsrs	r3, r3, #31
 80225ba:	42ba      	cmp	r2, r7
 80225bc:	ea43 0346 	orr.w	r3, r3, r6, lsl #1
 80225c0:	d03b      	beq.n	802263a <_lite_kernel_nl_softmax_is8os8+0x6b2>
 80225c2:	ea03 0208 	and.w	r2, r3, r8
 80225c6:	fa53 f309 	asrs.w	r3, r3, r9
 80225ca:	d430      	bmi.n	802262e <_lite_kernel_nl_softmax_is8os8+0x6a6>
 80225cc:	9e02      	ldr	r6, [sp, #8]
 80225ce:	4296      	cmp	r6, r2
 80225d0:	da00      	bge.n	80225d4 <_lite_kernel_nl_softmax_is8os8+0x64c>
 80225d2:	3301      	adds	r3, #1
 80225d4:	2bfe      	cmp	r3, #254	@ 0xfe
 80225d6:	dd36      	ble.n	8022646 <_lite_kernel_nl_softmax_is8os8+0x6be>
 80225d8:	237f      	movs	r3, #127	@ 0x7f
 80225da:	7023      	strb	r3, [r4, #0]
 80225dc:	9b00      	ldr	r3, [sp, #0]
 80225de:	3001      	adds	r0, #1
 80225e0:	4283      	cmp	r3, r0
 80225e2:	4465      	add	r5, ip
 80225e4:	4464      	add	r4, ip
 80225e6:	d1cb      	bne.n	8022580 <_lite_kernel_nl_softmax_is8os8+0x5f8>
 80225e8:	4619      	mov	r1, r3
 80225ea:	9a03      	ldr	r2, [sp, #12]
 80225ec:	9b01      	ldr	r3, [sp, #4]
 80225ee:	3201      	adds	r2, #1
 80225f0:	9203      	str	r2, [sp, #12]
 80225f2:	9a06      	ldr	r2, [sp, #24]
 80225f4:	3301      	adds	r3, #1
 80225f6:	4293      	cmp	r3, r2
 80225f8:	9301      	str	r3, [sp, #4]
 80225fa:	f47f ae3d 	bne.w	8022278 <_lite_kernel_nl_softmax_is8os8+0x2f0>
 80225fe:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8022600:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8022602:	4688      	mov	r8, r1
 8022604:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8022606:	4411      	add	r1, r2
 8022608:	9109      	str	r1, [sp, #36]	@ 0x24
 802260a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802260c:	4411      	add	r1, r2
 802260e:	910a      	str	r1, [sp, #40]	@ 0x28
 8022610:	9906      	ldr	r1, [sp, #24]
 8022612:	4411      	add	r1, r2
 8022614:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8022616:	9106      	str	r1, [sp, #24]
 8022618:	3301      	adds	r3, #1
 802261a:	429a      	cmp	r2, r3
 802261c:	930b      	str	r3, [sp, #44]	@ 0x2c
 802261e:	f47f ae26 	bne.w	802226e <_lite_kernel_nl_softmax_is8os8+0x2e6>
 8022622:	b00f      	add	sp, #60	@ 0x3c
 8022624:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022628:	f884 a000 	strb.w	sl, [r4]
 802262c:	e7d6      	b.n	80225dc <_lite_kernel_nl_softmax_is8os8+0x654>
 802262e:	9904      	ldr	r1, [sp, #16]
 8022630:	428a      	cmp	r2, r1
 8022632:	dcce      	bgt.n	80225d2 <_lite_kernel_nl_softmax_is8os8+0x64a>
 8022634:	f06f 037f 	mvn.w	r3, #127	@ 0x7f
 8022638:	e7cf      	b.n	80225da <_lite_kernel_nl_softmax_is8os8+0x652>
 802263a:	f1b7 4f00 	cmp.w	r7, #2147483648	@ 0x80000000
 802263e:	d1c0      	bne.n	80225c2 <_lite_kernel_nl_softmax_is8os8+0x63a>
 8022640:	e9dd 3207 	ldrd	r3, r2, [sp, #28]
 8022644:	e7c2      	b.n	80225cc <_lite_kernel_nl_softmax_is8os8+0x644>
 8022646:	2b00      	cmp	r3, #0
 8022648:	ddf4      	ble.n	8022634 <_lite_kernel_nl_softmax_is8os8+0x6ac>
 802264a:	3b80      	subs	r3, #128	@ 0x80
 802264c:	b25b      	sxtb	r3, r3
 802264e:	e7c4      	b.n	80225da <_lite_kernel_nl_softmax_is8os8+0x652>
 8022650:	f1b3 4f60 	cmp.w	r3, #3758096384	@ 0xe0000000
 8022654:	f300 8235 	bgt.w	8022ac2 <_lite_kernel_nl_softmax_is8os8+0xb3a>
 8022658:	f100 4300 	add.w	r3, r0, #2147483648	@ 0x80000000
 802265c:	0047      	lsls	r7, r0, #1
 802265e:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 8022662:	bfd8      	it	le
 8022664:	f04f 4700 	movle.w	r7, #2147483648	@ 0x80000000
 8022668:	e764      	b.n	8022534 <_lite_kernel_nl_softmax_is8os8+0x5ac>
 802266a:	f04f 4580 	mov.w	r5, #1073741824	@ 0x40000000
 802266e:	2600      	movs	r6, #0
 8022670:	e71c      	b.n	80224ac <_lite_kernel_nl_softmax_is8os8+0x524>
 8022672:	bf00      	nop
 8022674:	c0000001 	.word	0xc0000001
 8022678:	9802      	ldr	r0, [sp, #8]
 802267a:	f100 345a 	add.w	r4, r0, #1515870810	@ 0x5a5a5a5a
 802267e:	9800      	ldr	r0, [sp, #0]
 8022680:	f104 4400 	add.w	r4, r4, #2147483648	@ 0x80000000
 8022684:	ea90 0f04 	teq	r0, r4
 8022688:	d566      	bpl.n	8022758 <_lite_kernel_nl_softmax_is8os8+0x7d0>
 802268a:	17e0      	asrs	r0, r4, #31
 802268c:	fb04 f50a 	mul.w	r5, r4, sl
 8022690:	fb03 5500 	mla	r5, r3, r0, r5
 8022694:	fba4 0603 	umull	r0, r6, r4, r3
 8022698:	442e      	add	r6, r5
 802269a:	4d43      	ldr	r5, [pc, #268]	@ (80227a8 <_lite_kernel_nl_softmax_is8os8+0x820>)
 802269c:	1940      	adds	r0, r0, r5
 802269e:	f166 0600 	sbc.w	r6, r6, #0
 80226a2:	2e00      	cmp	r6, #0
 80226a4:	da05      	bge.n	80226b2 <_lite_kernel_nl_softmax_is8os8+0x72a>
 80226a6:	f06f 4500 	mvn.w	r5, #2147483648	@ 0x80000000
 80226aa:	1945      	adds	r5, r0, r5
 80226ac:	4628      	mov	r0, r5
 80226ae:	f146 0600 	adc.w	r6, r6, #0
 80226b2:	0fc0      	lsrs	r0, r0, #31
 80226b4:	ea40 0046 	orr.w	r0, r0, r6, lsl #1
 80226b8:	f1c0 5500 	rsb	r5, r0, #536870912	@ 0x20000000
 80226bc:	483a      	ldr	r0, [pc, #232]	@ (80227a8 <_lite_kernel_nl_softmax_is8os8+0x820>)
 80226be:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
 80226c2:	fbc5 0604 	smlal	r0, r6, r5, r4
 80226c6:	2e00      	cmp	r6, #0
 80226c8:	da05      	bge.n	80226d6 <_lite_kernel_nl_softmax_is8os8+0x74e>
 80226ca:	f06f 4500 	mvn.w	r5, #2147483648	@ 0x80000000
 80226ce:	1945      	adds	r5, r0, r5
 80226d0:	4628      	mov	r0, r5
 80226d2:	f146 0600 	adc.w	r6, r6, #0
 80226d6:	0fc0      	lsrs	r0, r0, #31
 80226d8:	ea40 0046 	orr.w	r0, r0, r6, lsl #1
 80226dc:	f1b0 4f60 	cmp.w	r0, #3758096384	@ 0xe0000000
 80226e0:	ea4f 0580 	mov.w	r5, r0, lsl #2
 80226e4:	f73f aed9 	bgt.w	802249a <_lite_kernel_nl_softmax_is8os8+0x512>
 80226e8:	f104 4000 	add.w	r0, r4, #2147483648	@ 0x80000000
 80226ec:	9c00      	ldr	r4, [sp, #0]
 80226ee:	ea90 0f04 	teq	r0, r4
 80226f2:	d5ba      	bpl.n	802266a <_lite_kernel_nl_softmax_is8os8+0x6e2>
 80226f4:	fb00 f60a 	mul.w	r6, r0, sl
 80226f8:	17c4      	asrs	r4, r0, #31
 80226fa:	fb03 6604 	mla	r6, r3, r4, r6
 80226fe:	fba0 3503 	umull	r3, r5, r0, r3
 8022702:	4435      	add	r5, r6
 8022704:	4e28      	ldr	r6, [pc, #160]	@ (80227a8 <_lite_kernel_nl_softmax_is8os8+0x820>)
 8022706:	199b      	adds	r3, r3, r6
 8022708:	f165 0500 	sbc.w	r5, r5, #0
 802270c:	2d00      	cmp	r5, #0
 802270e:	da05      	bge.n	802271c <_lite_kernel_nl_softmax_is8os8+0x794>
 8022710:	f06f 4600 	mvn.w	r6, #2147483648	@ 0x80000000
 8022714:	199e      	adds	r6, r3, r6
 8022716:	4633      	mov	r3, r6
 8022718:	f145 0500 	adc.w	r5, r5, #0
 802271c:	0fdb      	lsrs	r3, r3, #31
 802271e:	ea43 0345 	orr.w	r3, r3, r5, lsl #1
 8022722:	f1c3 5300 	rsb	r3, r3, #536870912	@ 0x20000000
 8022726:	4d20      	ldr	r5, [pc, #128]	@ (80227a8 <_lite_kernel_nl_softmax_is8os8+0x820>)
 8022728:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
 802272c:	e6e2      	b.n	80224f4 <_lite_kernel_nl_softmax_is8os8+0x56c>
 802272e:	2900      	cmp	r1, #0
 8022730:	f47f adb4 	bne.w	802229c <_lite_kernel_nl_softmax_is8os8+0x314>
 8022734:	2320      	movs	r3, #32
 8022736:	f04f 0903 	mov.w	r9, #3
 802273a:	9304      	str	r3, [sp, #16]
 802273c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8022740:	2400      	movs	r4, #0
 8022742:	f04f 365a 	mov.w	r6, #1515870810	@ 0x5a5a5a5a
 8022746:	4819      	ldr	r0, [pc, #100]	@ (80227ac <_lite_kernel_nl_softmax_is8os8+0x824>)
 8022748:	9300      	str	r3, [sp, #0]
 802274a:	4637      	mov	r7, r6
 802274c:	9402      	str	r4, [sp, #8]
 802274e:	469a      	mov	sl, r3
 8022750:	f04f 4e80 	mov.w	lr, #1073741824	@ 0x40000000
 8022754:	4625      	mov	r5, r4
 8022756:	e632      	b.n	80223be <_lite_kernel_nl_softmax_is8os8+0x436>
 8022758:	17e5      	asrs	r5, r4, #31
 802275a:	fba3 0604 	umull	r0, r6, r3, r4
 802275e:	fb03 f705 	mul.w	r7, r3, r5
 8022762:	f110 4080 	adds.w	r0, r0, #1073741824	@ 0x40000000
 8022766:	fb04 770a 	mla	r7, r4, sl, r7
 802276a:	eb47 0606 	adc.w	r6, r7, r6
 802276e:	2e00      	cmp	r6, #0
 8022770:	da05      	bge.n	802277e <_lite_kernel_nl_softmax_is8os8+0x7f6>
 8022772:	f06f 4700 	mvn.w	r7, #2147483648	@ 0x80000000
 8022776:	19c7      	adds	r7, r0, r7
 8022778:	4638      	mov	r0, r7
 802277a:	f146 0600 	adc.w	r6, r6, #0
 802277e:	0fc0      	lsrs	r0, r0, #31
 8022780:	ea40 0046 	orr.w	r0, r0, r6, lsl #1
 8022784:	f1c0 5000 	rsb	r0, r0, #536870912	@ 0x20000000
 8022788:	4e07      	ldr	r6, [pc, #28]	@ (80227a8 <_lite_kernel_nl_softmax_is8os8+0x820>)
 802278a:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 802278e:	e667      	b.n	8022460 <_lite_kernel_nl_softmax_is8os8+0x4d8>
 8022790:	f1c3 0900 	rsb	r9, r3, #0
 8022794:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8022796:	fb0b f303 	mul.w	r3, fp, r3
 802279a:	2b01      	cmp	r3, #1
 802279c:	d908      	bls.n	80227b0 <_lite_kernel_nl_softmax_is8os8+0x828>
 802279e:	f1b9 0f00 	cmp.w	r9, #0
 80227a2:	f47f ac06 	bne.w	8021fb2 <_lite_kernel_nl_softmax_is8os8+0x2a>
 80227a6:	e550      	b.n	802224a <_lite_kernel_nl_softmax_is8os8+0x2c2>
 80227a8:	c0000001 	.word	0xc0000001
 80227ac:	20000001 	.word	0x20000001
 80227b0:	fb03 f208 	mul.w	r2, r3, r8
 80227b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80227b6:	9201      	str	r2, [sp, #4]
 80227b8:	2a01      	cmp	r2, #1
 80227ba:	f993 a000 	ldrsb.w	sl, [r3]
 80227be:	f240 817a 	bls.w	8022ab6 <_lite_kernel_nl_softmax_is8os8+0xb2e>
 80227c2:	1e58      	subs	r0, r3, #1
 80227c4:	1881      	adds	r1, r0, r2
 80227c6:	f913 2f01 	ldrsb.w	r2, [r3, #1]!
 80227ca:	4592      	cmp	sl, r2
 80227cc:	bfb8      	it	lt
 80227ce:	4692      	movlt	sl, r2
 80227d0:	428b      	cmp	r3, r1
 80227d2:	d1f8      	bne.n	80227c6 <_lite_kernel_nl_softmax_is8os8+0x83e>
 80227d4:	4605      	mov	r5, r0
 80227d6:	f8cd b008 	str.w	fp, [sp, #8]
 80227da:	f8cd 8060 	str.w	r8, [sp, #96]	@ 0x60
 80227de:	9500      	str	r5, [sp, #0]
 80227e0:	f915 7f01 	ldrsb.w	r7, [r5, #1]!
 80227e4:	ebaa 0707 	sub.w	r7, sl, r7
 80227e8:	454f      	cmp	r7, r9
 80227ea:	f080 8156 	bcs.w	8022a9a <_lite_kernel_nl_softmax_is8os8+0xb12>
 80227ee:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80227f0:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80227f2:	fa07 f103 	lsl.w	r1, r7, r3
 80227f6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80227f8:	4249      	negs	r1, r1
 80227fa:	404b      	eors	r3, r1
 80227fc:	0fdb      	lsrs	r3, r3, #31
 80227fe:	2b00      	cmp	r3, #0
 8022800:	4bb5      	ldr	r3, [pc, #724]	@ (8022ad8 <_lite_kernel_nl_softmax_is8os8+0xb50>)
 8022802:	bf06      	itte	eq
 8022804:	2200      	moveq	r2, #0
 8022806:	f04f 4380 	moveq.w	r3, #1073741824	@ 0x40000000
 802280a:	f04f 32ff 	movne.w	r2, #4294967295	@ 0xffffffff
 802280e:	fbc1 3200 	smlal	r3, r2, r1, r0
 8022812:	2a00      	cmp	r2, #0
 8022814:	da05      	bge.n	8022822 <_lite_kernel_nl_softmax_is8os8+0x89a>
 8022816:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 802281a:	1859      	adds	r1, r3, r1
 802281c:	460b      	mov	r3, r1
 802281e:	f142 0200 	adc.w	r2, r2, #0
 8022822:	0fdb      	lsrs	r3, r3, #31
 8022824:	ea43 0b42 	orr.w	fp, r3, r2, lsl #1
 8022828:	f04b 427f 	orr.w	r2, fp, #4278190080	@ 0xff000000
 802282c:	0156      	lsls	r6, r2, #5
 802282e:	f106 5680 	add.w	r6, r6, #268435456	@ 0x10000000
 8022832:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8022836:	2000      	movs	r0, #0
 8022838:	fbc6 3006 	smlal	r3, r0, r6, r6
 802283c:	2800      	cmp	r0, #0
 802283e:	eba2 020b 	sub.w	r2, r2, fp
 8022842:	ea4f 7ee6 	mov.w	lr, r6, asr #31
 8022846:	da05      	bge.n	8022854 <_lite_kernel_nl_softmax_is8os8+0x8cc>
 8022848:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 802284c:	1859      	adds	r1, r3, r1
 802284e:	460b      	mov	r3, r1
 8022850:	f140 0000 	adc.w	r0, r0, #0
 8022854:	0fdb      	lsrs	r3, r3, #31
 8022856:	ea43 0340 	orr.w	r3, r3, r0, lsl #1
 802285a:	fba3 1c03 	umull	r1, ip, r3, r3
 802285e:	17c0      	asrs	r0, r0, #31
 8022860:	f111 4180 	adds.w	r1, r1, #1073741824	@ 0x40000000
 8022864:	fb03 f800 	mul.w	r8, r3, r0
 8022868:	eb4c 0c48 	adc.w	ip, ip, r8, lsl #1
 802286c:	f1bc 0f00 	cmp.w	ip, #0
 8022870:	da06      	bge.n	8022880 <_lite_kernel_nl_softmax_is8os8+0x8f8>
 8022872:	f06f 4800 	mvn.w	r8, #2147483648	@ 0x80000000
 8022876:	eb11 0808 	adds.w	r8, r1, r8
 802287a:	4641      	mov	r1, r8
 802287c:	f14c 0c00 	adc.w	ip, ip, #0
 8022880:	0fc9      	lsrs	r1, r1, #31
 8022882:	ea41 014c 	orr.w	r1, r1, ip, lsl #1
 8022886:	ea5f 0ca1 	movs.w	ip, r1, asr #2
 802288a:	bf54      	ite	pl
 802288c:	f04f 0801 	movpl.w	r8, #1
 8022890:	f04f 0802 	movmi.w	r8, #2
 8022894:	f001 0103 	and.w	r1, r1, #3
 8022898:	4541      	cmp	r1, r8
 802289a:	fb06 f100 	mul.w	r1, r6, r0
 802289e:	ea86 0003 	eor.w	r0, r6, r3
 80228a2:	ea4f 70d0 	mov.w	r0, r0, lsr #31
 80228a6:	bfc8      	it	gt
 80228a8:	f10c 0c01 	addgt.w	ip, ip, #1
 80228ac:	2800      	cmp	r0, #0
 80228ae:	488a      	ldr	r0, [pc, #552]	@ (8022ad8 <_lite_kernel_nl_softmax_is8os8+0xb50>)
 80228b0:	fb03 110e 	mla	r1, r3, lr, r1
 80228b4:	bf14      	ite	ne
 80228b6:	4686      	movne	lr, r0
 80228b8:	f04f 4e80 	moveq.w	lr, #1073741824	@ 0x40000000
 80228bc:	fba6 0403 	umull	r0, r4, r6, r3
 80228c0:	bf0c      	ite	eq
 80228c2:	f04f 0800 	moveq.w	r8, #0
 80228c6:	f04f 38ff 	movne.w	r8, #4294967295	@ 0xffffffff
 80228ca:	4421      	add	r1, r4
 80228cc:	eb10 000e 	adds.w	r0, r0, lr
 80228d0:	eb41 0108 	adc.w	r1, r1, r8
 80228d4:	2900      	cmp	r1, #0
 80228d6:	da06      	bge.n	80228e6 <_lite_kernel_nl_softmax_is8os8+0x95e>
 80228d8:	f06f 4e00 	mvn.w	lr, #2147483648	@ 0x80000000
 80228dc:	eb10 0e0e 	adds.w	lr, r0, lr
 80228e0:	4670      	mov	r0, lr
 80228e2:	f141 0100 	adc.w	r1, r1, #0
 80228e6:	0fc0      	lsrs	r0, r0, #31
 80228e8:	ea40 0041 	orr.w	r0, r0, r1, lsl #1
 80228ec:	eb0c 0100 	add.w	r1, ip, r0
 80228f0:	0fc8      	lsrs	r0, r1, #31
 80228f2:	2800      	cmp	r0, #0
 80228f4:	4c79      	ldr	r4, [pc, #484]	@ (8022adc <_lite_kernel_nl_softmax_is8os8+0xb54>)
 80228f6:	4878      	ldr	r0, [pc, #480]	@ (8022ad8 <_lite_kernel_nl_softmax_is8os8+0xb50>)
 80228f8:	bf06      	itte	eq
 80228fa:	f04f 0c00 	moveq.w	ip, #0
 80228fe:	f04f 4080 	moveq.w	r0, #1073741824	@ 0x40000000
 8022902:	f04f 3cff 	movne.w	ip, #4294967295	@ 0xffffffff
 8022906:	fbc1 0c04 	smlal	r0, ip, r1, r4
 802290a:	f1bc 0f00 	cmp.w	ip, #0
 802290e:	da05      	bge.n	802291c <_lite_kernel_nl_softmax_is8os8+0x994>
 8022910:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8022914:	1841      	adds	r1, r0, r1
 8022916:	4608      	mov	r0, r1
 8022918:	f14c 0c00 	adc.w	ip, ip, #0
 802291c:	0fc0      	lsrs	r0, r0, #31
 802291e:	ea40 004c 	orr.w	r0, r0, ip, lsl #1
 8022922:	4403      	add	r3, r0
 8022924:	1059      	asrs	r1, r3, #1
 8022926:	d402      	bmi.n	802292e <_lite_kernel_nl_softmax_is8os8+0x9a6>
 8022928:	07db      	lsls	r3, r3, #31
 802292a:	bf48      	it	mi
 802292c:	3101      	addmi	r1, #1
 802292e:	4431      	add	r1, r6
 8022930:	0fcb      	lsrs	r3, r1, #31
 8022932:	2b00      	cmp	r3, #0
 8022934:	4c6a      	ldr	r4, [pc, #424]	@ (8022ae0 <_lite_kernel_nl_softmax_is8os8+0xb58>)
 8022936:	4b68      	ldr	r3, [pc, #416]	@ (8022ad8 <_lite_kernel_nl_softmax_is8os8+0xb50>)
 8022938:	bf06      	itte	eq
 802293a:	2000      	moveq	r0, #0
 802293c:	f04f 4380 	moveq.w	r3, #1073741824	@ 0x40000000
 8022940:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
 8022944:	fbc1 3004 	smlal	r3, r0, r1, r4
 8022948:	2800      	cmp	r0, #0
 802294a:	da05      	bge.n	8022958 <_lite_kernel_nl_softmax_is8os8+0x9d0>
 802294c:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8022950:	1859      	adds	r1, r3, r1
 8022952:	460b      	mov	r3, r1
 8022954:	f140 0000 	adc.w	r0, r0, #0
 8022958:	4961      	ldr	r1, [pc, #388]	@ (8022ae0 <_lite_kernel_nl_softmax_is8os8+0xb58>)
 802295a:	4c62      	ldr	r4, [pc, #392]	@ (8022ae4 <_lite_kernel_nl_softmax_is8os8+0xb5c>)
 802295c:	0fdb      	lsrs	r3, r3, #31
 802295e:	ea43 0340 	orr.w	r3, r3, r0, lsl #1
 8022962:	1859      	adds	r1, r3, r1
 8022964:	2000      	movs	r0, #0
 8022966:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 802296a:	469e      	mov	lr, r3
 802296c:	4680      	mov	r8, r0
 802296e:	fbc1 e804 	smlal	lr, r8, r1, r4
 8022972:	f3c2 6c00 	ubfx	ip, r2, #24, #1
 8022976:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
 802297a:	ea4f 7ede 	mov.w	lr, lr, lsr #31
 802297e:	ea0c 0c01 	and.w	ip, ip, r1
 8022982:	ea4e 0e48 	orr.w	lr, lr, r8, lsl #1
 8022986:	f342 6100 	sbfx	r1, r2, #24, #1
 802298a:	4c57      	ldr	r4, [pc, #348]	@ (8022ae8 <_lite_kernel_nl_softmax_is8os8+0xb60>)
 802298c:	ea01 010e 	and.w	r1, r1, lr
 8022990:	ea81 010c 	eor.w	r1, r1, ip
 8022994:	469e      	mov	lr, r3
 8022996:	4680      	mov	r8, r0
 8022998:	fbc1 e804 	smlal	lr, r8, r1, r4
 802299c:	f3c2 6c40 	ubfx	ip, r2, #25, #1
 80229a0:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
 80229a4:	ea4f 7ede 	mov.w	lr, lr, lsr #31
 80229a8:	ea0c 0c01 	and.w	ip, ip, r1
 80229ac:	ea4e 0e48 	orr.w	lr, lr, r8, lsl #1
 80229b0:	f342 6140 	sbfx	r1, r2, #25, #1
 80229b4:	4c4d      	ldr	r4, [pc, #308]	@ (8022aec <_lite_kernel_nl_softmax_is8os8+0xb64>)
 80229b6:	ea01 010e 	and.w	r1, r1, lr
 80229ba:	ea81 010c 	eor.w	r1, r1, ip
 80229be:	469e      	mov	lr, r3
 80229c0:	4680      	mov	r8, r0
 80229c2:	fbc1 e804 	smlal	lr, r8, r1, r4
 80229c6:	f3c2 6c80 	ubfx	ip, r2, #26, #1
 80229ca:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
 80229ce:	ea4f 7ede 	mov.w	lr, lr, lsr #31
 80229d2:	ea0c 0c01 	and.w	ip, ip, r1
 80229d6:	ea4e 0e48 	orr.w	lr, lr, r8, lsl #1
 80229da:	f342 6180 	sbfx	r1, r2, #26, #1
 80229de:	4c44      	ldr	r4, [pc, #272]	@ (8022af0 <_lite_kernel_nl_softmax_is8os8+0xb68>)
 80229e0:	ea01 010e 	and.w	r1, r1, lr
 80229e4:	ea81 010c 	eor.w	r1, r1, ip
 80229e8:	469e      	mov	lr, r3
 80229ea:	4680      	mov	r8, r0
 80229ec:	fbc1 e804 	smlal	lr, r8, r1, r4
 80229f0:	f3c2 6cc0 	ubfx	ip, r2, #27, #1
 80229f4:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
 80229f8:	ea4f 7ede 	mov.w	lr, lr, lsr #31
 80229fc:	ea0c 0c01 	and.w	ip, ip, r1
 8022a00:	ea4e 0e48 	orr.w	lr, lr, r8, lsl #1
 8022a04:	f342 61c0 	sbfx	r1, r2, #27, #1
 8022a08:	4c3a      	ldr	r4, [pc, #232]	@ (8022af4 <_lite_kernel_nl_softmax_is8os8+0xb6c>)
 8022a0a:	ea01 010e 	and.w	r1, r1, lr
 8022a0e:	ea81 010c 	eor.w	r1, r1, ip
 8022a12:	469e      	mov	lr, r3
 8022a14:	4680      	mov	r8, r0
 8022a16:	fbc1 e804 	smlal	lr, r8, r1, r4
 8022a1a:	f3c2 7c00 	ubfx	ip, r2, #28, #1
 8022a1e:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
 8022a22:	ea4f 7ede 	mov.w	lr, lr, lsr #31
 8022a26:	ea0c 0c01 	and.w	ip, ip, r1
 8022a2a:	ea4e 0e48 	orr.w	lr, lr, r8, lsl #1
 8022a2e:	f342 7100 	sbfx	r1, r2, #28, #1
 8022a32:	ea01 010e 	and.w	r1, r1, lr
 8022a36:	4c30      	ldr	r4, [pc, #192]	@ (8022af8 <_lite_kernel_nl_softmax_is8os8+0xb70>)
 8022a38:	ea81 010c 	eor.w	r1, r1, ip
 8022a3c:	469e      	mov	lr, r3
 8022a3e:	4680      	mov	r8, r0
 8022a40:	fbc1 e804 	smlal	lr, r8, r1, r4
 8022a44:	f3c2 7c40 	ubfx	ip, r2, #29, #1
 8022a48:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
 8022a4c:	ea4f 7ede 	mov.w	lr, lr, lsr #31
 8022a50:	ea0c 0c01 	and.w	ip, ip, r1
 8022a54:	ea4e 0e48 	orr.w	lr, lr, r8, lsl #1
 8022a58:	f342 7140 	sbfx	r1, r2, #29, #1
 8022a5c:	ea01 010e 	and.w	r1, r1, lr
 8022a60:	ea81 010c 	eor.w	r1, r1, ip
 8022a64:	f04f 0cf2 	mov.w	ip, #242	@ 0xf2
 8022a68:	fbc1 300c 	smlal	r3, r0, r1, ip
 8022a6c:	0fdb      	lsrs	r3, r3, #31
 8022a6e:	ea43 0340 	orr.w	r3, r3, r0, lsl #1
 8022a72:	f3c2 7080 	ubfx	r0, r2, #30, #1
 8022a76:	fabb f68b 	clz	r6, fp
 8022a7a:	f342 7280 	sbfx	r2, r2, #30, #1
 8022a7e:	3801      	subs	r0, #1
 8022a80:	0976      	lsrs	r6, r6, #5
 8022a82:	401a      	ands	r2, r3
 8022a84:	4008      	ands	r0, r1
 8022a86:	4042      	eors	r2, r0
 8022a88:	1e73      	subs	r3, r6, #1
 8022a8a:	4013      	ands	r3, r2
 8022a8c:	4272      	negs	r2, r6
 8022a8e:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
 8022a92:	4053      	eors	r3, r2
 8022a94:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8022a96:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 8022a9a:	9b00      	ldr	r3, [sp, #0]
 8022a9c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8022a9e:	3302      	adds	r3, #2
 8022aa0:	1a9b      	subs	r3, r3, r2
 8022aa2:	9a01      	ldr	r2, [sp, #4]
 8022aa4:	429a      	cmp	r2, r3
 8022aa6:	f63f ae9a 	bhi.w	80227de <_lite_kernel_nl_softmax_is8os8+0x856>
 8022aaa:	f8dd b008 	ldr.w	fp, [sp, #8]
 8022aae:	f8dd 8060 	ldr.w	r8, [sp, #96]	@ 0x60
 8022ab2:	f7ff bbca 	b.w	802224a <_lite_kernel_nl_softmax_is8os8+0x2c2>
 8022ab6:	2a00      	cmp	r2, #0
 8022ab8:	f43f abc7 	beq.w	802224a <_lite_kernel_nl_softmax_is8os8+0x2c2>
 8022abc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022abe:	1e58      	subs	r0, r3, #1
 8022ac0:	e688      	b.n	80227d4 <_lite_kernel_nl_softmax_is8os8+0x84c>
 8022ac2:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8022ac6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8022aca:	ea4f 0743 	mov.w	r7, r3, lsl #1
 8022ace:	f6ff adc6 	blt.w	802265e <_lite_kernel_nl_softmax_is8os8+0x6d6>
 8022ad2:	f06f 4700 	mvn.w	r7, #2147483648	@ 0x80000000
 8022ad6:	e52d      	b.n	8022534 <_lite_kernel_nl_softmax_is8os8+0x5ac>
 8022ad8:	c0000001 	.word	0xc0000001
 8022adc:	2aaaaaab 	.word	0x2aaaaaab
 8022ae0:	70f5a894 	.word	0x70f5a894
 8022ae4:	63afbe7b 	.word	0x63afbe7b
 8022ae8:	4da2cbf2 	.word	0x4da2cbf2
 8022aec:	2f16ac6c 	.word	0x2f16ac6c
 8022af0:	1152aaa4 	.word	0x1152aaa4
 8022af4:	02582ab7 	.word	0x02582ab7
 8022af8:	000afe11 	.word	0x000afe11

08022afc <_lite_kernel_nl_softmax_iu8ou8>:
 8022afc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022b00:	b09f      	sub	sp, #124	@ 0x7c
 8022b02:	469a      	mov	sl, r3
 8022b04:	e9cd 0119 	strd	r0, r1, [sp, #100]	@ 0x64
 8022b08:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8022b0a:	921d      	str	r2, [sp, #116]	@ 0x74
 8022b0c:	2a00      	cmp	r2, #0
 8022b0e:	f000 837f 	beq.w	8023210 <_lite_kernel_nl_softmax_iu8ou8+0x714>
 8022b12:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
 8022b14:	fb02 f20a 	mul.w	r2, r2, sl
 8022b18:	921c      	str	r2, [sp, #112]	@ 0x70
 8022b1a:	f1ba 0f00 	cmp.w	sl, #0
 8022b1e:	f000 8377 	beq.w	8023210 <_lite_kernel_nl_softmax_iu8ou8+0x714>
 8022b22:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
 8022b24:	3b04      	subs	r3, #4
 8022b26:	9316      	str	r3, [sp, #88]	@ 0x58
 8022b28:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8022b2c:	9318      	str	r3, [sp, #96]	@ 0x60
 8022b2e:	2300      	movs	r3, #0
 8022b30:	931b      	str	r3, [sp, #108]	@ 0x6c
 8022b32:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8022b34:	9315      	str	r3, [sp, #84]	@ 0x54
 8022b36:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8022b38:	9314      	str	r3, [sp, #80]	@ 0x50
 8022b3a:	4453      	add	r3, sl
 8022b3c:	9317      	str	r3, [sp, #92]	@ 0x5c
 8022b3e:	46d3      	mov	fp, sl
 8022b40:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8022b42:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
 8022b44:	7819      	ldrb	r1, [r3, #0]
 8022b46:	9113      	str	r1, [sp, #76]	@ 0x4c
 8022b48:	2a01      	cmp	r2, #1
 8022b4a:	f240 83d7 	bls.w	80232fc <_lite_kernel_nl_softmax_iu8ou8+0x800>
 8022b4e:	4614      	mov	r4, r2
 8022b50:	eb03 020b 	add.w	r2, r3, fp
 8022b54:	2301      	movs	r3, #1
 8022b56:	7810      	ldrb	r0, [r2, #0]
 8022b58:	3301      	adds	r3, #1
 8022b5a:	4281      	cmp	r1, r0
 8022b5c:	bfb8      	it	lt
 8022b5e:	4601      	movlt	r1, r0
 8022b60:	429c      	cmp	r4, r3
 8022b62:	445a      	add	r2, fp
 8022b64:	d1f7      	bne.n	8022b56 <_lite_kernel_nl_softmax_iu8ou8+0x5a>
 8022b66:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8022b68:	9113      	str	r1, [sp, #76]	@ 0x4c
 8022b6a:	440b      	add	r3, r1
 8022b6c:	9305      	str	r3, [sp, #20]
 8022b6e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8022b70:	9201      	str	r2, [sp, #4]
 8022b72:	2300      	movs	r3, #0
 8022b74:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8022b76:	9303      	str	r3, [sp, #12]
 8022b78:	9202      	str	r2, [sp, #8]
 8022b7a:	4699      	mov	r9, r3
 8022b7c:	f8cd b010 	str.w	fp, [sp, #16]
 8022b80:	e179      	b.n	8022e76 <_lite_kernel_nl_softmax_iu8ou8+0x37a>
 8022b82:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8022b84:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8022b86:	1a9b      	subs	r3, r3, r2
 8022b88:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8022b8a:	4093      	lsls	r3, r2
 8022b8c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8022b8e:	405a      	eors	r2, r3
 8022b90:	0fd2      	lsrs	r2, r2, #31
 8022b92:	2a00      	cmp	r2, #0
 8022b94:	4abd      	ldr	r2, [pc, #756]	@ (8022e8c <_lite_kernel_nl_softmax_iu8ou8+0x390>)
 8022b96:	bf06      	itte	eq
 8022b98:	2100      	moveq	r1, #0
 8022b9a:	f04f 4280 	moveq.w	r2, #1073741824	@ 0x40000000
 8022b9e:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
 8022ba2:	fbc0 2103 	smlal	r2, r1, r0, r3
 8022ba6:	2900      	cmp	r1, #0
 8022ba8:	da04      	bge.n	8022bb4 <_lite_kernel_nl_softmax_iu8ou8+0xb8>
 8022baa:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8022bae:	1812      	adds	r2, r2, r0
 8022bb0:	f141 0100 	adc.w	r1, r1, #0
 8022bb4:	0fd2      	lsrs	r2, r2, #31
 8022bb6:	ea42 0041 	orr.w	r0, r2, r1, lsl #1
 8022bba:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8022bbc:	429a      	cmp	r2, r3
 8022bbe:	f000 8177 	beq.w	8022eb0 <_lite_kernel_nl_softmax_iu8ou8+0x3b4>
 8022bc2:	f040 4b7f 	orr.w	fp, r0, #4278190080	@ 0xff000000
 8022bc6:	ea4f 114b 	mov.w	r1, fp, lsl #5
 8022bca:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8022bce:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8022bd2:	f04f 0a00 	mov.w	sl, #0
 8022bd6:	ebab 0b00 	sub.w	fp, fp, r0
 8022bda:	fbc1 3a01 	smlal	r3, sl, r1, r1
 8022bde:	f34b 7280 	sbfx	r2, fp, #30, #1
 8022be2:	f1ba 0f00 	cmp.w	sl, #0
 8022be6:	f3cb 7580 	ubfx	r5, fp, #30, #1
 8022bea:	9210      	str	r2, [sp, #64]	@ 0x40
 8022bec:	da05      	bge.n	8022bfa <_lite_kernel_nl_softmax_iu8ou8+0xfe>
 8022bee:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8022bf2:	189a      	adds	r2, r3, r2
 8022bf4:	4613      	mov	r3, r2
 8022bf6:	f14a 0a00 	adc.w	sl, sl, #0
 8022bfa:	0fdb      	lsrs	r3, r3, #31
 8022bfc:	ea43 034a 	orr.w	r3, r3, sl, lsl #1
 8022c00:	fba3 2403 	umull	r2, r4, r3, r3
 8022c04:	ea4f 7aea 	mov.w	sl, sl, asr #31
 8022c08:	f112 4280 	adds.w	r2, r2, #1073741824	@ 0x40000000
 8022c0c:	fb03 f70a 	mul.w	r7, r3, sl
 8022c10:	eb44 0447 	adc.w	r4, r4, r7, lsl #1
 8022c14:	2c00      	cmp	r4, #0
 8022c16:	930f      	str	r3, [sp, #60]	@ 0x3c
 8022c18:	4616      	mov	r6, r2
 8022c1a:	da05      	bge.n	8022c28 <_lite_kernel_nl_softmax_iu8ou8+0x12c>
 8022c1c:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8022c20:	18b2      	adds	r2, r6, r2
 8022c22:	4616      	mov	r6, r2
 8022c24:	f144 0400 	adc.w	r4, r4, #0
 8022c28:	fab0 f280 	clz	r2, r0
 8022c2c:	1e68      	subs	r0, r5, #1
 8022c2e:	fb01 fa0a 	mul.w	sl, r1, sl
 8022c32:	900b      	str	r0, [sp, #44]	@ 0x2c
 8022c34:	17c8      	asrs	r0, r1, #31
 8022c36:	fb03 aa00 	mla	sl, r3, r0, sl
 8022c3a:	ea83 0c01 	eor.w	ip, r3, r1
 8022c3e:	fba1 3003 	umull	r3, r0, r1, r3
 8022c42:	0952      	lsrs	r2, r2, #5
 8022c44:	9311      	str	r3, [sp, #68]	@ 0x44
 8022c46:	4603      	mov	r3, r0
 8022c48:	4453      	add	r3, sl
 8022c4a:	f1c2 0a00 	rsb	sl, r2, #0
 8022c4e:	9312      	str	r3, [sp, #72]	@ 0x48
 8022c50:	f02a 4300 	bic.w	r3, sl, #2147483648	@ 0x80000000
 8022c54:	930e      	str	r3, [sp, #56]	@ 0x38
 8022c56:	1e53      	subs	r3, r2, #1
 8022c58:	f3cb 6240 	ubfx	r2, fp, #25, #1
 8022c5c:	f3cb 7e40 	ubfx	lr, fp, #29, #1
 8022c60:	9309      	str	r3, [sp, #36]	@ 0x24
 8022c62:	1e53      	subs	r3, r2, #1
 8022c64:	f3cb 7800 	ubfx	r8, fp, #28, #1
 8022c68:	930a      	str	r3, [sp, #40]	@ 0x28
 8022c6a:	f10e 33ff 	add.w	r3, lr, #4294967295	@ 0xffffffff
 8022c6e:	0ff6      	lsrs	r6, r6, #31
 8022c70:	930d      	str	r3, [sp, #52]	@ 0x34
 8022c72:	f108 33ff 	add.w	r3, r8, #4294967295	@ 0xffffffff
 8022c76:	ea46 0644 	orr.w	r6, r6, r4, lsl #1
 8022c7a:	f3cb 67c0 	ubfx	r7, fp, #27, #1
 8022c7e:	930c      	str	r3, [sp, #48]	@ 0x30
 8022c80:	f1c8 0300 	rsb	r3, r8, #0
 8022c84:	f3cb 6480 	ubfx	r4, fp, #26, #1
 8022c88:	10b2      	asrs	r2, r6, #2
 8022c8a:	9306      	str	r3, [sp, #24]
 8022c8c:	427b      	negs	r3, r7
 8022c8e:	f3cb 6500 	ubfx	r5, fp, #24, #1
 8022c92:	9307      	str	r3, [sp, #28]
 8022c94:	2a00      	cmp	r2, #0
 8022c96:	f1c4 0300 	rsb	r3, r4, #0
 8022c9a:	f006 0a03 	and.w	sl, r6, #3
 8022c9e:	f105 38ff 	add.w	r8, r5, #4294967295	@ 0xffffffff
 8022ca2:	f107 36ff 	add.w	r6, r7, #4294967295	@ 0xffffffff
 8022ca6:	ea4f 7cdc 	mov.w	ip, ip, lsr #31
 8022caa:	f34b 6b40 	sbfx	fp, fp, #25, #1
 8022cae:	f1ce 0000 	rsb	r0, lr, #0
 8022cb2:	f104 37ff 	add.w	r7, r4, #4294967295	@ 0xffffffff
 8022cb6:	9308      	str	r3, [sp, #32]
 8022cb8:	f1c5 0500 	rsb	r5, r5, #0
 8022cbc:	f2c0 80e3 	blt.w	8022e86 <_lite_kernel_nl_softmax_iu8ou8+0x38a>
 8022cc0:	f04f 0e01 	mov.w	lr, #1
 8022cc4:	45d6      	cmp	lr, sl
 8022cc6:	4c71      	ldr	r4, [pc, #452]	@ (8022e8c <_lite_kernel_nl_softmax_iu8ou8+0x390>)
 8022cc8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8022cca:	bfb8      	it	lt
 8022ccc:	3201      	addlt	r2, #1
 8022cce:	f1bc 0f00 	cmp.w	ip, #0
 8022cd2:	bf18      	it	ne
 8022cd4:	46a4      	movne	ip, r4
 8022cd6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8022cd8:	bf06      	itte	eq
 8022cda:	f04f 4c80 	moveq.w	ip, #1073741824	@ 0x40000000
 8022cde:	f04f 0a00 	moveq.w	sl, #0
 8022ce2:	f04f 3aff 	movne.w	sl, #4294967295	@ 0xffffffff
 8022ce6:	eb1c 0c04 	adds.w	ip, ip, r4
 8022cea:	eb43 0a0a 	adc.w	sl, r3, sl
 8022cee:	f1ba 0f00 	cmp.w	sl, #0
 8022cf2:	da06      	bge.n	8022d02 <_lite_kernel_nl_softmax_iu8ou8+0x206>
 8022cf4:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8022cf8:	eb1c 0303 	adds.w	r3, ip, r3
 8022cfc:	469c      	mov	ip, r3
 8022cfe:	f14a 0a00 	adc.w	sl, sl, #0
 8022d02:	ea4f 7cdc 	mov.w	ip, ip, lsr #31
 8022d06:	ea4c 0c4a 	orr.w	ip, ip, sl, lsl #1
 8022d0a:	4494      	add	ip, r2
 8022d0c:	ea4f 73dc 	mov.w	r3, ip, lsr #31
 8022d10:	2b00      	cmp	r3, #0
 8022d12:	4c5f      	ldr	r4, [pc, #380]	@ (8022e90 <_lite_kernel_nl_softmax_iu8ou8+0x394>)
 8022d14:	4b5d      	ldr	r3, [pc, #372]	@ (8022e8c <_lite_kernel_nl_softmax_iu8ou8+0x390>)
 8022d16:	bf06      	itte	eq
 8022d18:	2200      	moveq	r2, #0
 8022d1a:	f04f 4380 	moveq.w	r3, #1073741824	@ 0x40000000
 8022d1e:	f04f 32ff 	movne.w	r2, #4294967295	@ 0xffffffff
 8022d22:	fbcc 3204 	smlal	r3, r2, ip, r4
 8022d26:	2a00      	cmp	r2, #0
 8022d28:	da06      	bge.n	8022d38 <_lite_kernel_nl_softmax_iu8ou8+0x23c>
 8022d2a:	f06f 4c00 	mvn.w	ip, #2147483648	@ 0x80000000
 8022d2e:	eb13 0c0c 	adds.w	ip, r3, ip
 8022d32:	4663      	mov	r3, ip
 8022d34:	f142 0200 	adc.w	r2, r2, #0
 8022d38:	0fdb      	lsrs	r3, r3, #31
 8022d3a:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 8022d3e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8022d40:	441a      	add	r2, r3
 8022d42:	4613      	mov	r3, r2
 8022d44:	1052      	asrs	r2, r2, #1
 8022d46:	d402      	bmi.n	8022d4e <_lite_kernel_nl_softmax_iu8ou8+0x252>
 8022d48:	07dc      	lsls	r4, r3, #31
 8022d4a:	bf48      	it	mi
 8022d4c:	3201      	addmi	r2, #1
 8022d4e:	1853      	adds	r3, r2, r1
 8022d50:	0fda      	lsrs	r2, r3, #31
 8022d52:	2a00      	cmp	r2, #0
 8022d54:	4c4f      	ldr	r4, [pc, #316]	@ (8022e94 <_lite_kernel_nl_softmax_iu8ou8+0x398>)
 8022d56:	4a4d      	ldr	r2, [pc, #308]	@ (8022e8c <_lite_kernel_nl_softmax_iu8ou8+0x390>)
 8022d58:	bf06      	itte	eq
 8022d5a:	2100      	moveq	r1, #0
 8022d5c:	f04f 4280 	moveq.w	r2, #1073741824	@ 0x40000000
 8022d60:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
 8022d64:	fbc3 2104 	smlal	r2, r1, r3, r4
 8022d68:	2900      	cmp	r1, #0
 8022d6a:	da05      	bge.n	8022d78 <_lite_kernel_nl_softmax_iu8ou8+0x27c>
 8022d6c:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8022d70:	18d3      	adds	r3, r2, r3
 8022d72:	461a      	mov	r2, r3
 8022d74:	f141 0100 	adc.w	r1, r1, #0
 8022d78:	0fd2      	lsrs	r2, r2, #31
 8022d7a:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8022d7e:	f102 42e2 	add.w	r2, r2, #1895825408	@ 0x71000000
 8022d82:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8022d86:	2100      	movs	r1, #0
 8022d88:	4c43      	ldr	r4, [pc, #268]	@ (8022e98 <_lite_kernel_nl_softmax_iu8ou8+0x39c>)
 8022d8a:	f5a2 2225 	sub.w	r2, r2, #675840	@ 0xa5000
 8022d8e:	f2a2 726c 	subw	r2, r2, #1900	@ 0x76c
 8022d92:	469c      	mov	ip, r3
 8022d94:	468e      	mov	lr, r1
 8022d96:	fbc2 ce04 	smlal	ip, lr, r2, r4
 8022d9a:	ea4f 7cdc 	mov.w	ip, ip, lsr #31
 8022d9e:	ea4c 0c4e 	orr.w	ip, ip, lr, lsl #1
 8022da2:	ea02 0808 	and.w	r8, r2, r8
 8022da6:	ea05 050c 	and.w	r5, r5, ip
 8022daa:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8022dac:	4c3b      	ldr	r4, [pc, #236]	@ (8022e9c <_lite_kernel_nl_softmax_iu8ou8+0x3a0>)
 8022dae:	ea88 0505 	eor.w	r5, r8, r5
 8022db2:	ea05 0c02 	and.w	ip, r5, r2
 8022db6:	468e      	mov	lr, r1
 8022db8:	461a      	mov	r2, r3
 8022dba:	fbc5 2e04 	smlal	r2, lr, r5, r4
 8022dbe:	0fd2      	lsrs	r2, r2, #31
 8022dc0:	ea42 024e 	orr.w	r2, r2, lr, lsl #1
 8022dc4:	4c36      	ldr	r4, [pc, #216]	@ (8022ea0 <_lite_kernel_nl_softmax_iu8ou8+0x3a4>)
 8022dc6:	ea0b 0202 	and.w	r2, fp, r2
 8022dca:	ea8c 0202 	eor.w	r2, ip, r2
 8022dce:	461d      	mov	r5, r3
 8022dd0:	468c      	mov	ip, r1
 8022dd2:	fbc2 5c04 	smlal	r5, ip, r2, r4
 8022dd6:	0fed      	lsrs	r5, r5, #31
 8022dd8:	9c08      	ldr	r4, [sp, #32]
 8022dda:	ea45 054c 	orr.w	r5, r5, ip, lsl #1
 8022dde:	4017      	ands	r7, r2
 8022de0:	402c      	ands	r4, r5
 8022de2:	407c      	eors	r4, r7
 8022de4:	4f2f      	ldr	r7, [pc, #188]	@ (8022ea4 <_lite_kernel_nl_softmax_iu8ou8+0x3a8>)
 8022de6:	461a      	mov	r2, r3
 8022de8:	460d      	mov	r5, r1
 8022dea:	fbc4 2507 	smlal	r2, r5, r4, r7
 8022dee:	4026      	ands	r6, r4
 8022df0:	0fd2      	lsrs	r2, r2, #31
 8022df2:	9c07      	ldr	r4, [sp, #28]
 8022df4:	4f2c      	ldr	r7, [pc, #176]	@ (8022ea8 <_lite_kernel_nl_softmax_iu8ou8+0x3ac>)
 8022df6:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 8022dfa:	4014      	ands	r4, r2
 8022dfc:	4622      	mov	r2, r4
 8022dfe:	4072      	eors	r2, r6
 8022e00:	461c      	mov	r4, r3
 8022e02:	460e      	mov	r6, r1
 8022e04:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8022e06:	fbc2 4607 	smlal	r4, r6, r2, r7
 8022e0a:	4015      	ands	r5, r2
 8022e0c:	0fe4      	lsrs	r4, r4, #31
 8022e0e:	9a06      	ldr	r2, [sp, #24]
 8022e10:	4f26      	ldr	r7, [pc, #152]	@ (8022eac <_lite_kernel_nl_softmax_iu8ou8+0x3b0>)
 8022e12:	ea44 0446 	orr.w	r4, r4, r6, lsl #1
 8022e16:	4022      	ands	r2, r4
 8022e18:	406a      	eors	r2, r5
 8022e1a:	461c      	mov	r4, r3
 8022e1c:	460e      	mov	r6, r1
 8022e1e:	fbc2 4607 	smlal	r4, r6, r2, r7
 8022e22:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8022e24:	0fe4      	lsrs	r4, r4, #31
 8022e26:	ea44 0446 	orr.w	r4, r4, r6, lsl #1
 8022e2a:	4015      	ands	r5, r2
 8022e2c:	4020      	ands	r0, r4
 8022e2e:	4068      	eors	r0, r5
 8022e30:	24f2      	movs	r4, #242	@ 0xf2
 8022e32:	fbc0 3104 	smlal	r3, r1, r0, r4
 8022e36:	0fdb      	lsrs	r3, r3, #31
 8022e38:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 8022e3c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8022e3e:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8022e40:	4002      	ands	r2, r0
 8022e42:	4019      	ands	r1, r3
 8022e44:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022e46:	404a      	eors	r2, r1
 8022e48:	401a      	ands	r2, r3
 8022e4a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8022e4c:	405a      	eors	r2, r3
 8022e4e:	1313      	asrs	r3, r2, #12
 8022e50:	0511      	lsls	r1, r2, #20
 8022e52:	9903      	ldr	r1, [sp, #12]
 8022e54:	bf48      	it	mi
 8022e56:	3301      	addmi	r3, #1
 8022e58:	4419      	add	r1, r3
 8022e5a:	9103      	str	r1, [sp, #12]
 8022e5c:	9b02      	ldr	r3, [sp, #8]
 8022e5e:	f843 2f04 	str.w	r2, [r3, #4]!
 8022e62:	9a04      	ldr	r2, [sp, #16]
 8022e64:	9302      	str	r3, [sp, #8]
 8022e66:	9b01      	ldr	r3, [sp, #4]
 8022e68:	4413      	add	r3, r2
 8022e6a:	9301      	str	r3, [sp, #4]
 8022e6c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8022e6e:	f109 0901 	add.w	r9, r9, #1
 8022e72:	454b      	cmp	r3, r9
 8022e74:	d93e      	bls.n	8022ef4 <_lite_kernel_nl_softmax_iu8ou8+0x3f8>
 8022e76:	9b01      	ldr	r3, [sp, #4]
 8022e78:	9a05      	ldr	r2, [sp, #20]
 8022e7a:	781b      	ldrb	r3, [r3, #0]
 8022e7c:	429a      	cmp	r2, r3
 8022e7e:	f77f ae80 	ble.w	8022b82 <_lite_kernel_nl_softmax_iu8ou8+0x86>
 8022e82:	2200      	movs	r2, #0
 8022e84:	e7ea      	b.n	8022e5c <_lite_kernel_nl_softmax_iu8ou8+0x360>
 8022e86:	f04f 0e02 	mov.w	lr, #2
 8022e8a:	e71b      	b.n	8022cc4 <_lite_kernel_nl_softmax_iu8ou8+0x1c8>
 8022e8c:	c0000001 	.word	0xc0000001
 8022e90:	2aaaaaab 	.word	0x2aaaaaab
 8022e94:	70f5a894 	.word	0x70f5a894
 8022e98:	63afbe7b 	.word	0x63afbe7b
 8022e9c:	4da2cbf2 	.word	0x4da2cbf2
 8022ea0:	2f16ac6c 	.word	0x2f16ac6c
 8022ea4:	1152aaa4 	.word	0x1152aaa4
 8022ea8:	02582ab7 	.word	0x02582ab7
 8022eac:	000afe11 	.word	0x000afe11
 8022eb0:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8022eb4:	f47f ae85 	bne.w	8022bc2 <_lite_kernel_nl_softmax_iu8ou8+0xc6>
 8022eb8:	4dab      	ldr	r5, [pc, #684]	@ (8023168 <_lite_kernel_nl_softmax_iu8ou8+0x66c>)
 8022eba:	4aac      	ldr	r2, [pc, #688]	@ (802316c <_lite_kernel_nl_softmax_iu8ou8+0x670>)
 8022ebc:	49ac      	ldr	r1, [pc, #688]	@ (8023170 <_lite_kernel_nl_softmax_iu8ou8+0x674>)
 8022ebe:	2000      	movs	r0, #0
 8022ec0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8022ec4:	e9cd 5211 	strd	r5, r2, [sp, #68]	@ 0x44
 8022ec8:	4aaa      	ldr	r2, [pc, #680]	@ (8023174 <_lite_kernel_nl_softmax_iu8ou8+0x678>)
 8022eca:	920f      	str	r2, [sp, #60]	@ 0x3c
 8022ecc:	e9cd 0006 	strd	r0, r0, [sp, #24]
 8022ed0:	e9cd 330c 	strd	r3, r3, [sp, #48]	@ 0x30
 8022ed4:	9309      	str	r3, [sp, #36]	@ 0x24
 8022ed6:	9008      	str	r0, [sp, #32]
 8022ed8:	4605      	mov	r5, r0
 8022eda:	930a      	str	r3, [sp, #40]	@ 0x28
 8022edc:	4698      	mov	r8, r3
 8022ede:	461f      	mov	r7, r3
 8022ee0:	461e      	mov	r6, r3
 8022ee2:	930b      	str	r3, [sp, #44]	@ 0x2c
 8022ee4:	4683      	mov	fp, r0
 8022ee6:	900e      	str	r0, [sp, #56]	@ 0x38
 8022ee8:	4684      	mov	ip, r0
 8022eea:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8022eee:	4682      	mov	sl, r0
 8022ef0:	9010      	str	r0, [sp, #64]	@ 0x40
 8022ef2:	e6e5      	b.n	8022cc0 <_lite_kernel_nl_softmax_iu8ou8+0x1c4>
 8022ef4:	9b03      	ldr	r3, [sp, #12]
 8022ef6:	4693      	mov	fp, r2
 8022ef8:	2b00      	cmp	r3, #0
 8022efa:	f000 8200 	beq.w	80232fe <_lite_kernel_nl_softmax_iu8ou8+0x802>
 8022efe:	fab3 fa83 	clz	sl, r3
 8022f02:	fa03 f20a 	lsl.w	r2, r3, sl
 8022f06:	f102 4300 	add.w	r3, r2, #2147483648	@ 0x80000000
 8022f0a:	17d9      	asrs	r1, r3, #31
 8022f0c:	f1b1 3fff 	cmp.w	r1, #4294967295	@ 0xffffffff
 8022f10:	bf08      	it	eq
 8022f12:	2a00      	cmpeq	r2, #0
 8022f14:	f1ca 0623 	rsb	r6, sl, #35	@ 0x23
 8022f18:	f000 81f4 	beq.w	8023304 <_lite_kernel_nl_softmax_iu8ou8+0x808>
 8022f1c:	f113 4300 	adds.w	r3, r3, #2147483648	@ 0x80000000
 8022f20:	f141 0100 	adc.w	r1, r1, #0
 8022f24:	085b      	lsrs	r3, r3, #1
 8022f26:	ea43 73c1 	orr.w	r3, r3, r1, lsl #31
 8022f2a:	4a93      	ldr	r2, [pc, #588]	@ (8023178 <_lite_kernel_nl_softmax_iu8ou8+0x67c>)
 8022f2c:	4d93      	ldr	r5, [pc, #588]	@ (802317c <_lite_kernel_nl_softmax_iu8ou8+0x680>)
 8022f2e:	1049      	asrs	r1, r1, #1
 8022f30:	4258      	negs	r0, r3
 8022f32:	fb02 0001 	mla	r0, r2, r1, r0
 8022f36:	fba3 2402 	umull	r2, r4, r3, r2
 8022f3a:	1952      	adds	r2, r2, r5
 8022f3c:	4420      	add	r0, r4
 8022f3e:	f160 0000 	sbc.w	r0, r0, #0
 8022f42:	2800      	cmp	r0, #0
 8022f44:	469e      	mov	lr, r3
 8022f46:	da05      	bge.n	8022f54 <_lite_kernel_nl_softmax_iu8ou8+0x458>
 8022f48:	f06f 4400 	mvn.w	r4, #2147483648	@ 0x80000000
 8022f4c:	1914      	adds	r4, r2, r4
 8022f4e:	4622      	mov	r2, r4
 8022f50:	f140 0000 	adc.w	r0, r0, #0
 8022f54:	0fd2      	lsrs	r2, r2, #31
 8022f56:	ea42 0540 	orr.w	r5, r2, r0, lsl #1
 8022f5a:	f105 375a 	add.w	r7, r5, #1515870810	@ 0x5a5a5a5a
 8022f5e:	17fc      	asrs	r4, r7, #31
 8022f60:	fba3 0c07 	umull	r0, ip, r3, r7
 8022f64:	fb03 f804 	mul.w	r8, r3, r4
 8022f68:	f110 4080 	adds.w	r0, r0, #1073741824	@ 0x40000000
 8022f6c:	fb07 8801 	mla	r8, r7, r1, r8
 8022f70:	eb48 0c0c 	adc.w	ip, r8, ip
 8022f74:	f1bc 0f00 	cmp.w	ip, #0
 8022f78:	463a      	mov	r2, r7
 8022f7a:	da06      	bge.n	8022f8a <_lite_kernel_nl_softmax_iu8ou8+0x48e>
 8022f7c:	f06f 4800 	mvn.w	r8, #2147483648	@ 0x80000000
 8022f80:	eb10 0808 	adds.w	r8, r0, r8
 8022f84:	4640      	mov	r0, r8
 8022f86:	f14c 0c00 	adc.w	ip, ip, #0
 8022f8a:	0fc0      	lsrs	r0, r0, #31
 8022f8c:	ea40 004c 	orr.w	r0, r0, ip, lsl #1
 8022f90:	f1c0 5000 	rsb	r0, r0, #536870912	@ 0x20000000
 8022f94:	ea80 0c07 	eor.w	ip, r0, r7
 8022f98:	ea4f 7cdc 	mov.w	ip, ip, lsr #31
 8022f9c:	f1bc 0f00 	cmp.w	ip, #0
 8022fa0:	bf08      	it	eq
 8022fa2:	f04f 0900 	moveq.w	r9, #0
 8022fa6:	f8df c1d4 	ldr.w	ip, [pc, #468]	@ 802317c <_lite_kernel_nl_softmax_iu8ou8+0x680>
 8022faa:	bf14      	ite	ne
 8022fac:	f04f 39ff 	movne.w	r9, #4294967295	@ 0xffffffff
 8022fb0:	f04f 4c80 	moveq.w	ip, #1073741824	@ 0x40000000
 8022fb4:	fb00 f404 	mul.w	r4, r0, r4
 8022fb8:	ea4f 78e0 	mov.w	r8, r0, asr #31
 8022fbc:	fb02 4408 	mla	r4, r2, r8, r4
 8022fc0:	fba0 2002 	umull	r2, r0, r0, r2
 8022fc4:	eb12 020c 	adds.w	r2, r2, ip
 8022fc8:	4404      	add	r4, r0
 8022fca:	eb44 0409 	adc.w	r4, r4, r9
 8022fce:	2c00      	cmp	r4, #0
 8022fd0:	da05      	bge.n	8022fde <_lite_kernel_nl_softmax_iu8ou8+0x4e2>
 8022fd2:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8022fd6:	1810      	adds	r0, r2, r0
 8022fd8:	4602      	mov	r2, r0
 8022fda:	f144 0400 	adc.w	r4, r4, #0
 8022fde:	0fd2      	lsrs	r2, r2, #31
 8022fe0:	ea42 0244 	orr.w	r2, r2, r4, lsl #1
 8022fe4:	f1b2 4f60 	cmp.w	r2, #3758096384	@ 0xe0000000
 8022fe8:	f340 8130 	ble.w	802324c <_lite_kernel_nl_softmax_iu8ou8+0x750>
 8022fec:	eb07 0082 	add.w	r0, r7, r2, lsl #2
 8022ff0:	ea80 020e 	eor.w	r2, r0, lr
 8022ff4:	0fd2      	lsrs	r2, r2, #31
 8022ff6:	2a00      	cmp	r2, #0
 8022ff8:	4f60      	ldr	r7, [pc, #384]	@ (802317c <_lite_kernel_nl_softmax_iu8ou8+0x680>)
 8022ffa:	ea4f 74e0 	mov.w	r4, r0, asr #31
 8022ffe:	fb00 f501 	mul.w	r5, r0, r1
 8023002:	fba0 2803 	umull	r2, r8, r0, r3
 8023006:	bf08      	it	eq
 8023008:	f04f 4780 	moveq.w	r7, #1073741824	@ 0x40000000
 802300c:	fb03 5504 	mla	r5, r3, r4, r5
 8023010:	bf0c      	ite	eq
 8023012:	f04f 0c00 	moveq.w	ip, #0
 8023016:	f04f 3cff 	movne.w	ip, #4294967295	@ 0xffffffff
 802301a:	4445      	add	r5, r8
 802301c:	19d2      	adds	r2, r2, r7
 802301e:	eb45 050c 	adc.w	r5, r5, ip
 8023022:	2d00      	cmp	r5, #0
 8023024:	da05      	bge.n	8023032 <_lite_kernel_nl_softmax_iu8ou8+0x536>
 8023026:	f06f 4700 	mvn.w	r7, #2147483648	@ 0x80000000
 802302a:	19d7      	adds	r7, r2, r7
 802302c:	463a      	mov	r2, r7
 802302e:	f145 0500 	adc.w	r5, r5, #0
 8023032:	0fd2      	lsrs	r2, r2, #31
 8023034:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 8023038:	f1c2 5200 	rsb	r2, r2, #536870912	@ 0x20000000
 802303c:	ea80 0502 	eor.w	r5, r0, r2
 8023040:	0fed      	lsrs	r5, r5, #31
 8023042:	2d00      	cmp	r5, #0
 8023044:	bf08      	it	eq
 8023046:	2700      	moveq	r7, #0
 8023048:	4d4c      	ldr	r5, [pc, #304]	@ (802317c <_lite_kernel_nl_softmax_iu8ou8+0x680>)
 802304a:	bf14      	ite	ne
 802304c:	f04f 37ff 	movne.w	r7, #4294967295	@ 0xffffffff
 8023050:	f04f 4580 	moveq.w	r5, #1073741824	@ 0x40000000
 8023054:	fb02 f404 	mul.w	r4, r2, r4
 8023058:	ea4f 7ce2 	mov.w	ip, r2, asr #31
 802305c:	fb00 440c 	mla	r4, r0, ip, r4
 8023060:	fba2 2c00 	umull	r2, ip, r2, r0
 8023064:	1952      	adds	r2, r2, r5
 8023066:	4464      	add	r4, ip
 8023068:	eb44 0407 	adc.w	r4, r4, r7
 802306c:	2c00      	cmp	r4, #0
 802306e:	da05      	bge.n	802307c <_lite_kernel_nl_softmax_iu8ou8+0x580>
 8023070:	f06f 4500 	mvn.w	r5, #2147483648	@ 0x80000000
 8023074:	1955      	adds	r5, r2, r5
 8023076:	462a      	mov	r2, r5
 8023078:	f144 0400 	adc.w	r4, r4, #0
 802307c:	0fd2      	lsrs	r2, r2, #31
 802307e:	ea42 0244 	orr.w	r2, r2, r4, lsl #1
 8023082:	f1b2 5f00 	cmp.w	r2, #536870912	@ 0x20000000
 8023086:	f2c0 8111 	blt.w	80232ac <_lite_kernel_nl_softmax_iu8ou8+0x7b0>
 802308a:	f06f 4400 	mvn.w	r4, #2147483648	@ 0x80000000
 802308e:	1902      	adds	r2, r0, r4
 8023090:	ea92 0f0e 	teq	r2, lr
 8023094:	f140 80d6 	bpl.w	8023244 <_lite_kernel_nl_softmax_iu8ou8+0x748>
 8023098:	4c38      	ldr	r4, [pc, #224]	@ (802317c <_lite_kernel_nl_softmax_iu8ou8+0x680>)
 802309a:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
 802309e:	fb02 f101 	mul.w	r1, r2, r1
 80230a2:	17d0      	asrs	r0, r2, #31
 80230a4:	fb03 1100 	mla	r1, r3, r0, r1
 80230a8:	fba2 3703 	umull	r3, r7, r2, r3
 80230ac:	191b      	adds	r3, r3, r4
 80230ae:	4439      	add	r1, r7
 80230b0:	eb41 0105 	adc.w	r1, r1, r5
 80230b4:	2900      	cmp	r1, #0
 80230b6:	da05      	bge.n	80230c4 <_lite_kernel_nl_softmax_iu8ou8+0x5c8>
 80230b8:	f06f 4400 	mvn.w	r4, #2147483648	@ 0x80000000
 80230bc:	191c      	adds	r4, r3, r4
 80230be:	4623      	mov	r3, r4
 80230c0:	f141 0100 	adc.w	r1, r1, #0
 80230c4:	0fdb      	lsrs	r3, r3, #31
 80230c6:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 80230ca:	f1c3 5300 	rsb	r3, r3, #536870912	@ 0x20000000
 80230ce:	ea82 0103 	eor.w	r1, r2, r3
 80230d2:	0fc9      	lsrs	r1, r1, #31
 80230d4:	2900      	cmp	r1, #0
 80230d6:	bf08      	it	eq
 80230d8:	2400      	moveq	r4, #0
 80230da:	4928      	ldr	r1, [pc, #160]	@ (802317c <_lite_kernel_nl_softmax_iu8ou8+0x680>)
 80230dc:	bf14      	ite	ne
 80230de:	f04f 34ff 	movne.w	r4, #4294967295	@ 0xffffffff
 80230e2:	f04f 4180 	moveq.w	r1, #1073741824	@ 0x40000000
 80230e6:	fb03 f000 	mul.w	r0, r3, r0
 80230ea:	17dd      	asrs	r5, r3, #31
 80230ec:	fb02 0005 	mla	r0, r2, r5, r0
 80230f0:	fba3 3502 	umull	r3, r5, r3, r2
 80230f4:	185b      	adds	r3, r3, r1
 80230f6:	4428      	add	r0, r5
 80230f8:	eb40 0004 	adc.w	r0, r0, r4
 80230fc:	2800      	cmp	r0, #0
 80230fe:	da05      	bge.n	802310c <_lite_kernel_nl_softmax_iu8ou8+0x610>
 8023100:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8023104:	1859      	adds	r1, r3, r1
 8023106:	460b      	mov	r3, r1
 8023108:	f140 0000 	adc.w	r0, r0, #0
 802310c:	0fdb      	lsrs	r3, r3, #31
 802310e:	ea43 0340 	orr.w	r3, r3, r0, lsl #1
 8023112:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8023116:	f2c0 8088 	blt.w	802322a <_lite_kernel_nl_softmax_iu8ou8+0x72e>
 802311a:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 802311e:	4402      	add	r2, r0
 8023120:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
 8023124:	bfb8      	it	lt
 8023126:	0050      	lsllt	r0, r2, #1
 8023128:	2e1f      	cmp	r6, #31
 802312a:	dd03      	ble.n	8023134 <_lite_kernel_nl_softmax_iu8ou8+0x638>
 802312c:	f1ca 0304 	rsb	r3, sl, #4
 8023130:	4118      	asrs	r0, r3
 8023132:	261f      	movs	r6, #31
 8023134:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8023136:	2b00      	cmp	r3, #0
 8023138:	d051      	beq.n	80231de <_lite_kernel_nl_softmax_iu8ou8+0x6e2>
 802313a:	2701      	movs	r7, #1
 802313c:	40b7      	lsls	r7, r6
 802313e:	3f01      	subs	r7, #1
 8023140:	f06f 4c00 	mvn.w	ip, #2147483648	@ 0x80000000
 8023144:	ea07 0a0c 	and.w	sl, r7, ip
 8023148:	ea4f 0867 	mov.w	r8, r7, asr #1
 802314c:	fa4c f306 	asr.w	r3, ip, r6
 8023150:	f8cd a008 	str.w	sl, [sp, #8]
 8023154:	e9dd 4515 	ldrd	r4, r5, [sp, #84]	@ 0x54
 8023158:	f8df e020 	ldr.w	lr, [pc, #32]	@ 802317c <_lite_kernel_nl_softmax_iu8ou8+0x680>
 802315c:	f8dd a060 	ldr.w	sl, [sp, #96]	@ 0x60
 8023160:	9301      	str	r3, [sp, #4]
 8023162:	f108 0901 	add.w	r9, r8, #1
 8023166:	e015      	b.n	8023194 <_lite_kernel_nl_softmax_iu8ou8+0x698>
 8023168:	40000100 	.word	0x40000100
 802316c:	001fffff 	.word	0x001fffff
 8023170:	0fffffe0 	.word	0x0fffffe0
 8023174:	01fffff8 	.word	0x01fffff8
 8023178:	c3c3c3c4 	.word	0xc3c3c3c4
 802317c:	c0000001 	.word	0xc0000001
 8023180:	4590      	cmp	r8, r2
 8023182:	da00      	bge.n	8023186 <_lite_kernel_nl_softmax_iu8ou8+0x68a>
 8023184:	3301      	adds	r3, #1
 8023186:	2bfe      	cmp	r3, #254	@ 0xfe
 8023188:	dd4b      	ble.n	8023222 <_lite_kernel_nl_softmax_iu8ou8+0x726>
 802318a:	23ff      	movs	r3, #255	@ 0xff
 802318c:	45aa      	cmp	sl, r5
 802318e:	7023      	strb	r3, [r4, #0]
 8023190:	445c      	add	r4, fp
 8023192:	d024      	beq.n	80231de <_lite_kernel_nl_softmax_iu8ou8+0x6e2>
 8023194:	f855 1f04 	ldr.w	r1, [r5, #4]!
 8023198:	ea80 0301 	eor.w	r3, r0, r1
 802319c:	0fdb      	lsrs	r3, r3, #31
 802319e:	2b00      	cmp	r3, #0
 80231a0:	bf0b      	itete	eq
 80231a2:	f04f 4380 	moveq.w	r3, #1073741824	@ 0x40000000
 80231a6:	4673      	movne	r3, lr
 80231a8:	2200      	moveq	r2, #0
 80231aa:	f04f 32ff 	movne.w	r2, #4294967295	@ 0xffffffff
 80231ae:	fbc1 3200 	smlal	r3, r2, r1, r0
 80231b2:	2a00      	cmp	r2, #0
 80231b4:	da03      	bge.n	80231be <_lite_kernel_nl_softmax_iu8ou8+0x6c2>
 80231b6:	eb13 030c 	adds.w	r3, r3, ip
 80231ba:	f142 0200 	adc.w	r2, r2, #0
 80231be:	0fdb      	lsrs	r3, r3, #31
 80231c0:	4288      	cmp	r0, r1
 80231c2:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 80231c6:	d026      	beq.n	8023216 <_lite_kernel_nl_softmax_iu8ou8+0x71a>
 80231c8:	ea07 0203 	and.w	r2, r7, r3
 80231cc:	4133      	asrs	r3, r6
 80231ce:	d5d7      	bpl.n	8023180 <_lite_kernel_nl_softmax_iu8ou8+0x684>
 80231d0:	4591      	cmp	r9, r2
 80231d2:	dbd7      	blt.n	8023184 <_lite_kernel_nl_softmax_iu8ou8+0x688>
 80231d4:	2300      	movs	r3, #0
 80231d6:	45aa      	cmp	sl, r5
 80231d8:	7023      	strb	r3, [r4, #0]
 80231da:	445c      	add	r4, fp
 80231dc:	d1da      	bne.n	8023194 <_lite_kernel_nl_softmax_iu8ou8+0x698>
 80231de:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80231e0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80231e2:	3201      	adds	r2, #1
 80231e4:	9215      	str	r2, [sp, #84]	@ 0x54
 80231e6:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 80231e8:	3301      	adds	r3, #1
 80231ea:	4293      	cmp	r3, r2
 80231ec:	9314      	str	r3, [sp, #80]	@ 0x50
 80231ee:	f47f aca7 	bne.w	8022b40 <_lite_kernel_nl_softmax_iu8ou8+0x44>
 80231f2:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 80231f4:	991c      	ldr	r1, [sp, #112]	@ 0x70
 80231f6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80231f8:	440a      	add	r2, r1
 80231fa:	921a      	str	r2, [sp, #104]	@ 0x68
 80231fc:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80231fe:	440a      	add	r2, r1
 8023200:	9219      	str	r2, [sp, #100]	@ 0x64
 8023202:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8023204:	3301      	adds	r3, #1
 8023206:	429a      	cmp	r2, r3
 8023208:	46da      	mov	sl, fp
 802320a:	931b      	str	r3, [sp, #108]	@ 0x6c
 802320c:	f47f ac91 	bne.w	8022b32 <_lite_kernel_nl_softmax_iu8ou8+0x36>
 8023210:	b01f      	add	sp, #124	@ 0x7c
 8023212:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023216:	f1b0 4f00 	cmp.w	r0, #2147483648	@ 0x80000000
 802321a:	d1d5      	bne.n	80231c8 <_lite_kernel_nl_softmax_iu8ou8+0x6cc>
 802321c:	e9dd 3201 	ldrd	r3, r2, [sp, #4]
 8023220:	e7ae      	b.n	8023180 <_lite_kernel_nl_softmax_iu8ou8+0x684>
 8023222:	2b00      	cmp	r3, #0
 8023224:	ddd6      	ble.n	80231d4 <_lite_kernel_nl_softmax_iu8ou8+0x6d8>
 8023226:	b2db      	uxtb	r3, r3
 8023228:	e7b0      	b.n	802318c <_lite_kernel_nl_softmax_iu8ou8+0x690>
 802322a:	f1b3 4f60 	cmp.w	r3, #3758096384	@ 0xe0000000
 802322e:	f300 8093 	bgt.w	8023358 <_lite_kernel_nl_softmax_iu8ou8+0x85c>
 8023232:	f102 4300 	add.w	r3, r2, #2147483648	@ 0x80000000
 8023236:	0050      	lsls	r0, r2, #1
 8023238:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 802323c:	bfd8      	it	le
 802323e:	f04f 4000 	movle.w	r0, #2147483648	@ 0x80000000
 8023242:	e771      	b.n	8023128 <_lite_kernel_nl_softmax_iu8ou8+0x62c>
 8023244:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
 8023248:	2500      	movs	r5, #0
 802324a:	e728      	b.n	802309e <_lite_kernel_nl_softmax_iu8ou8+0x5a2>
 802324c:	f105 305a 	add.w	r0, r5, #1515870810	@ 0x5a5a5a5a
 8023250:	f100 4000 	add.w	r0, r0, #2147483648	@ 0x80000000
 8023254:	ea90 0f0e 	teq	r0, lr
 8023258:	d562      	bpl.n	8023320 <_lite_kernel_nl_softmax_iu8ou8+0x824>
 802325a:	4d48      	ldr	r5, [pc, #288]	@ (802337c <_lite_kernel_nl_softmax_iu8ou8+0x880>)
 802325c:	17c2      	asrs	r2, r0, #31
 802325e:	fb00 f401 	mul.w	r4, r0, r1
 8023262:	fb03 4402 	mla	r4, r3, r2, r4
 8023266:	fba0 2703 	umull	r2, r7, r0, r3
 802326a:	1952      	adds	r2, r2, r5
 802326c:	443c      	add	r4, r7
 802326e:	f164 0500 	sbc.w	r5, r4, #0
 8023272:	2d00      	cmp	r5, #0
 8023274:	da05      	bge.n	8023282 <_lite_kernel_nl_softmax_iu8ou8+0x786>
 8023276:	f06f 4400 	mvn.w	r4, #2147483648	@ 0x80000000
 802327a:	1914      	adds	r4, r2, r4
 802327c:	4622      	mov	r2, r4
 802327e:	f145 0500 	adc.w	r5, r5, #0
 8023282:	0fd2      	lsrs	r2, r2, #31
 8023284:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 8023288:	f1c2 5400 	rsb	r4, r2, #536870912	@ 0x20000000
 802328c:	4a3b      	ldr	r2, [pc, #236]	@ (802337c <_lite_kernel_nl_softmax_iu8ou8+0x880>)
 802328e:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
 8023292:	fbc0 2504 	smlal	r2, r5, r0, r4
 8023296:	2d00      	cmp	r5, #0
 8023298:	da05      	bge.n	80232a6 <_lite_kernel_nl_softmax_iu8ou8+0x7aa>
 802329a:	f06f 4400 	mvn.w	r4, #2147483648	@ 0x80000000
 802329e:	1914      	adds	r4, r2, r4
 80232a0:	4622      	mov	r2, r4
 80232a2:	f145 0500 	adc.w	r5, r5, #0
 80232a6:	0fd2      	lsrs	r2, r2, #31
 80232a8:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 80232ac:	f1b2 4f60 	cmp.w	r2, #3758096384	@ 0xe0000000
 80232b0:	ea4f 0482 	mov.w	r4, r2, lsl #2
 80232b4:	f73f aeeb 	bgt.w	802308e <_lite_kernel_nl_softmax_iu8ou8+0x592>
 80232b8:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 80232bc:	ea92 0f0e 	teq	r2, lr
 80232c0:	d5c0      	bpl.n	8023244 <_lite_kernel_nl_softmax_iu8ou8+0x748>
 80232c2:	4c2e      	ldr	r4, [pc, #184]	@ (802337c <_lite_kernel_nl_softmax_iu8ou8+0x880>)
 80232c4:	fb02 f101 	mul.w	r1, r2, r1
 80232c8:	17d0      	asrs	r0, r2, #31
 80232ca:	fb03 1100 	mla	r1, r3, r0, r1
 80232ce:	fba2 3503 	umull	r3, r5, r2, r3
 80232d2:	191b      	adds	r3, r3, r4
 80232d4:	4429      	add	r1, r5
 80232d6:	f161 0100 	sbc.w	r1, r1, #0
 80232da:	2900      	cmp	r1, #0
 80232dc:	da05      	bge.n	80232ea <_lite_kernel_nl_softmax_iu8ou8+0x7ee>
 80232de:	f06f 4400 	mvn.w	r4, #2147483648	@ 0x80000000
 80232e2:	191c      	adds	r4, r3, r4
 80232e4:	4623      	mov	r3, r4
 80232e6:	f141 0100 	adc.w	r1, r1, #0
 80232ea:	0fdb      	lsrs	r3, r3, #31
 80232ec:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 80232f0:	f1c3 5300 	rsb	r3, r3, #536870912	@ 0x20000000
 80232f4:	4921      	ldr	r1, [pc, #132]	@ (802337c <_lite_kernel_nl_softmax_iu8ou8+0x880>)
 80232f6:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 80232fa:	e6f4      	b.n	80230e6 <_lite_kernel_nl_softmax_iu8ou8+0x5ea>
 80232fc:	bbba      	cbnz	r2, 802336e <_lite_kernel_nl_softmax_iu8ou8+0x872>
 80232fe:	2603      	movs	r6, #3
 8023300:	f04f 0a20 	mov.w	sl, #32
 8023304:	f04f 3eff 	mov.w	lr, #4294967295	@ 0xffffffff
 8023308:	2400      	movs	r4, #0
 802330a:	f04f 325a 	mov.w	r2, #1515870810	@ 0x5a5a5a5a
 802330e:	481c      	ldr	r0, [pc, #112]	@ (8023380 <_lite_kernel_nl_softmax_iu8ou8+0x884>)
 8023310:	4673      	mov	r3, lr
 8023312:	4671      	mov	r1, lr
 8023314:	4617      	mov	r7, r2
 8023316:	4625      	mov	r5, r4
 8023318:	f04f 4c80 	mov.w	ip, #1073741824	@ 0x40000000
 802331c:	46a1      	mov	r9, r4
 802331e:	e649      	b.n	8022fb4 <_lite_kernel_nl_softmax_iu8ou8+0x4b8>
 8023320:	17c4      	asrs	r4, r0, #31
 8023322:	fba3 2500 	umull	r2, r5, r3, r0
 8023326:	fb03 f704 	mul.w	r7, r3, r4
 802332a:	f112 4280 	adds.w	r2, r2, #1073741824	@ 0x40000000
 802332e:	fb00 7701 	mla	r7, r0, r1, r7
 8023332:	eb47 0505 	adc.w	r5, r7, r5
 8023336:	2d00      	cmp	r5, #0
 8023338:	da05      	bge.n	8023346 <_lite_kernel_nl_softmax_iu8ou8+0x84a>
 802333a:	f06f 4700 	mvn.w	r7, #2147483648	@ 0x80000000
 802333e:	19d7      	adds	r7, r2, r7
 8023340:	463a      	mov	r2, r7
 8023342:	f145 0500 	adc.w	r5, r5, #0
 8023346:	0fd2      	lsrs	r2, r2, #31
 8023348:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 802334c:	f1c2 5200 	rsb	r2, r2, #536870912	@ 0x20000000
 8023350:	4d0a      	ldr	r5, [pc, #40]	@ (802337c <_lite_kernel_nl_softmax_iu8ou8+0x880>)
 8023352:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 8023356:	e67d      	b.n	8023054 <_lite_kernel_nl_softmax_iu8ou8+0x558>
 8023358:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 802335c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8023360:	ea4f 0043 	mov.w	r0, r3, lsl #1
 8023364:	f6ff af68 	blt.w	8023238 <_lite_kernel_nl_softmax_iu8ou8+0x73c>
 8023368:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 802336c:	e6dc      	b.n	8023128 <_lite_kernel_nl_softmax_iu8ou8+0x62c>
 802336e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8023370:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8023372:	4413      	add	r3, r2
 8023374:	9305      	str	r3, [sp, #20]
 8023376:	f7ff bbfa 	b.w	8022b6e <_lite_kernel_nl_softmax_iu8ou8+0x72>
 802337a:	bf00      	nop
 802337c:	c0000001 	.word	0xc0000001
 8023380:	20000001 	.word	0x20000001

08023384 <__cvt>:
 8023384:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8023388:	ec57 6b10 	vmov	r6, r7, d0
 802338c:	2f00      	cmp	r7, #0
 802338e:	460c      	mov	r4, r1
 8023390:	4619      	mov	r1, r3
 8023392:	463b      	mov	r3, r7
 8023394:	bfbb      	ittet	lt
 8023396:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 802339a:	461f      	movlt	r7, r3
 802339c:	2300      	movge	r3, #0
 802339e:	232d      	movlt	r3, #45	@ 0x2d
 80233a0:	700b      	strb	r3, [r1, #0]
 80233a2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80233a4:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 80233a8:	4691      	mov	r9, r2
 80233aa:	f023 0820 	bic.w	r8, r3, #32
 80233ae:	bfbc      	itt	lt
 80233b0:	4632      	movlt	r2, r6
 80233b2:	4616      	movlt	r6, r2
 80233b4:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80233b8:	d005      	beq.n	80233c6 <__cvt+0x42>
 80233ba:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 80233be:	d100      	bne.n	80233c2 <__cvt+0x3e>
 80233c0:	3401      	adds	r4, #1
 80233c2:	2102      	movs	r1, #2
 80233c4:	e000      	b.n	80233c8 <__cvt+0x44>
 80233c6:	2103      	movs	r1, #3
 80233c8:	ab03      	add	r3, sp, #12
 80233ca:	9301      	str	r3, [sp, #4]
 80233cc:	ab02      	add	r3, sp, #8
 80233ce:	9300      	str	r3, [sp, #0]
 80233d0:	ec47 6b10 	vmov	d0, r6, r7
 80233d4:	4653      	mov	r3, sl
 80233d6:	4622      	mov	r2, r4
 80233d8:	f000 fee2 	bl	80241a0 <_dtoa_r>
 80233dc:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 80233e0:	4605      	mov	r5, r0
 80233e2:	d119      	bne.n	8023418 <__cvt+0x94>
 80233e4:	f019 0f01 	tst.w	r9, #1
 80233e8:	d00e      	beq.n	8023408 <__cvt+0x84>
 80233ea:	eb00 0904 	add.w	r9, r0, r4
 80233ee:	2200      	movs	r2, #0
 80233f0:	2300      	movs	r3, #0
 80233f2:	4630      	mov	r0, r6
 80233f4:	4639      	mov	r1, r7
 80233f6:	f7ed fa9f 	bl	8010938 <__aeabi_dcmpeq>
 80233fa:	b108      	cbz	r0, 8023400 <__cvt+0x7c>
 80233fc:	f8cd 900c 	str.w	r9, [sp, #12]
 8023400:	2230      	movs	r2, #48	@ 0x30
 8023402:	9b03      	ldr	r3, [sp, #12]
 8023404:	454b      	cmp	r3, r9
 8023406:	d31e      	bcc.n	8023446 <__cvt+0xc2>
 8023408:	9b03      	ldr	r3, [sp, #12]
 802340a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802340c:	1b5b      	subs	r3, r3, r5
 802340e:	4628      	mov	r0, r5
 8023410:	6013      	str	r3, [r2, #0]
 8023412:	b004      	add	sp, #16
 8023414:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023418:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 802341c:	eb00 0904 	add.w	r9, r0, r4
 8023420:	d1e5      	bne.n	80233ee <__cvt+0x6a>
 8023422:	7803      	ldrb	r3, [r0, #0]
 8023424:	2b30      	cmp	r3, #48	@ 0x30
 8023426:	d10a      	bne.n	802343e <__cvt+0xba>
 8023428:	2200      	movs	r2, #0
 802342a:	2300      	movs	r3, #0
 802342c:	4630      	mov	r0, r6
 802342e:	4639      	mov	r1, r7
 8023430:	f7ed fa82 	bl	8010938 <__aeabi_dcmpeq>
 8023434:	b918      	cbnz	r0, 802343e <__cvt+0xba>
 8023436:	f1c4 0401 	rsb	r4, r4, #1
 802343a:	f8ca 4000 	str.w	r4, [sl]
 802343e:	f8da 3000 	ldr.w	r3, [sl]
 8023442:	4499      	add	r9, r3
 8023444:	e7d3      	b.n	80233ee <__cvt+0x6a>
 8023446:	1c59      	adds	r1, r3, #1
 8023448:	9103      	str	r1, [sp, #12]
 802344a:	701a      	strb	r2, [r3, #0]
 802344c:	e7d9      	b.n	8023402 <__cvt+0x7e>

0802344e <__exponent>:
 802344e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8023450:	2900      	cmp	r1, #0
 8023452:	bfba      	itte	lt
 8023454:	4249      	neglt	r1, r1
 8023456:	232d      	movlt	r3, #45	@ 0x2d
 8023458:	232b      	movge	r3, #43	@ 0x2b
 802345a:	2909      	cmp	r1, #9
 802345c:	7002      	strb	r2, [r0, #0]
 802345e:	7043      	strb	r3, [r0, #1]
 8023460:	dd29      	ble.n	80234b6 <__exponent+0x68>
 8023462:	f10d 0307 	add.w	r3, sp, #7
 8023466:	461d      	mov	r5, r3
 8023468:	270a      	movs	r7, #10
 802346a:	461a      	mov	r2, r3
 802346c:	fbb1 f6f7 	udiv	r6, r1, r7
 8023470:	fb07 1416 	mls	r4, r7, r6, r1
 8023474:	3430      	adds	r4, #48	@ 0x30
 8023476:	f802 4c01 	strb.w	r4, [r2, #-1]
 802347a:	460c      	mov	r4, r1
 802347c:	2c63      	cmp	r4, #99	@ 0x63
 802347e:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 8023482:	4631      	mov	r1, r6
 8023484:	dcf1      	bgt.n	802346a <__exponent+0x1c>
 8023486:	3130      	adds	r1, #48	@ 0x30
 8023488:	1e94      	subs	r4, r2, #2
 802348a:	f803 1c01 	strb.w	r1, [r3, #-1]
 802348e:	1c41      	adds	r1, r0, #1
 8023490:	4623      	mov	r3, r4
 8023492:	42ab      	cmp	r3, r5
 8023494:	d30a      	bcc.n	80234ac <__exponent+0x5e>
 8023496:	f10d 0309 	add.w	r3, sp, #9
 802349a:	1a9b      	subs	r3, r3, r2
 802349c:	42ac      	cmp	r4, r5
 802349e:	bf88      	it	hi
 80234a0:	2300      	movhi	r3, #0
 80234a2:	3302      	adds	r3, #2
 80234a4:	4403      	add	r3, r0
 80234a6:	1a18      	subs	r0, r3, r0
 80234a8:	b003      	add	sp, #12
 80234aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80234ac:	f813 6b01 	ldrb.w	r6, [r3], #1
 80234b0:	f801 6f01 	strb.w	r6, [r1, #1]!
 80234b4:	e7ed      	b.n	8023492 <__exponent+0x44>
 80234b6:	2330      	movs	r3, #48	@ 0x30
 80234b8:	3130      	adds	r1, #48	@ 0x30
 80234ba:	7083      	strb	r3, [r0, #2]
 80234bc:	70c1      	strb	r1, [r0, #3]
 80234be:	1d03      	adds	r3, r0, #4
 80234c0:	e7f1      	b.n	80234a6 <__exponent+0x58>
	...

080234c4 <_printf_float>:
 80234c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80234c8:	b08d      	sub	sp, #52	@ 0x34
 80234ca:	460c      	mov	r4, r1
 80234cc:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80234d0:	4616      	mov	r6, r2
 80234d2:	461f      	mov	r7, r3
 80234d4:	4605      	mov	r5, r0
 80234d6:	f000 fdc7 	bl	8024068 <_localeconv_r>
 80234da:	6803      	ldr	r3, [r0, #0]
 80234dc:	9304      	str	r3, [sp, #16]
 80234de:	4618      	mov	r0, r3
 80234e0:	f7ec fdfe 	bl	80100e0 <strlen>
 80234e4:	2300      	movs	r3, #0
 80234e6:	930a      	str	r3, [sp, #40]	@ 0x28
 80234e8:	f8d8 3000 	ldr.w	r3, [r8]
 80234ec:	9005      	str	r0, [sp, #20]
 80234ee:	3307      	adds	r3, #7
 80234f0:	f023 0307 	bic.w	r3, r3, #7
 80234f4:	f103 0208 	add.w	r2, r3, #8
 80234f8:	f894 a018 	ldrb.w	sl, [r4, #24]
 80234fc:	f8d4 b000 	ldr.w	fp, [r4]
 8023500:	f8c8 2000 	str.w	r2, [r8]
 8023504:	e9d3 8900 	ldrd	r8, r9, [r3]
 8023508:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 802350c:	9307      	str	r3, [sp, #28]
 802350e:	f8cd 8018 	str.w	r8, [sp, #24]
 8023512:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8023516:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 802351a:	4b9c      	ldr	r3, [pc, #624]	@ (802378c <_printf_float+0x2c8>)
 802351c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8023520:	f7ed fa3c 	bl	801099c <__aeabi_dcmpun>
 8023524:	bb70      	cbnz	r0, 8023584 <_printf_float+0xc0>
 8023526:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 802352a:	4b98      	ldr	r3, [pc, #608]	@ (802378c <_printf_float+0x2c8>)
 802352c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8023530:	f7ed fa16 	bl	8010960 <__aeabi_dcmple>
 8023534:	bb30      	cbnz	r0, 8023584 <_printf_float+0xc0>
 8023536:	2200      	movs	r2, #0
 8023538:	2300      	movs	r3, #0
 802353a:	4640      	mov	r0, r8
 802353c:	4649      	mov	r1, r9
 802353e:	f7ed fa05 	bl	801094c <__aeabi_dcmplt>
 8023542:	b110      	cbz	r0, 802354a <_printf_float+0x86>
 8023544:	232d      	movs	r3, #45	@ 0x2d
 8023546:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802354a:	4a91      	ldr	r2, [pc, #580]	@ (8023790 <_printf_float+0x2cc>)
 802354c:	4b91      	ldr	r3, [pc, #580]	@ (8023794 <_printf_float+0x2d0>)
 802354e:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8023552:	bf8c      	ite	hi
 8023554:	4690      	movhi	r8, r2
 8023556:	4698      	movls	r8, r3
 8023558:	2303      	movs	r3, #3
 802355a:	6123      	str	r3, [r4, #16]
 802355c:	f02b 0304 	bic.w	r3, fp, #4
 8023560:	6023      	str	r3, [r4, #0]
 8023562:	f04f 0900 	mov.w	r9, #0
 8023566:	9700      	str	r7, [sp, #0]
 8023568:	4633      	mov	r3, r6
 802356a:	aa0b      	add	r2, sp, #44	@ 0x2c
 802356c:	4621      	mov	r1, r4
 802356e:	4628      	mov	r0, r5
 8023570:	f000 fa7c 	bl	8023a6c <_printf_common>
 8023574:	3001      	adds	r0, #1
 8023576:	f040 808d 	bne.w	8023694 <_printf_float+0x1d0>
 802357a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 802357e:	b00d      	add	sp, #52	@ 0x34
 8023580:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023584:	4642      	mov	r2, r8
 8023586:	464b      	mov	r3, r9
 8023588:	4640      	mov	r0, r8
 802358a:	4649      	mov	r1, r9
 802358c:	f7ed fa06 	bl	801099c <__aeabi_dcmpun>
 8023590:	b140      	cbz	r0, 80235a4 <_printf_float+0xe0>
 8023592:	464b      	mov	r3, r9
 8023594:	2b00      	cmp	r3, #0
 8023596:	bfbc      	itt	lt
 8023598:	232d      	movlt	r3, #45	@ 0x2d
 802359a:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 802359e:	4a7e      	ldr	r2, [pc, #504]	@ (8023798 <_printf_float+0x2d4>)
 80235a0:	4b7e      	ldr	r3, [pc, #504]	@ (802379c <_printf_float+0x2d8>)
 80235a2:	e7d4      	b.n	802354e <_printf_float+0x8a>
 80235a4:	6863      	ldr	r3, [r4, #4]
 80235a6:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 80235aa:	9206      	str	r2, [sp, #24]
 80235ac:	1c5a      	adds	r2, r3, #1
 80235ae:	d13b      	bne.n	8023628 <_printf_float+0x164>
 80235b0:	2306      	movs	r3, #6
 80235b2:	6063      	str	r3, [r4, #4]
 80235b4:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 80235b8:	2300      	movs	r3, #0
 80235ba:	6022      	str	r2, [r4, #0]
 80235bc:	9303      	str	r3, [sp, #12]
 80235be:	ab0a      	add	r3, sp, #40	@ 0x28
 80235c0:	e9cd a301 	strd	sl, r3, [sp, #4]
 80235c4:	ab09      	add	r3, sp, #36	@ 0x24
 80235c6:	9300      	str	r3, [sp, #0]
 80235c8:	6861      	ldr	r1, [r4, #4]
 80235ca:	ec49 8b10 	vmov	d0, r8, r9
 80235ce:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 80235d2:	4628      	mov	r0, r5
 80235d4:	f7ff fed6 	bl	8023384 <__cvt>
 80235d8:	9b06      	ldr	r3, [sp, #24]
 80235da:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80235dc:	2b47      	cmp	r3, #71	@ 0x47
 80235de:	4680      	mov	r8, r0
 80235e0:	d129      	bne.n	8023636 <_printf_float+0x172>
 80235e2:	1cc8      	adds	r0, r1, #3
 80235e4:	db02      	blt.n	80235ec <_printf_float+0x128>
 80235e6:	6863      	ldr	r3, [r4, #4]
 80235e8:	4299      	cmp	r1, r3
 80235ea:	dd41      	ble.n	8023670 <_printf_float+0x1ac>
 80235ec:	f1aa 0a02 	sub.w	sl, sl, #2
 80235f0:	fa5f fa8a 	uxtb.w	sl, sl
 80235f4:	3901      	subs	r1, #1
 80235f6:	4652      	mov	r2, sl
 80235f8:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 80235fc:	9109      	str	r1, [sp, #36]	@ 0x24
 80235fe:	f7ff ff26 	bl	802344e <__exponent>
 8023602:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8023604:	1813      	adds	r3, r2, r0
 8023606:	2a01      	cmp	r2, #1
 8023608:	4681      	mov	r9, r0
 802360a:	6123      	str	r3, [r4, #16]
 802360c:	dc02      	bgt.n	8023614 <_printf_float+0x150>
 802360e:	6822      	ldr	r2, [r4, #0]
 8023610:	07d2      	lsls	r2, r2, #31
 8023612:	d501      	bpl.n	8023618 <_printf_float+0x154>
 8023614:	3301      	adds	r3, #1
 8023616:	6123      	str	r3, [r4, #16]
 8023618:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 802361c:	2b00      	cmp	r3, #0
 802361e:	d0a2      	beq.n	8023566 <_printf_float+0xa2>
 8023620:	232d      	movs	r3, #45	@ 0x2d
 8023622:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8023626:	e79e      	b.n	8023566 <_printf_float+0xa2>
 8023628:	9a06      	ldr	r2, [sp, #24]
 802362a:	2a47      	cmp	r2, #71	@ 0x47
 802362c:	d1c2      	bne.n	80235b4 <_printf_float+0xf0>
 802362e:	2b00      	cmp	r3, #0
 8023630:	d1c0      	bne.n	80235b4 <_printf_float+0xf0>
 8023632:	2301      	movs	r3, #1
 8023634:	e7bd      	b.n	80235b2 <_printf_float+0xee>
 8023636:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 802363a:	d9db      	bls.n	80235f4 <_printf_float+0x130>
 802363c:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8023640:	d118      	bne.n	8023674 <_printf_float+0x1b0>
 8023642:	2900      	cmp	r1, #0
 8023644:	6863      	ldr	r3, [r4, #4]
 8023646:	dd0b      	ble.n	8023660 <_printf_float+0x19c>
 8023648:	6121      	str	r1, [r4, #16]
 802364a:	b913      	cbnz	r3, 8023652 <_printf_float+0x18e>
 802364c:	6822      	ldr	r2, [r4, #0]
 802364e:	07d0      	lsls	r0, r2, #31
 8023650:	d502      	bpl.n	8023658 <_printf_float+0x194>
 8023652:	3301      	adds	r3, #1
 8023654:	440b      	add	r3, r1
 8023656:	6123      	str	r3, [r4, #16]
 8023658:	65a1      	str	r1, [r4, #88]	@ 0x58
 802365a:	f04f 0900 	mov.w	r9, #0
 802365e:	e7db      	b.n	8023618 <_printf_float+0x154>
 8023660:	b913      	cbnz	r3, 8023668 <_printf_float+0x1a4>
 8023662:	6822      	ldr	r2, [r4, #0]
 8023664:	07d2      	lsls	r2, r2, #31
 8023666:	d501      	bpl.n	802366c <_printf_float+0x1a8>
 8023668:	3302      	adds	r3, #2
 802366a:	e7f4      	b.n	8023656 <_printf_float+0x192>
 802366c:	2301      	movs	r3, #1
 802366e:	e7f2      	b.n	8023656 <_printf_float+0x192>
 8023670:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8023674:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023676:	4299      	cmp	r1, r3
 8023678:	db05      	blt.n	8023686 <_printf_float+0x1c2>
 802367a:	6823      	ldr	r3, [r4, #0]
 802367c:	6121      	str	r1, [r4, #16]
 802367e:	07d8      	lsls	r0, r3, #31
 8023680:	d5ea      	bpl.n	8023658 <_printf_float+0x194>
 8023682:	1c4b      	adds	r3, r1, #1
 8023684:	e7e7      	b.n	8023656 <_printf_float+0x192>
 8023686:	2900      	cmp	r1, #0
 8023688:	bfd4      	ite	le
 802368a:	f1c1 0202 	rsble	r2, r1, #2
 802368e:	2201      	movgt	r2, #1
 8023690:	4413      	add	r3, r2
 8023692:	e7e0      	b.n	8023656 <_printf_float+0x192>
 8023694:	6823      	ldr	r3, [r4, #0]
 8023696:	055a      	lsls	r2, r3, #21
 8023698:	d407      	bmi.n	80236aa <_printf_float+0x1e6>
 802369a:	6923      	ldr	r3, [r4, #16]
 802369c:	4642      	mov	r2, r8
 802369e:	4631      	mov	r1, r6
 80236a0:	4628      	mov	r0, r5
 80236a2:	47b8      	blx	r7
 80236a4:	3001      	adds	r0, #1
 80236a6:	d12b      	bne.n	8023700 <_printf_float+0x23c>
 80236a8:	e767      	b.n	802357a <_printf_float+0xb6>
 80236aa:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80236ae:	f240 80dd 	bls.w	802386c <_printf_float+0x3a8>
 80236b2:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80236b6:	2200      	movs	r2, #0
 80236b8:	2300      	movs	r3, #0
 80236ba:	f7ed f93d 	bl	8010938 <__aeabi_dcmpeq>
 80236be:	2800      	cmp	r0, #0
 80236c0:	d033      	beq.n	802372a <_printf_float+0x266>
 80236c2:	4a37      	ldr	r2, [pc, #220]	@ (80237a0 <_printf_float+0x2dc>)
 80236c4:	2301      	movs	r3, #1
 80236c6:	4631      	mov	r1, r6
 80236c8:	4628      	mov	r0, r5
 80236ca:	47b8      	blx	r7
 80236cc:	3001      	adds	r0, #1
 80236ce:	f43f af54 	beq.w	802357a <_printf_float+0xb6>
 80236d2:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 80236d6:	4543      	cmp	r3, r8
 80236d8:	db02      	blt.n	80236e0 <_printf_float+0x21c>
 80236da:	6823      	ldr	r3, [r4, #0]
 80236dc:	07d8      	lsls	r0, r3, #31
 80236de:	d50f      	bpl.n	8023700 <_printf_float+0x23c>
 80236e0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80236e4:	4631      	mov	r1, r6
 80236e6:	4628      	mov	r0, r5
 80236e8:	47b8      	blx	r7
 80236ea:	3001      	adds	r0, #1
 80236ec:	f43f af45 	beq.w	802357a <_printf_float+0xb6>
 80236f0:	f04f 0900 	mov.w	r9, #0
 80236f4:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 80236f8:	f104 0a1a 	add.w	sl, r4, #26
 80236fc:	45c8      	cmp	r8, r9
 80236fe:	dc09      	bgt.n	8023714 <_printf_float+0x250>
 8023700:	6823      	ldr	r3, [r4, #0]
 8023702:	079b      	lsls	r3, r3, #30
 8023704:	f100 8103 	bmi.w	802390e <_printf_float+0x44a>
 8023708:	68e0      	ldr	r0, [r4, #12]
 802370a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802370c:	4298      	cmp	r0, r3
 802370e:	bfb8      	it	lt
 8023710:	4618      	movlt	r0, r3
 8023712:	e734      	b.n	802357e <_printf_float+0xba>
 8023714:	2301      	movs	r3, #1
 8023716:	4652      	mov	r2, sl
 8023718:	4631      	mov	r1, r6
 802371a:	4628      	mov	r0, r5
 802371c:	47b8      	blx	r7
 802371e:	3001      	adds	r0, #1
 8023720:	f43f af2b 	beq.w	802357a <_printf_float+0xb6>
 8023724:	f109 0901 	add.w	r9, r9, #1
 8023728:	e7e8      	b.n	80236fc <_printf_float+0x238>
 802372a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802372c:	2b00      	cmp	r3, #0
 802372e:	dc39      	bgt.n	80237a4 <_printf_float+0x2e0>
 8023730:	4a1b      	ldr	r2, [pc, #108]	@ (80237a0 <_printf_float+0x2dc>)
 8023732:	2301      	movs	r3, #1
 8023734:	4631      	mov	r1, r6
 8023736:	4628      	mov	r0, r5
 8023738:	47b8      	blx	r7
 802373a:	3001      	adds	r0, #1
 802373c:	f43f af1d 	beq.w	802357a <_printf_float+0xb6>
 8023740:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8023744:	ea59 0303 	orrs.w	r3, r9, r3
 8023748:	d102      	bne.n	8023750 <_printf_float+0x28c>
 802374a:	6823      	ldr	r3, [r4, #0]
 802374c:	07d9      	lsls	r1, r3, #31
 802374e:	d5d7      	bpl.n	8023700 <_printf_float+0x23c>
 8023750:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8023754:	4631      	mov	r1, r6
 8023756:	4628      	mov	r0, r5
 8023758:	47b8      	blx	r7
 802375a:	3001      	adds	r0, #1
 802375c:	f43f af0d 	beq.w	802357a <_printf_float+0xb6>
 8023760:	f04f 0a00 	mov.w	sl, #0
 8023764:	f104 0b1a 	add.w	fp, r4, #26
 8023768:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802376a:	425b      	negs	r3, r3
 802376c:	4553      	cmp	r3, sl
 802376e:	dc01      	bgt.n	8023774 <_printf_float+0x2b0>
 8023770:	464b      	mov	r3, r9
 8023772:	e793      	b.n	802369c <_printf_float+0x1d8>
 8023774:	2301      	movs	r3, #1
 8023776:	465a      	mov	r2, fp
 8023778:	4631      	mov	r1, r6
 802377a:	4628      	mov	r0, r5
 802377c:	47b8      	blx	r7
 802377e:	3001      	adds	r0, #1
 8023780:	f43f aefb 	beq.w	802357a <_printf_float+0xb6>
 8023784:	f10a 0a01 	add.w	sl, sl, #1
 8023788:	e7ee      	b.n	8023768 <_printf_float+0x2a4>
 802378a:	bf00      	nop
 802378c:	7fefffff 	.word	0x7fefffff
 8023790:	08026296 	.word	0x08026296
 8023794:	08026292 	.word	0x08026292
 8023798:	0802629e 	.word	0x0802629e
 802379c:	0802629a 	.word	0x0802629a
 80237a0:	080262a2 	.word	0x080262a2
 80237a4:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80237a6:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 80237aa:	4553      	cmp	r3, sl
 80237ac:	bfa8      	it	ge
 80237ae:	4653      	movge	r3, sl
 80237b0:	2b00      	cmp	r3, #0
 80237b2:	4699      	mov	r9, r3
 80237b4:	dc36      	bgt.n	8023824 <_printf_float+0x360>
 80237b6:	f04f 0b00 	mov.w	fp, #0
 80237ba:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80237be:	f104 021a 	add.w	r2, r4, #26
 80237c2:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80237c4:	9306      	str	r3, [sp, #24]
 80237c6:	eba3 0309 	sub.w	r3, r3, r9
 80237ca:	455b      	cmp	r3, fp
 80237cc:	dc31      	bgt.n	8023832 <_printf_float+0x36e>
 80237ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80237d0:	459a      	cmp	sl, r3
 80237d2:	dc3a      	bgt.n	802384a <_printf_float+0x386>
 80237d4:	6823      	ldr	r3, [r4, #0]
 80237d6:	07da      	lsls	r2, r3, #31
 80237d8:	d437      	bmi.n	802384a <_printf_float+0x386>
 80237da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80237dc:	ebaa 0903 	sub.w	r9, sl, r3
 80237e0:	9b06      	ldr	r3, [sp, #24]
 80237e2:	ebaa 0303 	sub.w	r3, sl, r3
 80237e6:	4599      	cmp	r9, r3
 80237e8:	bfa8      	it	ge
 80237ea:	4699      	movge	r9, r3
 80237ec:	f1b9 0f00 	cmp.w	r9, #0
 80237f0:	dc33      	bgt.n	802385a <_printf_float+0x396>
 80237f2:	f04f 0800 	mov.w	r8, #0
 80237f6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80237fa:	f104 0b1a 	add.w	fp, r4, #26
 80237fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023800:	ebaa 0303 	sub.w	r3, sl, r3
 8023804:	eba3 0309 	sub.w	r3, r3, r9
 8023808:	4543      	cmp	r3, r8
 802380a:	f77f af79 	ble.w	8023700 <_printf_float+0x23c>
 802380e:	2301      	movs	r3, #1
 8023810:	465a      	mov	r2, fp
 8023812:	4631      	mov	r1, r6
 8023814:	4628      	mov	r0, r5
 8023816:	47b8      	blx	r7
 8023818:	3001      	adds	r0, #1
 802381a:	f43f aeae 	beq.w	802357a <_printf_float+0xb6>
 802381e:	f108 0801 	add.w	r8, r8, #1
 8023822:	e7ec      	b.n	80237fe <_printf_float+0x33a>
 8023824:	4642      	mov	r2, r8
 8023826:	4631      	mov	r1, r6
 8023828:	4628      	mov	r0, r5
 802382a:	47b8      	blx	r7
 802382c:	3001      	adds	r0, #1
 802382e:	d1c2      	bne.n	80237b6 <_printf_float+0x2f2>
 8023830:	e6a3      	b.n	802357a <_printf_float+0xb6>
 8023832:	2301      	movs	r3, #1
 8023834:	4631      	mov	r1, r6
 8023836:	4628      	mov	r0, r5
 8023838:	9206      	str	r2, [sp, #24]
 802383a:	47b8      	blx	r7
 802383c:	3001      	adds	r0, #1
 802383e:	f43f ae9c 	beq.w	802357a <_printf_float+0xb6>
 8023842:	9a06      	ldr	r2, [sp, #24]
 8023844:	f10b 0b01 	add.w	fp, fp, #1
 8023848:	e7bb      	b.n	80237c2 <_printf_float+0x2fe>
 802384a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 802384e:	4631      	mov	r1, r6
 8023850:	4628      	mov	r0, r5
 8023852:	47b8      	blx	r7
 8023854:	3001      	adds	r0, #1
 8023856:	d1c0      	bne.n	80237da <_printf_float+0x316>
 8023858:	e68f      	b.n	802357a <_printf_float+0xb6>
 802385a:	9a06      	ldr	r2, [sp, #24]
 802385c:	464b      	mov	r3, r9
 802385e:	4442      	add	r2, r8
 8023860:	4631      	mov	r1, r6
 8023862:	4628      	mov	r0, r5
 8023864:	47b8      	blx	r7
 8023866:	3001      	adds	r0, #1
 8023868:	d1c3      	bne.n	80237f2 <_printf_float+0x32e>
 802386a:	e686      	b.n	802357a <_printf_float+0xb6>
 802386c:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8023870:	f1ba 0f01 	cmp.w	sl, #1
 8023874:	dc01      	bgt.n	802387a <_printf_float+0x3b6>
 8023876:	07db      	lsls	r3, r3, #31
 8023878:	d536      	bpl.n	80238e8 <_printf_float+0x424>
 802387a:	2301      	movs	r3, #1
 802387c:	4642      	mov	r2, r8
 802387e:	4631      	mov	r1, r6
 8023880:	4628      	mov	r0, r5
 8023882:	47b8      	blx	r7
 8023884:	3001      	adds	r0, #1
 8023886:	f43f ae78 	beq.w	802357a <_printf_float+0xb6>
 802388a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 802388e:	4631      	mov	r1, r6
 8023890:	4628      	mov	r0, r5
 8023892:	47b8      	blx	r7
 8023894:	3001      	adds	r0, #1
 8023896:	f43f ae70 	beq.w	802357a <_printf_float+0xb6>
 802389a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 802389e:	2200      	movs	r2, #0
 80238a0:	2300      	movs	r3, #0
 80238a2:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 80238a6:	f7ed f847 	bl	8010938 <__aeabi_dcmpeq>
 80238aa:	b9c0      	cbnz	r0, 80238de <_printf_float+0x41a>
 80238ac:	4653      	mov	r3, sl
 80238ae:	f108 0201 	add.w	r2, r8, #1
 80238b2:	4631      	mov	r1, r6
 80238b4:	4628      	mov	r0, r5
 80238b6:	47b8      	blx	r7
 80238b8:	3001      	adds	r0, #1
 80238ba:	d10c      	bne.n	80238d6 <_printf_float+0x412>
 80238bc:	e65d      	b.n	802357a <_printf_float+0xb6>
 80238be:	2301      	movs	r3, #1
 80238c0:	465a      	mov	r2, fp
 80238c2:	4631      	mov	r1, r6
 80238c4:	4628      	mov	r0, r5
 80238c6:	47b8      	blx	r7
 80238c8:	3001      	adds	r0, #1
 80238ca:	f43f ae56 	beq.w	802357a <_printf_float+0xb6>
 80238ce:	f108 0801 	add.w	r8, r8, #1
 80238d2:	45d0      	cmp	r8, sl
 80238d4:	dbf3      	blt.n	80238be <_printf_float+0x3fa>
 80238d6:	464b      	mov	r3, r9
 80238d8:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 80238dc:	e6df      	b.n	802369e <_printf_float+0x1da>
 80238de:	f04f 0800 	mov.w	r8, #0
 80238e2:	f104 0b1a 	add.w	fp, r4, #26
 80238e6:	e7f4      	b.n	80238d2 <_printf_float+0x40e>
 80238e8:	2301      	movs	r3, #1
 80238ea:	4642      	mov	r2, r8
 80238ec:	e7e1      	b.n	80238b2 <_printf_float+0x3ee>
 80238ee:	2301      	movs	r3, #1
 80238f0:	464a      	mov	r2, r9
 80238f2:	4631      	mov	r1, r6
 80238f4:	4628      	mov	r0, r5
 80238f6:	47b8      	blx	r7
 80238f8:	3001      	adds	r0, #1
 80238fa:	f43f ae3e 	beq.w	802357a <_printf_float+0xb6>
 80238fe:	f108 0801 	add.w	r8, r8, #1
 8023902:	68e3      	ldr	r3, [r4, #12]
 8023904:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8023906:	1a5b      	subs	r3, r3, r1
 8023908:	4543      	cmp	r3, r8
 802390a:	dcf0      	bgt.n	80238ee <_printf_float+0x42a>
 802390c:	e6fc      	b.n	8023708 <_printf_float+0x244>
 802390e:	f04f 0800 	mov.w	r8, #0
 8023912:	f104 0919 	add.w	r9, r4, #25
 8023916:	e7f4      	b.n	8023902 <_printf_float+0x43e>

08023918 <malloc>:
 8023918:	4b02      	ldr	r3, [pc, #8]	@ (8023924 <malloc+0xc>)
 802391a:	4601      	mov	r1, r0
 802391c:	6818      	ldr	r0, [r3, #0]
 802391e:	f000 b825 	b.w	802396c <_malloc_r>
 8023922:	bf00      	nop
 8023924:	20001dc4 	.word	0x20001dc4

08023928 <sbrk_aligned>:
 8023928:	b570      	push	{r4, r5, r6, lr}
 802392a:	4e0f      	ldr	r6, [pc, #60]	@ (8023968 <sbrk_aligned+0x40>)
 802392c:	460c      	mov	r4, r1
 802392e:	6831      	ldr	r1, [r6, #0]
 8023930:	4605      	mov	r5, r0
 8023932:	b911      	cbnz	r1, 802393a <sbrk_aligned+0x12>
 8023934:	f000 fb5a 	bl	8023fec <_sbrk_r>
 8023938:	6030      	str	r0, [r6, #0]
 802393a:	4621      	mov	r1, r4
 802393c:	4628      	mov	r0, r5
 802393e:	f000 fb55 	bl	8023fec <_sbrk_r>
 8023942:	1c43      	adds	r3, r0, #1
 8023944:	d103      	bne.n	802394e <sbrk_aligned+0x26>
 8023946:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 802394a:	4620      	mov	r0, r4
 802394c:	bd70      	pop	{r4, r5, r6, pc}
 802394e:	1cc4      	adds	r4, r0, #3
 8023950:	f024 0403 	bic.w	r4, r4, #3
 8023954:	42a0      	cmp	r0, r4
 8023956:	d0f8      	beq.n	802394a <sbrk_aligned+0x22>
 8023958:	1a21      	subs	r1, r4, r0
 802395a:	4628      	mov	r0, r5
 802395c:	f000 fb46 	bl	8023fec <_sbrk_r>
 8023960:	3001      	adds	r0, #1
 8023962:	d1f2      	bne.n	802394a <sbrk_aligned+0x22>
 8023964:	e7ef      	b.n	8023946 <sbrk_aligned+0x1e>
 8023966:	bf00      	nop
 8023968:	20002238 	.word	0x20002238

0802396c <_malloc_r>:
 802396c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8023970:	1ccd      	adds	r5, r1, #3
 8023972:	f025 0503 	bic.w	r5, r5, #3
 8023976:	3508      	adds	r5, #8
 8023978:	2d0c      	cmp	r5, #12
 802397a:	bf38      	it	cc
 802397c:	250c      	movcc	r5, #12
 802397e:	2d00      	cmp	r5, #0
 8023980:	4606      	mov	r6, r0
 8023982:	db01      	blt.n	8023988 <_malloc_r+0x1c>
 8023984:	42a9      	cmp	r1, r5
 8023986:	d904      	bls.n	8023992 <_malloc_r+0x26>
 8023988:	230c      	movs	r3, #12
 802398a:	6033      	str	r3, [r6, #0]
 802398c:	2000      	movs	r0, #0
 802398e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8023992:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8023a68 <_malloc_r+0xfc>
 8023996:	f000 f9f5 	bl	8023d84 <__malloc_lock>
 802399a:	f8d8 3000 	ldr.w	r3, [r8]
 802399e:	461c      	mov	r4, r3
 80239a0:	bb44      	cbnz	r4, 80239f4 <_malloc_r+0x88>
 80239a2:	4629      	mov	r1, r5
 80239a4:	4630      	mov	r0, r6
 80239a6:	f7ff ffbf 	bl	8023928 <sbrk_aligned>
 80239aa:	1c43      	adds	r3, r0, #1
 80239ac:	4604      	mov	r4, r0
 80239ae:	d158      	bne.n	8023a62 <_malloc_r+0xf6>
 80239b0:	f8d8 4000 	ldr.w	r4, [r8]
 80239b4:	4627      	mov	r7, r4
 80239b6:	2f00      	cmp	r7, #0
 80239b8:	d143      	bne.n	8023a42 <_malloc_r+0xd6>
 80239ba:	2c00      	cmp	r4, #0
 80239bc:	d04b      	beq.n	8023a56 <_malloc_r+0xea>
 80239be:	6823      	ldr	r3, [r4, #0]
 80239c0:	4639      	mov	r1, r7
 80239c2:	4630      	mov	r0, r6
 80239c4:	eb04 0903 	add.w	r9, r4, r3
 80239c8:	f000 fb10 	bl	8023fec <_sbrk_r>
 80239cc:	4581      	cmp	r9, r0
 80239ce:	d142      	bne.n	8023a56 <_malloc_r+0xea>
 80239d0:	6821      	ldr	r1, [r4, #0]
 80239d2:	1a6d      	subs	r5, r5, r1
 80239d4:	4629      	mov	r1, r5
 80239d6:	4630      	mov	r0, r6
 80239d8:	f7ff ffa6 	bl	8023928 <sbrk_aligned>
 80239dc:	3001      	adds	r0, #1
 80239de:	d03a      	beq.n	8023a56 <_malloc_r+0xea>
 80239e0:	6823      	ldr	r3, [r4, #0]
 80239e2:	442b      	add	r3, r5
 80239e4:	6023      	str	r3, [r4, #0]
 80239e6:	f8d8 3000 	ldr.w	r3, [r8]
 80239ea:	685a      	ldr	r2, [r3, #4]
 80239ec:	bb62      	cbnz	r2, 8023a48 <_malloc_r+0xdc>
 80239ee:	f8c8 7000 	str.w	r7, [r8]
 80239f2:	e00f      	b.n	8023a14 <_malloc_r+0xa8>
 80239f4:	6822      	ldr	r2, [r4, #0]
 80239f6:	1b52      	subs	r2, r2, r5
 80239f8:	d420      	bmi.n	8023a3c <_malloc_r+0xd0>
 80239fa:	2a0b      	cmp	r2, #11
 80239fc:	d917      	bls.n	8023a2e <_malloc_r+0xc2>
 80239fe:	1961      	adds	r1, r4, r5
 8023a00:	42a3      	cmp	r3, r4
 8023a02:	6025      	str	r5, [r4, #0]
 8023a04:	bf18      	it	ne
 8023a06:	6059      	strne	r1, [r3, #4]
 8023a08:	6863      	ldr	r3, [r4, #4]
 8023a0a:	bf08      	it	eq
 8023a0c:	f8c8 1000 	streq.w	r1, [r8]
 8023a10:	5162      	str	r2, [r4, r5]
 8023a12:	604b      	str	r3, [r1, #4]
 8023a14:	4630      	mov	r0, r6
 8023a16:	f000 f9bb 	bl	8023d90 <__malloc_unlock>
 8023a1a:	f104 000b 	add.w	r0, r4, #11
 8023a1e:	1d23      	adds	r3, r4, #4
 8023a20:	f020 0007 	bic.w	r0, r0, #7
 8023a24:	1ac2      	subs	r2, r0, r3
 8023a26:	bf1c      	itt	ne
 8023a28:	1a1b      	subne	r3, r3, r0
 8023a2a:	50a3      	strne	r3, [r4, r2]
 8023a2c:	e7af      	b.n	802398e <_malloc_r+0x22>
 8023a2e:	6862      	ldr	r2, [r4, #4]
 8023a30:	42a3      	cmp	r3, r4
 8023a32:	bf0c      	ite	eq
 8023a34:	f8c8 2000 	streq.w	r2, [r8]
 8023a38:	605a      	strne	r2, [r3, #4]
 8023a3a:	e7eb      	b.n	8023a14 <_malloc_r+0xa8>
 8023a3c:	4623      	mov	r3, r4
 8023a3e:	6864      	ldr	r4, [r4, #4]
 8023a40:	e7ae      	b.n	80239a0 <_malloc_r+0x34>
 8023a42:	463c      	mov	r4, r7
 8023a44:	687f      	ldr	r7, [r7, #4]
 8023a46:	e7b6      	b.n	80239b6 <_malloc_r+0x4a>
 8023a48:	461a      	mov	r2, r3
 8023a4a:	685b      	ldr	r3, [r3, #4]
 8023a4c:	42a3      	cmp	r3, r4
 8023a4e:	d1fb      	bne.n	8023a48 <_malloc_r+0xdc>
 8023a50:	2300      	movs	r3, #0
 8023a52:	6053      	str	r3, [r2, #4]
 8023a54:	e7de      	b.n	8023a14 <_malloc_r+0xa8>
 8023a56:	230c      	movs	r3, #12
 8023a58:	6033      	str	r3, [r6, #0]
 8023a5a:	4630      	mov	r0, r6
 8023a5c:	f000 f998 	bl	8023d90 <__malloc_unlock>
 8023a60:	e794      	b.n	802398c <_malloc_r+0x20>
 8023a62:	6005      	str	r5, [r0, #0]
 8023a64:	e7d6      	b.n	8023a14 <_malloc_r+0xa8>
 8023a66:	bf00      	nop
 8023a68:	2000223c 	.word	0x2000223c

08023a6c <_printf_common>:
 8023a6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023a70:	4616      	mov	r6, r2
 8023a72:	4698      	mov	r8, r3
 8023a74:	688a      	ldr	r2, [r1, #8]
 8023a76:	690b      	ldr	r3, [r1, #16]
 8023a78:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8023a7c:	4293      	cmp	r3, r2
 8023a7e:	bfb8      	it	lt
 8023a80:	4613      	movlt	r3, r2
 8023a82:	6033      	str	r3, [r6, #0]
 8023a84:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8023a88:	4607      	mov	r7, r0
 8023a8a:	460c      	mov	r4, r1
 8023a8c:	b10a      	cbz	r2, 8023a92 <_printf_common+0x26>
 8023a8e:	3301      	adds	r3, #1
 8023a90:	6033      	str	r3, [r6, #0]
 8023a92:	6823      	ldr	r3, [r4, #0]
 8023a94:	0699      	lsls	r1, r3, #26
 8023a96:	bf42      	ittt	mi
 8023a98:	6833      	ldrmi	r3, [r6, #0]
 8023a9a:	3302      	addmi	r3, #2
 8023a9c:	6033      	strmi	r3, [r6, #0]
 8023a9e:	6825      	ldr	r5, [r4, #0]
 8023aa0:	f015 0506 	ands.w	r5, r5, #6
 8023aa4:	d106      	bne.n	8023ab4 <_printf_common+0x48>
 8023aa6:	f104 0a19 	add.w	sl, r4, #25
 8023aaa:	68e3      	ldr	r3, [r4, #12]
 8023aac:	6832      	ldr	r2, [r6, #0]
 8023aae:	1a9b      	subs	r3, r3, r2
 8023ab0:	42ab      	cmp	r3, r5
 8023ab2:	dc26      	bgt.n	8023b02 <_printf_common+0x96>
 8023ab4:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8023ab8:	6822      	ldr	r2, [r4, #0]
 8023aba:	3b00      	subs	r3, #0
 8023abc:	bf18      	it	ne
 8023abe:	2301      	movne	r3, #1
 8023ac0:	0692      	lsls	r2, r2, #26
 8023ac2:	d42b      	bmi.n	8023b1c <_printf_common+0xb0>
 8023ac4:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8023ac8:	4641      	mov	r1, r8
 8023aca:	4638      	mov	r0, r7
 8023acc:	47c8      	blx	r9
 8023ace:	3001      	adds	r0, #1
 8023ad0:	d01e      	beq.n	8023b10 <_printf_common+0xa4>
 8023ad2:	6823      	ldr	r3, [r4, #0]
 8023ad4:	6922      	ldr	r2, [r4, #16]
 8023ad6:	f003 0306 	and.w	r3, r3, #6
 8023ada:	2b04      	cmp	r3, #4
 8023adc:	bf02      	ittt	eq
 8023ade:	68e5      	ldreq	r5, [r4, #12]
 8023ae0:	6833      	ldreq	r3, [r6, #0]
 8023ae2:	1aed      	subeq	r5, r5, r3
 8023ae4:	68a3      	ldr	r3, [r4, #8]
 8023ae6:	bf0c      	ite	eq
 8023ae8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8023aec:	2500      	movne	r5, #0
 8023aee:	4293      	cmp	r3, r2
 8023af0:	bfc4      	itt	gt
 8023af2:	1a9b      	subgt	r3, r3, r2
 8023af4:	18ed      	addgt	r5, r5, r3
 8023af6:	2600      	movs	r6, #0
 8023af8:	341a      	adds	r4, #26
 8023afa:	42b5      	cmp	r5, r6
 8023afc:	d11a      	bne.n	8023b34 <_printf_common+0xc8>
 8023afe:	2000      	movs	r0, #0
 8023b00:	e008      	b.n	8023b14 <_printf_common+0xa8>
 8023b02:	2301      	movs	r3, #1
 8023b04:	4652      	mov	r2, sl
 8023b06:	4641      	mov	r1, r8
 8023b08:	4638      	mov	r0, r7
 8023b0a:	47c8      	blx	r9
 8023b0c:	3001      	adds	r0, #1
 8023b0e:	d103      	bne.n	8023b18 <_printf_common+0xac>
 8023b10:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8023b14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023b18:	3501      	adds	r5, #1
 8023b1a:	e7c6      	b.n	8023aaa <_printf_common+0x3e>
 8023b1c:	18e1      	adds	r1, r4, r3
 8023b1e:	1c5a      	adds	r2, r3, #1
 8023b20:	2030      	movs	r0, #48	@ 0x30
 8023b22:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8023b26:	4422      	add	r2, r4
 8023b28:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8023b2c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8023b30:	3302      	adds	r3, #2
 8023b32:	e7c7      	b.n	8023ac4 <_printf_common+0x58>
 8023b34:	2301      	movs	r3, #1
 8023b36:	4622      	mov	r2, r4
 8023b38:	4641      	mov	r1, r8
 8023b3a:	4638      	mov	r0, r7
 8023b3c:	47c8      	blx	r9
 8023b3e:	3001      	adds	r0, #1
 8023b40:	d0e6      	beq.n	8023b10 <_printf_common+0xa4>
 8023b42:	3601      	adds	r6, #1
 8023b44:	e7d9      	b.n	8023afa <_printf_common+0x8e>
	...

08023b48 <_printf_i>:
 8023b48:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8023b4c:	7e0f      	ldrb	r7, [r1, #24]
 8023b4e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8023b50:	2f78      	cmp	r7, #120	@ 0x78
 8023b52:	4691      	mov	r9, r2
 8023b54:	4680      	mov	r8, r0
 8023b56:	460c      	mov	r4, r1
 8023b58:	469a      	mov	sl, r3
 8023b5a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8023b5e:	d807      	bhi.n	8023b70 <_printf_i+0x28>
 8023b60:	2f62      	cmp	r7, #98	@ 0x62
 8023b62:	d80a      	bhi.n	8023b7a <_printf_i+0x32>
 8023b64:	2f00      	cmp	r7, #0
 8023b66:	f000 80d1 	beq.w	8023d0c <_printf_i+0x1c4>
 8023b6a:	2f58      	cmp	r7, #88	@ 0x58
 8023b6c:	f000 80b8 	beq.w	8023ce0 <_printf_i+0x198>
 8023b70:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8023b74:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8023b78:	e03a      	b.n	8023bf0 <_printf_i+0xa8>
 8023b7a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8023b7e:	2b15      	cmp	r3, #21
 8023b80:	d8f6      	bhi.n	8023b70 <_printf_i+0x28>
 8023b82:	a101      	add	r1, pc, #4	@ (adr r1, 8023b88 <_printf_i+0x40>)
 8023b84:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8023b88:	08023be1 	.word	0x08023be1
 8023b8c:	08023bf5 	.word	0x08023bf5
 8023b90:	08023b71 	.word	0x08023b71
 8023b94:	08023b71 	.word	0x08023b71
 8023b98:	08023b71 	.word	0x08023b71
 8023b9c:	08023b71 	.word	0x08023b71
 8023ba0:	08023bf5 	.word	0x08023bf5
 8023ba4:	08023b71 	.word	0x08023b71
 8023ba8:	08023b71 	.word	0x08023b71
 8023bac:	08023b71 	.word	0x08023b71
 8023bb0:	08023b71 	.word	0x08023b71
 8023bb4:	08023cf3 	.word	0x08023cf3
 8023bb8:	08023c1f 	.word	0x08023c1f
 8023bbc:	08023cad 	.word	0x08023cad
 8023bc0:	08023b71 	.word	0x08023b71
 8023bc4:	08023b71 	.word	0x08023b71
 8023bc8:	08023d15 	.word	0x08023d15
 8023bcc:	08023b71 	.word	0x08023b71
 8023bd0:	08023c1f 	.word	0x08023c1f
 8023bd4:	08023b71 	.word	0x08023b71
 8023bd8:	08023b71 	.word	0x08023b71
 8023bdc:	08023cb5 	.word	0x08023cb5
 8023be0:	6833      	ldr	r3, [r6, #0]
 8023be2:	1d1a      	adds	r2, r3, #4
 8023be4:	681b      	ldr	r3, [r3, #0]
 8023be6:	6032      	str	r2, [r6, #0]
 8023be8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8023bec:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8023bf0:	2301      	movs	r3, #1
 8023bf2:	e09c      	b.n	8023d2e <_printf_i+0x1e6>
 8023bf4:	6833      	ldr	r3, [r6, #0]
 8023bf6:	6820      	ldr	r0, [r4, #0]
 8023bf8:	1d19      	adds	r1, r3, #4
 8023bfa:	6031      	str	r1, [r6, #0]
 8023bfc:	0606      	lsls	r6, r0, #24
 8023bfe:	d501      	bpl.n	8023c04 <_printf_i+0xbc>
 8023c00:	681d      	ldr	r5, [r3, #0]
 8023c02:	e003      	b.n	8023c0c <_printf_i+0xc4>
 8023c04:	0645      	lsls	r5, r0, #25
 8023c06:	d5fb      	bpl.n	8023c00 <_printf_i+0xb8>
 8023c08:	f9b3 5000 	ldrsh.w	r5, [r3]
 8023c0c:	2d00      	cmp	r5, #0
 8023c0e:	da03      	bge.n	8023c18 <_printf_i+0xd0>
 8023c10:	232d      	movs	r3, #45	@ 0x2d
 8023c12:	426d      	negs	r5, r5
 8023c14:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8023c18:	4858      	ldr	r0, [pc, #352]	@ (8023d7c <_printf_i+0x234>)
 8023c1a:	230a      	movs	r3, #10
 8023c1c:	e011      	b.n	8023c42 <_printf_i+0xfa>
 8023c1e:	6821      	ldr	r1, [r4, #0]
 8023c20:	6833      	ldr	r3, [r6, #0]
 8023c22:	0608      	lsls	r0, r1, #24
 8023c24:	f853 5b04 	ldr.w	r5, [r3], #4
 8023c28:	d402      	bmi.n	8023c30 <_printf_i+0xe8>
 8023c2a:	0649      	lsls	r1, r1, #25
 8023c2c:	bf48      	it	mi
 8023c2e:	b2ad      	uxthmi	r5, r5
 8023c30:	2f6f      	cmp	r7, #111	@ 0x6f
 8023c32:	4852      	ldr	r0, [pc, #328]	@ (8023d7c <_printf_i+0x234>)
 8023c34:	6033      	str	r3, [r6, #0]
 8023c36:	bf14      	ite	ne
 8023c38:	230a      	movne	r3, #10
 8023c3a:	2308      	moveq	r3, #8
 8023c3c:	2100      	movs	r1, #0
 8023c3e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8023c42:	6866      	ldr	r6, [r4, #4]
 8023c44:	60a6      	str	r6, [r4, #8]
 8023c46:	2e00      	cmp	r6, #0
 8023c48:	db05      	blt.n	8023c56 <_printf_i+0x10e>
 8023c4a:	6821      	ldr	r1, [r4, #0]
 8023c4c:	432e      	orrs	r6, r5
 8023c4e:	f021 0104 	bic.w	r1, r1, #4
 8023c52:	6021      	str	r1, [r4, #0]
 8023c54:	d04b      	beq.n	8023cee <_printf_i+0x1a6>
 8023c56:	4616      	mov	r6, r2
 8023c58:	fbb5 f1f3 	udiv	r1, r5, r3
 8023c5c:	fb03 5711 	mls	r7, r3, r1, r5
 8023c60:	5dc7      	ldrb	r7, [r0, r7]
 8023c62:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8023c66:	462f      	mov	r7, r5
 8023c68:	42bb      	cmp	r3, r7
 8023c6a:	460d      	mov	r5, r1
 8023c6c:	d9f4      	bls.n	8023c58 <_printf_i+0x110>
 8023c6e:	2b08      	cmp	r3, #8
 8023c70:	d10b      	bne.n	8023c8a <_printf_i+0x142>
 8023c72:	6823      	ldr	r3, [r4, #0]
 8023c74:	07df      	lsls	r7, r3, #31
 8023c76:	d508      	bpl.n	8023c8a <_printf_i+0x142>
 8023c78:	6923      	ldr	r3, [r4, #16]
 8023c7a:	6861      	ldr	r1, [r4, #4]
 8023c7c:	4299      	cmp	r1, r3
 8023c7e:	bfde      	ittt	le
 8023c80:	2330      	movle	r3, #48	@ 0x30
 8023c82:	f806 3c01 	strble.w	r3, [r6, #-1]
 8023c86:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8023c8a:	1b92      	subs	r2, r2, r6
 8023c8c:	6122      	str	r2, [r4, #16]
 8023c8e:	f8cd a000 	str.w	sl, [sp]
 8023c92:	464b      	mov	r3, r9
 8023c94:	aa03      	add	r2, sp, #12
 8023c96:	4621      	mov	r1, r4
 8023c98:	4640      	mov	r0, r8
 8023c9a:	f7ff fee7 	bl	8023a6c <_printf_common>
 8023c9e:	3001      	adds	r0, #1
 8023ca0:	d14a      	bne.n	8023d38 <_printf_i+0x1f0>
 8023ca2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8023ca6:	b004      	add	sp, #16
 8023ca8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023cac:	6823      	ldr	r3, [r4, #0]
 8023cae:	f043 0320 	orr.w	r3, r3, #32
 8023cb2:	6023      	str	r3, [r4, #0]
 8023cb4:	4832      	ldr	r0, [pc, #200]	@ (8023d80 <_printf_i+0x238>)
 8023cb6:	2778      	movs	r7, #120	@ 0x78
 8023cb8:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8023cbc:	6823      	ldr	r3, [r4, #0]
 8023cbe:	6831      	ldr	r1, [r6, #0]
 8023cc0:	061f      	lsls	r7, r3, #24
 8023cc2:	f851 5b04 	ldr.w	r5, [r1], #4
 8023cc6:	d402      	bmi.n	8023cce <_printf_i+0x186>
 8023cc8:	065f      	lsls	r7, r3, #25
 8023cca:	bf48      	it	mi
 8023ccc:	b2ad      	uxthmi	r5, r5
 8023cce:	6031      	str	r1, [r6, #0]
 8023cd0:	07d9      	lsls	r1, r3, #31
 8023cd2:	bf44      	itt	mi
 8023cd4:	f043 0320 	orrmi.w	r3, r3, #32
 8023cd8:	6023      	strmi	r3, [r4, #0]
 8023cda:	b11d      	cbz	r5, 8023ce4 <_printf_i+0x19c>
 8023cdc:	2310      	movs	r3, #16
 8023cde:	e7ad      	b.n	8023c3c <_printf_i+0xf4>
 8023ce0:	4826      	ldr	r0, [pc, #152]	@ (8023d7c <_printf_i+0x234>)
 8023ce2:	e7e9      	b.n	8023cb8 <_printf_i+0x170>
 8023ce4:	6823      	ldr	r3, [r4, #0]
 8023ce6:	f023 0320 	bic.w	r3, r3, #32
 8023cea:	6023      	str	r3, [r4, #0]
 8023cec:	e7f6      	b.n	8023cdc <_printf_i+0x194>
 8023cee:	4616      	mov	r6, r2
 8023cf0:	e7bd      	b.n	8023c6e <_printf_i+0x126>
 8023cf2:	6833      	ldr	r3, [r6, #0]
 8023cf4:	6825      	ldr	r5, [r4, #0]
 8023cf6:	6961      	ldr	r1, [r4, #20]
 8023cf8:	1d18      	adds	r0, r3, #4
 8023cfa:	6030      	str	r0, [r6, #0]
 8023cfc:	062e      	lsls	r6, r5, #24
 8023cfe:	681b      	ldr	r3, [r3, #0]
 8023d00:	d501      	bpl.n	8023d06 <_printf_i+0x1be>
 8023d02:	6019      	str	r1, [r3, #0]
 8023d04:	e002      	b.n	8023d0c <_printf_i+0x1c4>
 8023d06:	0668      	lsls	r0, r5, #25
 8023d08:	d5fb      	bpl.n	8023d02 <_printf_i+0x1ba>
 8023d0a:	8019      	strh	r1, [r3, #0]
 8023d0c:	2300      	movs	r3, #0
 8023d0e:	6123      	str	r3, [r4, #16]
 8023d10:	4616      	mov	r6, r2
 8023d12:	e7bc      	b.n	8023c8e <_printf_i+0x146>
 8023d14:	6833      	ldr	r3, [r6, #0]
 8023d16:	1d1a      	adds	r2, r3, #4
 8023d18:	6032      	str	r2, [r6, #0]
 8023d1a:	681e      	ldr	r6, [r3, #0]
 8023d1c:	6862      	ldr	r2, [r4, #4]
 8023d1e:	2100      	movs	r1, #0
 8023d20:	4630      	mov	r0, r6
 8023d22:	f7ec f98d 	bl	8010040 <memchr>
 8023d26:	b108      	cbz	r0, 8023d2c <_printf_i+0x1e4>
 8023d28:	1b80      	subs	r0, r0, r6
 8023d2a:	6060      	str	r0, [r4, #4]
 8023d2c:	6863      	ldr	r3, [r4, #4]
 8023d2e:	6123      	str	r3, [r4, #16]
 8023d30:	2300      	movs	r3, #0
 8023d32:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8023d36:	e7aa      	b.n	8023c8e <_printf_i+0x146>
 8023d38:	6923      	ldr	r3, [r4, #16]
 8023d3a:	4632      	mov	r2, r6
 8023d3c:	4649      	mov	r1, r9
 8023d3e:	4640      	mov	r0, r8
 8023d40:	47d0      	blx	sl
 8023d42:	3001      	adds	r0, #1
 8023d44:	d0ad      	beq.n	8023ca2 <_printf_i+0x15a>
 8023d46:	6823      	ldr	r3, [r4, #0]
 8023d48:	079b      	lsls	r3, r3, #30
 8023d4a:	d413      	bmi.n	8023d74 <_printf_i+0x22c>
 8023d4c:	68e0      	ldr	r0, [r4, #12]
 8023d4e:	9b03      	ldr	r3, [sp, #12]
 8023d50:	4298      	cmp	r0, r3
 8023d52:	bfb8      	it	lt
 8023d54:	4618      	movlt	r0, r3
 8023d56:	e7a6      	b.n	8023ca6 <_printf_i+0x15e>
 8023d58:	2301      	movs	r3, #1
 8023d5a:	4632      	mov	r2, r6
 8023d5c:	4649      	mov	r1, r9
 8023d5e:	4640      	mov	r0, r8
 8023d60:	47d0      	blx	sl
 8023d62:	3001      	adds	r0, #1
 8023d64:	d09d      	beq.n	8023ca2 <_printf_i+0x15a>
 8023d66:	3501      	adds	r5, #1
 8023d68:	68e3      	ldr	r3, [r4, #12]
 8023d6a:	9903      	ldr	r1, [sp, #12]
 8023d6c:	1a5b      	subs	r3, r3, r1
 8023d6e:	42ab      	cmp	r3, r5
 8023d70:	dcf2      	bgt.n	8023d58 <_printf_i+0x210>
 8023d72:	e7eb      	b.n	8023d4c <_printf_i+0x204>
 8023d74:	2500      	movs	r5, #0
 8023d76:	f104 0619 	add.w	r6, r4, #25
 8023d7a:	e7f5      	b.n	8023d68 <_printf_i+0x220>
 8023d7c:	080262a4 	.word	0x080262a4
 8023d80:	080262b5 	.word	0x080262b5

08023d84 <__malloc_lock>:
 8023d84:	4801      	ldr	r0, [pc, #4]	@ (8023d8c <__malloc_lock+0x8>)
 8023d86:	f000 b96c 	b.w	8024062 <__retarget_lock_acquire_recursive>
 8023d8a:	bf00      	nop
 8023d8c:	2000237c 	.word	0x2000237c

08023d90 <__malloc_unlock>:
 8023d90:	4801      	ldr	r0, [pc, #4]	@ (8023d98 <__malloc_unlock+0x8>)
 8023d92:	f000 b967 	b.w	8024064 <__retarget_lock_release_recursive>
 8023d96:	bf00      	nop
 8023d98:	2000237c 	.word	0x2000237c

08023d9c <std>:
 8023d9c:	2300      	movs	r3, #0
 8023d9e:	b510      	push	{r4, lr}
 8023da0:	4604      	mov	r4, r0
 8023da2:	e9c0 3300 	strd	r3, r3, [r0]
 8023da6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8023daa:	6083      	str	r3, [r0, #8]
 8023dac:	8181      	strh	r1, [r0, #12]
 8023dae:	6643      	str	r3, [r0, #100]	@ 0x64
 8023db0:	81c2      	strh	r2, [r0, #14]
 8023db2:	6183      	str	r3, [r0, #24]
 8023db4:	4619      	mov	r1, r3
 8023db6:	2208      	movs	r2, #8
 8023db8:	305c      	adds	r0, #92	@ 0x5c
 8023dba:	f000 f90f 	bl	8023fdc <memset>
 8023dbe:	4b0d      	ldr	r3, [pc, #52]	@ (8023df4 <std+0x58>)
 8023dc0:	6263      	str	r3, [r4, #36]	@ 0x24
 8023dc2:	4b0d      	ldr	r3, [pc, #52]	@ (8023df8 <std+0x5c>)
 8023dc4:	62a3      	str	r3, [r4, #40]	@ 0x28
 8023dc6:	4b0d      	ldr	r3, [pc, #52]	@ (8023dfc <std+0x60>)
 8023dc8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8023dca:	4b0d      	ldr	r3, [pc, #52]	@ (8023e00 <std+0x64>)
 8023dcc:	6323      	str	r3, [r4, #48]	@ 0x30
 8023dce:	4b0d      	ldr	r3, [pc, #52]	@ (8023e04 <std+0x68>)
 8023dd0:	6224      	str	r4, [r4, #32]
 8023dd2:	429c      	cmp	r4, r3
 8023dd4:	d006      	beq.n	8023de4 <std+0x48>
 8023dd6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8023dda:	4294      	cmp	r4, r2
 8023ddc:	d002      	beq.n	8023de4 <std+0x48>
 8023dde:	33d0      	adds	r3, #208	@ 0xd0
 8023de0:	429c      	cmp	r4, r3
 8023de2:	d105      	bne.n	8023df0 <std+0x54>
 8023de4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8023de8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023dec:	f000 b938 	b.w	8024060 <__retarget_lock_init_recursive>
 8023df0:	bd10      	pop	{r4, pc}
 8023df2:	bf00      	nop
 8023df4:	08025621 	.word	0x08025621
 8023df8:	08025643 	.word	0x08025643
 8023dfc:	0802567b 	.word	0x0802567b
 8023e00:	0802569f 	.word	0x0802569f
 8023e04:	20002240 	.word	0x20002240

08023e08 <stdio_exit_handler>:
 8023e08:	4a02      	ldr	r2, [pc, #8]	@ (8023e14 <stdio_exit_handler+0xc>)
 8023e0a:	4903      	ldr	r1, [pc, #12]	@ (8023e18 <stdio_exit_handler+0x10>)
 8023e0c:	4803      	ldr	r0, [pc, #12]	@ (8023e1c <stdio_exit_handler+0x14>)
 8023e0e:	f000 b869 	b.w	8023ee4 <_fwalk_sglue>
 8023e12:	bf00      	nop
 8023e14:	20001db8 	.word	0x20001db8
 8023e18:	08024edd 	.word	0x08024edd
 8023e1c:	20001dc8 	.word	0x20001dc8

08023e20 <cleanup_stdio>:
 8023e20:	6841      	ldr	r1, [r0, #4]
 8023e22:	4b0c      	ldr	r3, [pc, #48]	@ (8023e54 <cleanup_stdio+0x34>)
 8023e24:	4299      	cmp	r1, r3
 8023e26:	b510      	push	{r4, lr}
 8023e28:	4604      	mov	r4, r0
 8023e2a:	d001      	beq.n	8023e30 <cleanup_stdio+0x10>
 8023e2c:	f001 f856 	bl	8024edc <_fflush_r>
 8023e30:	68a1      	ldr	r1, [r4, #8]
 8023e32:	4b09      	ldr	r3, [pc, #36]	@ (8023e58 <cleanup_stdio+0x38>)
 8023e34:	4299      	cmp	r1, r3
 8023e36:	d002      	beq.n	8023e3e <cleanup_stdio+0x1e>
 8023e38:	4620      	mov	r0, r4
 8023e3a:	f001 f84f 	bl	8024edc <_fflush_r>
 8023e3e:	68e1      	ldr	r1, [r4, #12]
 8023e40:	4b06      	ldr	r3, [pc, #24]	@ (8023e5c <cleanup_stdio+0x3c>)
 8023e42:	4299      	cmp	r1, r3
 8023e44:	d004      	beq.n	8023e50 <cleanup_stdio+0x30>
 8023e46:	4620      	mov	r0, r4
 8023e48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023e4c:	f001 b846 	b.w	8024edc <_fflush_r>
 8023e50:	bd10      	pop	{r4, pc}
 8023e52:	bf00      	nop
 8023e54:	20002240 	.word	0x20002240
 8023e58:	200022a8 	.word	0x200022a8
 8023e5c:	20002310 	.word	0x20002310

08023e60 <global_stdio_init.part.0>:
 8023e60:	b510      	push	{r4, lr}
 8023e62:	4b0b      	ldr	r3, [pc, #44]	@ (8023e90 <global_stdio_init.part.0+0x30>)
 8023e64:	4c0b      	ldr	r4, [pc, #44]	@ (8023e94 <global_stdio_init.part.0+0x34>)
 8023e66:	4a0c      	ldr	r2, [pc, #48]	@ (8023e98 <global_stdio_init.part.0+0x38>)
 8023e68:	601a      	str	r2, [r3, #0]
 8023e6a:	4620      	mov	r0, r4
 8023e6c:	2200      	movs	r2, #0
 8023e6e:	2104      	movs	r1, #4
 8023e70:	f7ff ff94 	bl	8023d9c <std>
 8023e74:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8023e78:	2201      	movs	r2, #1
 8023e7a:	2109      	movs	r1, #9
 8023e7c:	f7ff ff8e 	bl	8023d9c <std>
 8023e80:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8023e84:	2202      	movs	r2, #2
 8023e86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023e8a:	2112      	movs	r1, #18
 8023e8c:	f7ff bf86 	b.w	8023d9c <std>
 8023e90:	20002378 	.word	0x20002378
 8023e94:	20002240 	.word	0x20002240
 8023e98:	08023e09 	.word	0x08023e09

08023e9c <__sfp_lock_acquire>:
 8023e9c:	4801      	ldr	r0, [pc, #4]	@ (8023ea4 <__sfp_lock_acquire+0x8>)
 8023e9e:	f000 b8e0 	b.w	8024062 <__retarget_lock_acquire_recursive>
 8023ea2:	bf00      	nop
 8023ea4:	2000237d 	.word	0x2000237d

08023ea8 <__sfp_lock_release>:
 8023ea8:	4801      	ldr	r0, [pc, #4]	@ (8023eb0 <__sfp_lock_release+0x8>)
 8023eaa:	f000 b8db 	b.w	8024064 <__retarget_lock_release_recursive>
 8023eae:	bf00      	nop
 8023eb0:	2000237d 	.word	0x2000237d

08023eb4 <__sinit>:
 8023eb4:	b510      	push	{r4, lr}
 8023eb6:	4604      	mov	r4, r0
 8023eb8:	f7ff fff0 	bl	8023e9c <__sfp_lock_acquire>
 8023ebc:	6a23      	ldr	r3, [r4, #32]
 8023ebe:	b11b      	cbz	r3, 8023ec8 <__sinit+0x14>
 8023ec0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023ec4:	f7ff bff0 	b.w	8023ea8 <__sfp_lock_release>
 8023ec8:	4b04      	ldr	r3, [pc, #16]	@ (8023edc <__sinit+0x28>)
 8023eca:	6223      	str	r3, [r4, #32]
 8023ecc:	4b04      	ldr	r3, [pc, #16]	@ (8023ee0 <__sinit+0x2c>)
 8023ece:	681b      	ldr	r3, [r3, #0]
 8023ed0:	2b00      	cmp	r3, #0
 8023ed2:	d1f5      	bne.n	8023ec0 <__sinit+0xc>
 8023ed4:	f7ff ffc4 	bl	8023e60 <global_stdio_init.part.0>
 8023ed8:	e7f2      	b.n	8023ec0 <__sinit+0xc>
 8023eda:	bf00      	nop
 8023edc:	08023e21 	.word	0x08023e21
 8023ee0:	20002378 	.word	0x20002378

08023ee4 <_fwalk_sglue>:
 8023ee4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8023ee8:	4607      	mov	r7, r0
 8023eea:	4688      	mov	r8, r1
 8023eec:	4614      	mov	r4, r2
 8023eee:	2600      	movs	r6, #0
 8023ef0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8023ef4:	f1b9 0901 	subs.w	r9, r9, #1
 8023ef8:	d505      	bpl.n	8023f06 <_fwalk_sglue+0x22>
 8023efa:	6824      	ldr	r4, [r4, #0]
 8023efc:	2c00      	cmp	r4, #0
 8023efe:	d1f7      	bne.n	8023ef0 <_fwalk_sglue+0xc>
 8023f00:	4630      	mov	r0, r6
 8023f02:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8023f06:	89ab      	ldrh	r3, [r5, #12]
 8023f08:	2b01      	cmp	r3, #1
 8023f0a:	d907      	bls.n	8023f1c <_fwalk_sglue+0x38>
 8023f0c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8023f10:	3301      	adds	r3, #1
 8023f12:	d003      	beq.n	8023f1c <_fwalk_sglue+0x38>
 8023f14:	4629      	mov	r1, r5
 8023f16:	4638      	mov	r0, r7
 8023f18:	47c0      	blx	r8
 8023f1a:	4306      	orrs	r6, r0
 8023f1c:	3568      	adds	r5, #104	@ 0x68
 8023f1e:	e7e9      	b.n	8023ef4 <_fwalk_sglue+0x10>

08023f20 <_puts_r>:
 8023f20:	6a03      	ldr	r3, [r0, #32]
 8023f22:	b570      	push	{r4, r5, r6, lr}
 8023f24:	6884      	ldr	r4, [r0, #8]
 8023f26:	4605      	mov	r5, r0
 8023f28:	460e      	mov	r6, r1
 8023f2a:	b90b      	cbnz	r3, 8023f30 <_puts_r+0x10>
 8023f2c:	f7ff ffc2 	bl	8023eb4 <__sinit>
 8023f30:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8023f32:	07db      	lsls	r3, r3, #31
 8023f34:	d405      	bmi.n	8023f42 <_puts_r+0x22>
 8023f36:	89a3      	ldrh	r3, [r4, #12]
 8023f38:	0598      	lsls	r0, r3, #22
 8023f3a:	d402      	bmi.n	8023f42 <_puts_r+0x22>
 8023f3c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8023f3e:	f000 f890 	bl	8024062 <__retarget_lock_acquire_recursive>
 8023f42:	89a3      	ldrh	r3, [r4, #12]
 8023f44:	0719      	lsls	r1, r3, #28
 8023f46:	d502      	bpl.n	8023f4e <_puts_r+0x2e>
 8023f48:	6923      	ldr	r3, [r4, #16]
 8023f4a:	2b00      	cmp	r3, #0
 8023f4c:	d135      	bne.n	8023fba <_puts_r+0x9a>
 8023f4e:	4621      	mov	r1, r4
 8023f50:	4628      	mov	r0, r5
 8023f52:	f001 fbe7 	bl	8025724 <__swsetup_r>
 8023f56:	b380      	cbz	r0, 8023fba <_puts_r+0x9a>
 8023f58:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
 8023f5c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8023f5e:	07da      	lsls	r2, r3, #31
 8023f60:	d405      	bmi.n	8023f6e <_puts_r+0x4e>
 8023f62:	89a3      	ldrh	r3, [r4, #12]
 8023f64:	059b      	lsls	r3, r3, #22
 8023f66:	d402      	bmi.n	8023f6e <_puts_r+0x4e>
 8023f68:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8023f6a:	f000 f87b 	bl	8024064 <__retarget_lock_release_recursive>
 8023f6e:	4628      	mov	r0, r5
 8023f70:	bd70      	pop	{r4, r5, r6, pc}
 8023f72:	2b00      	cmp	r3, #0
 8023f74:	da04      	bge.n	8023f80 <_puts_r+0x60>
 8023f76:	69a2      	ldr	r2, [r4, #24]
 8023f78:	429a      	cmp	r2, r3
 8023f7a:	dc17      	bgt.n	8023fac <_puts_r+0x8c>
 8023f7c:	290a      	cmp	r1, #10
 8023f7e:	d015      	beq.n	8023fac <_puts_r+0x8c>
 8023f80:	6823      	ldr	r3, [r4, #0]
 8023f82:	1c5a      	adds	r2, r3, #1
 8023f84:	6022      	str	r2, [r4, #0]
 8023f86:	7019      	strb	r1, [r3, #0]
 8023f88:	68a3      	ldr	r3, [r4, #8]
 8023f8a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8023f8e:	3b01      	subs	r3, #1
 8023f90:	60a3      	str	r3, [r4, #8]
 8023f92:	2900      	cmp	r1, #0
 8023f94:	d1ed      	bne.n	8023f72 <_puts_r+0x52>
 8023f96:	2b00      	cmp	r3, #0
 8023f98:	da11      	bge.n	8023fbe <_puts_r+0x9e>
 8023f9a:	4622      	mov	r2, r4
 8023f9c:	210a      	movs	r1, #10
 8023f9e:	4628      	mov	r0, r5
 8023fa0:	f001 fb81 	bl	80256a6 <__swbuf_r>
 8023fa4:	3001      	adds	r0, #1
 8023fa6:	d0d7      	beq.n	8023f58 <_puts_r+0x38>
 8023fa8:	250a      	movs	r5, #10
 8023faa:	e7d7      	b.n	8023f5c <_puts_r+0x3c>
 8023fac:	4622      	mov	r2, r4
 8023fae:	4628      	mov	r0, r5
 8023fb0:	f001 fb79 	bl	80256a6 <__swbuf_r>
 8023fb4:	3001      	adds	r0, #1
 8023fb6:	d1e7      	bne.n	8023f88 <_puts_r+0x68>
 8023fb8:	e7ce      	b.n	8023f58 <_puts_r+0x38>
 8023fba:	3e01      	subs	r6, #1
 8023fbc:	e7e4      	b.n	8023f88 <_puts_r+0x68>
 8023fbe:	6823      	ldr	r3, [r4, #0]
 8023fc0:	1c5a      	adds	r2, r3, #1
 8023fc2:	6022      	str	r2, [r4, #0]
 8023fc4:	220a      	movs	r2, #10
 8023fc6:	701a      	strb	r2, [r3, #0]
 8023fc8:	e7ee      	b.n	8023fa8 <_puts_r+0x88>
	...

08023fcc <puts>:
 8023fcc:	4b02      	ldr	r3, [pc, #8]	@ (8023fd8 <puts+0xc>)
 8023fce:	4601      	mov	r1, r0
 8023fd0:	6818      	ldr	r0, [r3, #0]
 8023fd2:	f7ff bfa5 	b.w	8023f20 <_puts_r>
 8023fd6:	bf00      	nop
 8023fd8:	20001dc4 	.word	0x20001dc4

08023fdc <memset>:
 8023fdc:	4402      	add	r2, r0
 8023fde:	4603      	mov	r3, r0
 8023fe0:	4293      	cmp	r3, r2
 8023fe2:	d100      	bne.n	8023fe6 <memset+0xa>
 8023fe4:	4770      	bx	lr
 8023fe6:	f803 1b01 	strb.w	r1, [r3], #1
 8023fea:	e7f9      	b.n	8023fe0 <memset+0x4>

08023fec <_sbrk_r>:
 8023fec:	b538      	push	{r3, r4, r5, lr}
 8023fee:	4d06      	ldr	r5, [pc, #24]	@ (8024008 <_sbrk_r+0x1c>)
 8023ff0:	2300      	movs	r3, #0
 8023ff2:	4604      	mov	r4, r0
 8023ff4:	4608      	mov	r0, r1
 8023ff6:	602b      	str	r3, [r5, #0]
 8023ff8:	f7ed f858 	bl	80110ac <_sbrk>
 8023ffc:	1c43      	adds	r3, r0, #1
 8023ffe:	d102      	bne.n	8024006 <_sbrk_r+0x1a>
 8024000:	682b      	ldr	r3, [r5, #0]
 8024002:	b103      	cbz	r3, 8024006 <_sbrk_r+0x1a>
 8024004:	6023      	str	r3, [r4, #0]
 8024006:	bd38      	pop	{r3, r4, r5, pc}
 8024008:	20002380 	.word	0x20002380

0802400c <__errno>:
 802400c:	4b01      	ldr	r3, [pc, #4]	@ (8024014 <__errno+0x8>)
 802400e:	6818      	ldr	r0, [r3, #0]
 8024010:	4770      	bx	lr
 8024012:	bf00      	nop
 8024014:	20001dc4 	.word	0x20001dc4

08024018 <__libc_init_array>:
 8024018:	b570      	push	{r4, r5, r6, lr}
 802401a:	4d0d      	ldr	r5, [pc, #52]	@ (8024050 <__libc_init_array+0x38>)
 802401c:	4c0d      	ldr	r4, [pc, #52]	@ (8024054 <__libc_init_array+0x3c>)
 802401e:	1b64      	subs	r4, r4, r5
 8024020:	10a4      	asrs	r4, r4, #2
 8024022:	2600      	movs	r6, #0
 8024024:	42a6      	cmp	r6, r4
 8024026:	d109      	bne.n	802403c <__libc_init_array+0x24>
 8024028:	4d0b      	ldr	r5, [pc, #44]	@ (8024058 <__libc_init_array+0x40>)
 802402a:	4c0c      	ldr	r4, [pc, #48]	@ (802405c <__libc_init_array+0x44>)
 802402c:	f001 fec4 	bl	8025db8 <_init>
 8024030:	1b64      	subs	r4, r4, r5
 8024032:	10a4      	asrs	r4, r4, #2
 8024034:	2600      	movs	r6, #0
 8024036:	42a6      	cmp	r6, r4
 8024038:	d105      	bne.n	8024046 <__libc_init_array+0x2e>
 802403a:	bd70      	pop	{r4, r5, r6, pc}
 802403c:	f855 3b04 	ldr.w	r3, [r5], #4
 8024040:	4798      	blx	r3
 8024042:	3601      	adds	r6, #1
 8024044:	e7ee      	b.n	8024024 <__libc_init_array+0xc>
 8024046:	f855 3b04 	ldr.w	r3, [r5], #4
 802404a:	4798      	blx	r3
 802404c:	3601      	adds	r6, #1
 802404e:	e7f2      	b.n	8024036 <__libc_init_array+0x1e>
 8024050:	08076c14 	.word	0x08076c14
 8024054:	08076c14 	.word	0x08076c14
 8024058:	08076c14 	.word	0x08076c14
 802405c:	08076c18 	.word	0x08076c18

08024060 <__retarget_lock_init_recursive>:
 8024060:	4770      	bx	lr

08024062 <__retarget_lock_acquire_recursive>:
 8024062:	4770      	bx	lr

08024064 <__retarget_lock_release_recursive>:
 8024064:	4770      	bx	lr
	...

08024068 <_localeconv_r>:
 8024068:	4800      	ldr	r0, [pc, #0]	@ (802406c <_localeconv_r+0x4>)
 802406a:	4770      	bx	lr
 802406c:	20001f04 	.word	0x20001f04

08024070 <memcpy>:
 8024070:	440a      	add	r2, r1
 8024072:	4291      	cmp	r1, r2
 8024074:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8024078:	d100      	bne.n	802407c <memcpy+0xc>
 802407a:	4770      	bx	lr
 802407c:	b510      	push	{r4, lr}
 802407e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8024082:	f803 4f01 	strb.w	r4, [r3, #1]!
 8024086:	4291      	cmp	r1, r2
 8024088:	d1f9      	bne.n	802407e <memcpy+0xe>
 802408a:	bd10      	pop	{r4, pc}

0802408c <quorem>:
 802408c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024090:	6903      	ldr	r3, [r0, #16]
 8024092:	690c      	ldr	r4, [r1, #16]
 8024094:	42a3      	cmp	r3, r4
 8024096:	4607      	mov	r7, r0
 8024098:	db7e      	blt.n	8024198 <quorem+0x10c>
 802409a:	3c01      	subs	r4, #1
 802409c:	f101 0814 	add.w	r8, r1, #20
 80240a0:	00a3      	lsls	r3, r4, #2
 80240a2:	f100 0514 	add.w	r5, r0, #20
 80240a6:	9300      	str	r3, [sp, #0]
 80240a8:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80240ac:	9301      	str	r3, [sp, #4]
 80240ae:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80240b2:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80240b6:	3301      	adds	r3, #1
 80240b8:	429a      	cmp	r2, r3
 80240ba:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80240be:	fbb2 f6f3 	udiv	r6, r2, r3
 80240c2:	d32e      	bcc.n	8024122 <quorem+0x96>
 80240c4:	f04f 0a00 	mov.w	sl, #0
 80240c8:	46c4      	mov	ip, r8
 80240ca:	46ae      	mov	lr, r5
 80240cc:	46d3      	mov	fp, sl
 80240ce:	f85c 3b04 	ldr.w	r3, [ip], #4
 80240d2:	b298      	uxth	r0, r3
 80240d4:	fb06 a000 	mla	r0, r6, r0, sl
 80240d8:	0c02      	lsrs	r2, r0, #16
 80240da:	0c1b      	lsrs	r3, r3, #16
 80240dc:	fb06 2303 	mla	r3, r6, r3, r2
 80240e0:	f8de 2000 	ldr.w	r2, [lr]
 80240e4:	b280      	uxth	r0, r0
 80240e6:	b292      	uxth	r2, r2
 80240e8:	1a12      	subs	r2, r2, r0
 80240ea:	445a      	add	r2, fp
 80240ec:	f8de 0000 	ldr.w	r0, [lr]
 80240f0:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80240f4:	b29b      	uxth	r3, r3
 80240f6:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80240fa:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 80240fe:	b292      	uxth	r2, r2
 8024100:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8024104:	45e1      	cmp	r9, ip
 8024106:	f84e 2b04 	str.w	r2, [lr], #4
 802410a:	ea4f 4b23 	mov.w	fp, r3, asr #16
 802410e:	d2de      	bcs.n	80240ce <quorem+0x42>
 8024110:	9b00      	ldr	r3, [sp, #0]
 8024112:	58eb      	ldr	r3, [r5, r3]
 8024114:	b92b      	cbnz	r3, 8024122 <quorem+0x96>
 8024116:	9b01      	ldr	r3, [sp, #4]
 8024118:	3b04      	subs	r3, #4
 802411a:	429d      	cmp	r5, r3
 802411c:	461a      	mov	r2, r3
 802411e:	d32f      	bcc.n	8024180 <quorem+0xf4>
 8024120:	613c      	str	r4, [r7, #16]
 8024122:	4638      	mov	r0, r7
 8024124:	f001 f974 	bl	8025410 <__mcmp>
 8024128:	2800      	cmp	r0, #0
 802412a:	db25      	blt.n	8024178 <quorem+0xec>
 802412c:	4629      	mov	r1, r5
 802412e:	2000      	movs	r0, #0
 8024130:	f858 2b04 	ldr.w	r2, [r8], #4
 8024134:	f8d1 c000 	ldr.w	ip, [r1]
 8024138:	fa1f fe82 	uxth.w	lr, r2
 802413c:	fa1f f38c 	uxth.w	r3, ip
 8024140:	eba3 030e 	sub.w	r3, r3, lr
 8024144:	4403      	add	r3, r0
 8024146:	0c12      	lsrs	r2, r2, #16
 8024148:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 802414c:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8024150:	b29b      	uxth	r3, r3
 8024152:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8024156:	45c1      	cmp	r9, r8
 8024158:	f841 3b04 	str.w	r3, [r1], #4
 802415c:	ea4f 4022 	mov.w	r0, r2, asr #16
 8024160:	d2e6      	bcs.n	8024130 <quorem+0xa4>
 8024162:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8024166:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 802416a:	b922      	cbnz	r2, 8024176 <quorem+0xea>
 802416c:	3b04      	subs	r3, #4
 802416e:	429d      	cmp	r5, r3
 8024170:	461a      	mov	r2, r3
 8024172:	d30b      	bcc.n	802418c <quorem+0x100>
 8024174:	613c      	str	r4, [r7, #16]
 8024176:	3601      	adds	r6, #1
 8024178:	4630      	mov	r0, r6
 802417a:	b003      	add	sp, #12
 802417c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024180:	6812      	ldr	r2, [r2, #0]
 8024182:	3b04      	subs	r3, #4
 8024184:	2a00      	cmp	r2, #0
 8024186:	d1cb      	bne.n	8024120 <quorem+0x94>
 8024188:	3c01      	subs	r4, #1
 802418a:	e7c6      	b.n	802411a <quorem+0x8e>
 802418c:	6812      	ldr	r2, [r2, #0]
 802418e:	3b04      	subs	r3, #4
 8024190:	2a00      	cmp	r2, #0
 8024192:	d1ef      	bne.n	8024174 <quorem+0xe8>
 8024194:	3c01      	subs	r4, #1
 8024196:	e7ea      	b.n	802416e <quorem+0xe2>
 8024198:	2000      	movs	r0, #0
 802419a:	e7ee      	b.n	802417a <quorem+0xee>
 802419c:	0000      	movs	r0, r0
	...

080241a0 <_dtoa_r>:
 80241a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80241a4:	69c7      	ldr	r7, [r0, #28]
 80241a6:	b097      	sub	sp, #92	@ 0x5c
 80241a8:	ed8d 0b04 	vstr	d0, [sp, #16]
 80241ac:	ec55 4b10 	vmov	r4, r5, d0
 80241b0:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 80241b2:	9107      	str	r1, [sp, #28]
 80241b4:	4681      	mov	r9, r0
 80241b6:	920c      	str	r2, [sp, #48]	@ 0x30
 80241b8:	9311      	str	r3, [sp, #68]	@ 0x44
 80241ba:	b97f      	cbnz	r7, 80241dc <_dtoa_r+0x3c>
 80241bc:	2010      	movs	r0, #16
 80241be:	f7ee fbb3 	bl	8012928 <__wrap_malloc>
 80241c2:	4602      	mov	r2, r0
 80241c4:	f8c9 001c 	str.w	r0, [r9, #28]
 80241c8:	b920      	cbnz	r0, 80241d4 <_dtoa_r+0x34>
 80241ca:	4ba9      	ldr	r3, [pc, #676]	@ (8024470 <_dtoa_r+0x2d0>)
 80241cc:	21ef      	movs	r1, #239	@ 0xef
 80241ce:	48a9      	ldr	r0, [pc, #676]	@ (8024474 <_dtoa_r+0x2d4>)
 80241d0:	f001 fbc8 	bl	8025964 <__assert_func>
 80241d4:	e9c0 7701 	strd	r7, r7, [r0, #4]
 80241d8:	6007      	str	r7, [r0, #0]
 80241da:	60c7      	str	r7, [r0, #12]
 80241dc:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80241e0:	6819      	ldr	r1, [r3, #0]
 80241e2:	b159      	cbz	r1, 80241fc <_dtoa_r+0x5c>
 80241e4:	685a      	ldr	r2, [r3, #4]
 80241e6:	604a      	str	r2, [r1, #4]
 80241e8:	2301      	movs	r3, #1
 80241ea:	4093      	lsls	r3, r2
 80241ec:	608b      	str	r3, [r1, #8]
 80241ee:	4648      	mov	r0, r9
 80241f0:	f000 fedc 	bl	8024fac <_Bfree>
 80241f4:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80241f8:	2200      	movs	r2, #0
 80241fa:	601a      	str	r2, [r3, #0]
 80241fc:	1e2b      	subs	r3, r5, #0
 80241fe:	bfb9      	ittee	lt
 8024200:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8024204:	9305      	strlt	r3, [sp, #20]
 8024206:	2300      	movge	r3, #0
 8024208:	6033      	strge	r3, [r6, #0]
 802420a:	9f05      	ldr	r7, [sp, #20]
 802420c:	4b9a      	ldr	r3, [pc, #616]	@ (8024478 <_dtoa_r+0x2d8>)
 802420e:	bfbc      	itt	lt
 8024210:	2201      	movlt	r2, #1
 8024212:	6032      	strlt	r2, [r6, #0]
 8024214:	43bb      	bics	r3, r7
 8024216:	d112      	bne.n	802423e <_dtoa_r+0x9e>
 8024218:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802421a:	f242 730f 	movw	r3, #9999	@ 0x270f
 802421e:	6013      	str	r3, [r2, #0]
 8024220:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8024224:	4323      	orrs	r3, r4
 8024226:	f000 855a 	beq.w	8024cde <_dtoa_r+0xb3e>
 802422a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 802422c:	f8df a25c 	ldr.w	sl, [pc, #604]	@ 802448c <_dtoa_r+0x2ec>
 8024230:	2b00      	cmp	r3, #0
 8024232:	f000 855c 	beq.w	8024cee <_dtoa_r+0xb4e>
 8024236:	f10a 0303 	add.w	r3, sl, #3
 802423a:	f000 bd56 	b.w	8024cea <_dtoa_r+0xb4a>
 802423e:	ed9d 7b04 	vldr	d7, [sp, #16]
 8024242:	2200      	movs	r2, #0
 8024244:	ec51 0b17 	vmov	r0, r1, d7
 8024248:	2300      	movs	r3, #0
 802424a:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 802424e:	f7ec fb73 	bl	8010938 <__aeabi_dcmpeq>
 8024252:	4680      	mov	r8, r0
 8024254:	b158      	cbz	r0, 802426e <_dtoa_r+0xce>
 8024256:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8024258:	2301      	movs	r3, #1
 802425a:	6013      	str	r3, [r2, #0]
 802425c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 802425e:	b113      	cbz	r3, 8024266 <_dtoa_r+0xc6>
 8024260:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8024262:	4b86      	ldr	r3, [pc, #536]	@ (802447c <_dtoa_r+0x2dc>)
 8024264:	6013      	str	r3, [r2, #0]
 8024266:	f8df a228 	ldr.w	sl, [pc, #552]	@ 8024490 <_dtoa_r+0x2f0>
 802426a:	f000 bd40 	b.w	8024cee <_dtoa_r+0xb4e>
 802426e:	ed9d 0b0a 	vldr	d0, [sp, #40]	@ 0x28
 8024272:	aa14      	add	r2, sp, #80	@ 0x50
 8024274:	a915      	add	r1, sp, #84	@ 0x54
 8024276:	4648      	mov	r0, r9
 8024278:	f001 f97a 	bl	8025570 <__d2b>
 802427c:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8024280:	9002      	str	r0, [sp, #8]
 8024282:	2e00      	cmp	r6, #0
 8024284:	d078      	beq.n	8024378 <_dtoa_r+0x1d8>
 8024286:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8024288:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 802428c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8024290:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8024294:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8024298:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 802429c:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 80242a0:	4619      	mov	r1, r3
 80242a2:	2200      	movs	r2, #0
 80242a4:	4b76      	ldr	r3, [pc, #472]	@ (8024480 <_dtoa_r+0x2e0>)
 80242a6:	f7eb ff27 	bl	80100f8 <__aeabi_dsub>
 80242aa:	a36b      	add	r3, pc, #428	@ (adr r3, 8024458 <_dtoa_r+0x2b8>)
 80242ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80242b0:	f7ec f8da 	bl	8010468 <__aeabi_dmul>
 80242b4:	a36a      	add	r3, pc, #424	@ (adr r3, 8024460 <_dtoa_r+0x2c0>)
 80242b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80242ba:	f7eb ff1f 	bl	80100fc <__adddf3>
 80242be:	4604      	mov	r4, r0
 80242c0:	4630      	mov	r0, r6
 80242c2:	460d      	mov	r5, r1
 80242c4:	f7ec f866 	bl	8010394 <__aeabi_i2d>
 80242c8:	a367      	add	r3, pc, #412	@ (adr r3, 8024468 <_dtoa_r+0x2c8>)
 80242ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80242ce:	f7ec f8cb 	bl	8010468 <__aeabi_dmul>
 80242d2:	4602      	mov	r2, r0
 80242d4:	460b      	mov	r3, r1
 80242d6:	4620      	mov	r0, r4
 80242d8:	4629      	mov	r1, r5
 80242da:	f7eb ff0f 	bl	80100fc <__adddf3>
 80242de:	4604      	mov	r4, r0
 80242e0:	460d      	mov	r5, r1
 80242e2:	f7ec fb71 	bl	80109c8 <__aeabi_d2iz>
 80242e6:	2200      	movs	r2, #0
 80242e8:	4607      	mov	r7, r0
 80242ea:	2300      	movs	r3, #0
 80242ec:	4620      	mov	r0, r4
 80242ee:	4629      	mov	r1, r5
 80242f0:	f7ec fb2c 	bl	801094c <__aeabi_dcmplt>
 80242f4:	b140      	cbz	r0, 8024308 <_dtoa_r+0x168>
 80242f6:	4638      	mov	r0, r7
 80242f8:	f7ec f84c 	bl	8010394 <__aeabi_i2d>
 80242fc:	4622      	mov	r2, r4
 80242fe:	462b      	mov	r3, r5
 8024300:	f7ec fb1a 	bl	8010938 <__aeabi_dcmpeq>
 8024304:	b900      	cbnz	r0, 8024308 <_dtoa_r+0x168>
 8024306:	3f01      	subs	r7, #1
 8024308:	2f16      	cmp	r7, #22
 802430a:	d852      	bhi.n	80243b2 <_dtoa_r+0x212>
 802430c:	4b5d      	ldr	r3, [pc, #372]	@ (8024484 <_dtoa_r+0x2e4>)
 802430e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8024312:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024316:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 802431a:	f7ec fb17 	bl	801094c <__aeabi_dcmplt>
 802431e:	2800      	cmp	r0, #0
 8024320:	d049      	beq.n	80243b6 <_dtoa_r+0x216>
 8024322:	3f01      	subs	r7, #1
 8024324:	2300      	movs	r3, #0
 8024326:	9310      	str	r3, [sp, #64]	@ 0x40
 8024328:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 802432a:	1b9b      	subs	r3, r3, r6
 802432c:	1e5a      	subs	r2, r3, #1
 802432e:	bf45      	ittet	mi
 8024330:	f1c3 0301 	rsbmi	r3, r3, #1
 8024334:	9300      	strmi	r3, [sp, #0]
 8024336:	2300      	movpl	r3, #0
 8024338:	2300      	movmi	r3, #0
 802433a:	9206      	str	r2, [sp, #24]
 802433c:	bf54      	ite	pl
 802433e:	9300      	strpl	r3, [sp, #0]
 8024340:	9306      	strmi	r3, [sp, #24]
 8024342:	2f00      	cmp	r7, #0
 8024344:	db39      	blt.n	80243ba <_dtoa_r+0x21a>
 8024346:	9b06      	ldr	r3, [sp, #24]
 8024348:	970d      	str	r7, [sp, #52]	@ 0x34
 802434a:	443b      	add	r3, r7
 802434c:	9306      	str	r3, [sp, #24]
 802434e:	2300      	movs	r3, #0
 8024350:	9308      	str	r3, [sp, #32]
 8024352:	9b07      	ldr	r3, [sp, #28]
 8024354:	2b09      	cmp	r3, #9
 8024356:	d863      	bhi.n	8024420 <_dtoa_r+0x280>
 8024358:	2b05      	cmp	r3, #5
 802435a:	bfc4      	itt	gt
 802435c:	3b04      	subgt	r3, #4
 802435e:	9307      	strgt	r3, [sp, #28]
 8024360:	9b07      	ldr	r3, [sp, #28]
 8024362:	f1a3 0302 	sub.w	r3, r3, #2
 8024366:	bfcc      	ite	gt
 8024368:	2400      	movgt	r4, #0
 802436a:	2401      	movle	r4, #1
 802436c:	2b03      	cmp	r3, #3
 802436e:	d863      	bhi.n	8024438 <_dtoa_r+0x298>
 8024370:	e8df f003 	tbb	[pc, r3]
 8024374:	2b375452 	.word	0x2b375452
 8024378:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 802437c:	441e      	add	r6, r3
 802437e:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8024382:	2b20      	cmp	r3, #32
 8024384:	bfc1      	itttt	gt
 8024386:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 802438a:	409f      	lslgt	r7, r3
 802438c:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8024390:	fa24 f303 	lsrgt.w	r3, r4, r3
 8024394:	bfd6      	itet	le
 8024396:	f1c3 0320 	rsble	r3, r3, #32
 802439a:	ea47 0003 	orrgt.w	r0, r7, r3
 802439e:	fa04 f003 	lslle.w	r0, r4, r3
 80243a2:	f7eb ffe7 	bl	8010374 <__aeabi_ui2d>
 80243a6:	2201      	movs	r2, #1
 80243a8:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 80243ac:	3e01      	subs	r6, #1
 80243ae:	9212      	str	r2, [sp, #72]	@ 0x48
 80243b0:	e776      	b.n	80242a0 <_dtoa_r+0x100>
 80243b2:	2301      	movs	r3, #1
 80243b4:	e7b7      	b.n	8024326 <_dtoa_r+0x186>
 80243b6:	9010      	str	r0, [sp, #64]	@ 0x40
 80243b8:	e7b6      	b.n	8024328 <_dtoa_r+0x188>
 80243ba:	9b00      	ldr	r3, [sp, #0]
 80243bc:	1bdb      	subs	r3, r3, r7
 80243be:	9300      	str	r3, [sp, #0]
 80243c0:	427b      	negs	r3, r7
 80243c2:	9308      	str	r3, [sp, #32]
 80243c4:	2300      	movs	r3, #0
 80243c6:	930d      	str	r3, [sp, #52]	@ 0x34
 80243c8:	e7c3      	b.n	8024352 <_dtoa_r+0x1b2>
 80243ca:	2301      	movs	r3, #1
 80243cc:	9309      	str	r3, [sp, #36]	@ 0x24
 80243ce:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80243d0:	eb07 0b03 	add.w	fp, r7, r3
 80243d4:	f10b 0301 	add.w	r3, fp, #1
 80243d8:	2b01      	cmp	r3, #1
 80243da:	9303      	str	r3, [sp, #12]
 80243dc:	bfb8      	it	lt
 80243de:	2301      	movlt	r3, #1
 80243e0:	e006      	b.n	80243f0 <_dtoa_r+0x250>
 80243e2:	2301      	movs	r3, #1
 80243e4:	9309      	str	r3, [sp, #36]	@ 0x24
 80243e6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80243e8:	2b00      	cmp	r3, #0
 80243ea:	dd28      	ble.n	802443e <_dtoa_r+0x29e>
 80243ec:	469b      	mov	fp, r3
 80243ee:	9303      	str	r3, [sp, #12]
 80243f0:	f8d9 001c 	ldr.w	r0, [r9, #28]
 80243f4:	2100      	movs	r1, #0
 80243f6:	2204      	movs	r2, #4
 80243f8:	f102 0514 	add.w	r5, r2, #20
 80243fc:	429d      	cmp	r5, r3
 80243fe:	d926      	bls.n	802444e <_dtoa_r+0x2ae>
 8024400:	6041      	str	r1, [r0, #4]
 8024402:	4648      	mov	r0, r9
 8024404:	f000 fd92 	bl	8024f2c <_Balloc>
 8024408:	4682      	mov	sl, r0
 802440a:	2800      	cmp	r0, #0
 802440c:	d142      	bne.n	8024494 <_dtoa_r+0x2f4>
 802440e:	4b1e      	ldr	r3, [pc, #120]	@ (8024488 <_dtoa_r+0x2e8>)
 8024410:	4602      	mov	r2, r0
 8024412:	f240 11af 	movw	r1, #431	@ 0x1af
 8024416:	e6da      	b.n	80241ce <_dtoa_r+0x2e>
 8024418:	2300      	movs	r3, #0
 802441a:	e7e3      	b.n	80243e4 <_dtoa_r+0x244>
 802441c:	2300      	movs	r3, #0
 802441e:	e7d5      	b.n	80243cc <_dtoa_r+0x22c>
 8024420:	2401      	movs	r4, #1
 8024422:	2300      	movs	r3, #0
 8024424:	9307      	str	r3, [sp, #28]
 8024426:	9409      	str	r4, [sp, #36]	@ 0x24
 8024428:	f04f 3bff 	mov.w	fp, #4294967295	@ 0xffffffff
 802442c:	2200      	movs	r2, #0
 802442e:	f8cd b00c 	str.w	fp, [sp, #12]
 8024432:	2312      	movs	r3, #18
 8024434:	920c      	str	r2, [sp, #48]	@ 0x30
 8024436:	e7db      	b.n	80243f0 <_dtoa_r+0x250>
 8024438:	2301      	movs	r3, #1
 802443a:	9309      	str	r3, [sp, #36]	@ 0x24
 802443c:	e7f4      	b.n	8024428 <_dtoa_r+0x288>
 802443e:	f04f 0b01 	mov.w	fp, #1
 8024442:	f8cd b00c 	str.w	fp, [sp, #12]
 8024446:	465b      	mov	r3, fp
 8024448:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 802444c:	e7d0      	b.n	80243f0 <_dtoa_r+0x250>
 802444e:	3101      	adds	r1, #1
 8024450:	0052      	lsls	r2, r2, #1
 8024452:	e7d1      	b.n	80243f8 <_dtoa_r+0x258>
 8024454:	f3af 8000 	nop.w
 8024458:	636f4361 	.word	0x636f4361
 802445c:	3fd287a7 	.word	0x3fd287a7
 8024460:	8b60c8b3 	.word	0x8b60c8b3
 8024464:	3fc68a28 	.word	0x3fc68a28
 8024468:	509f79fb 	.word	0x509f79fb
 802446c:	3fd34413 	.word	0x3fd34413
 8024470:	080262d3 	.word	0x080262d3
 8024474:	080262ea 	.word	0x080262ea
 8024478:	7ff00000 	.word	0x7ff00000
 802447c:	080262a3 	.word	0x080262a3
 8024480:	3ff80000 	.word	0x3ff80000
 8024484:	08076a40 	.word	0x08076a40
 8024488:	08026342 	.word	0x08026342
 802448c:	080262cf 	.word	0x080262cf
 8024490:	080262a2 	.word	0x080262a2
 8024494:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8024498:	6018      	str	r0, [r3, #0]
 802449a:	9b03      	ldr	r3, [sp, #12]
 802449c:	2b0e      	cmp	r3, #14
 802449e:	f200 80a1 	bhi.w	80245e4 <_dtoa_r+0x444>
 80244a2:	2c00      	cmp	r4, #0
 80244a4:	f000 809e 	beq.w	80245e4 <_dtoa_r+0x444>
 80244a8:	2f00      	cmp	r7, #0
 80244aa:	dd33      	ble.n	8024514 <_dtoa_r+0x374>
 80244ac:	4b9c      	ldr	r3, [pc, #624]	@ (8024720 <_dtoa_r+0x580>)
 80244ae:	f007 020f 	and.w	r2, r7, #15
 80244b2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80244b6:	ed93 7b00 	vldr	d7, [r3]
 80244ba:	05f8      	lsls	r0, r7, #23
 80244bc:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 80244c0:	ea4f 1427 	mov.w	r4, r7, asr #4
 80244c4:	d516      	bpl.n	80244f4 <_dtoa_r+0x354>
 80244c6:	4b97      	ldr	r3, [pc, #604]	@ (8024724 <_dtoa_r+0x584>)
 80244c8:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80244cc:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80244d0:	f7ec f8f4 	bl	80106bc <__aeabi_ddiv>
 80244d4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80244d8:	f004 040f 	and.w	r4, r4, #15
 80244dc:	2603      	movs	r6, #3
 80244de:	4d91      	ldr	r5, [pc, #580]	@ (8024724 <_dtoa_r+0x584>)
 80244e0:	b954      	cbnz	r4, 80244f8 <_dtoa_r+0x358>
 80244e2:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 80244e6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80244ea:	f7ec f8e7 	bl	80106bc <__aeabi_ddiv>
 80244ee:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80244f2:	e028      	b.n	8024546 <_dtoa_r+0x3a6>
 80244f4:	2602      	movs	r6, #2
 80244f6:	e7f2      	b.n	80244de <_dtoa_r+0x33e>
 80244f8:	07e1      	lsls	r1, r4, #31
 80244fa:	d508      	bpl.n	802450e <_dtoa_r+0x36e>
 80244fc:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8024500:	e9d5 2300 	ldrd	r2, r3, [r5]
 8024504:	f7eb ffb0 	bl	8010468 <__aeabi_dmul>
 8024508:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 802450c:	3601      	adds	r6, #1
 802450e:	1064      	asrs	r4, r4, #1
 8024510:	3508      	adds	r5, #8
 8024512:	e7e5      	b.n	80244e0 <_dtoa_r+0x340>
 8024514:	f000 80af 	beq.w	8024676 <_dtoa_r+0x4d6>
 8024518:	427c      	negs	r4, r7
 802451a:	4b81      	ldr	r3, [pc, #516]	@ (8024720 <_dtoa_r+0x580>)
 802451c:	4d81      	ldr	r5, [pc, #516]	@ (8024724 <_dtoa_r+0x584>)
 802451e:	f004 020f 	and.w	r2, r4, #15
 8024522:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8024526:	e9d3 2300 	ldrd	r2, r3, [r3]
 802452a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 802452e:	f7eb ff9b 	bl	8010468 <__aeabi_dmul>
 8024532:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8024536:	1124      	asrs	r4, r4, #4
 8024538:	2300      	movs	r3, #0
 802453a:	2602      	movs	r6, #2
 802453c:	2c00      	cmp	r4, #0
 802453e:	f040 808f 	bne.w	8024660 <_dtoa_r+0x4c0>
 8024542:	2b00      	cmp	r3, #0
 8024544:	d1d3      	bne.n	80244ee <_dtoa_r+0x34e>
 8024546:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8024548:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 802454c:	2b00      	cmp	r3, #0
 802454e:	f000 8094 	beq.w	802467a <_dtoa_r+0x4da>
 8024552:	4b75      	ldr	r3, [pc, #468]	@ (8024728 <_dtoa_r+0x588>)
 8024554:	2200      	movs	r2, #0
 8024556:	4620      	mov	r0, r4
 8024558:	4629      	mov	r1, r5
 802455a:	f7ec f9f7 	bl	801094c <__aeabi_dcmplt>
 802455e:	2800      	cmp	r0, #0
 8024560:	f000 808b 	beq.w	802467a <_dtoa_r+0x4da>
 8024564:	9b03      	ldr	r3, [sp, #12]
 8024566:	2b00      	cmp	r3, #0
 8024568:	f000 8087 	beq.w	802467a <_dtoa_r+0x4da>
 802456c:	f1bb 0f00 	cmp.w	fp, #0
 8024570:	dd34      	ble.n	80245dc <_dtoa_r+0x43c>
 8024572:	4620      	mov	r0, r4
 8024574:	4b6d      	ldr	r3, [pc, #436]	@ (802472c <_dtoa_r+0x58c>)
 8024576:	2200      	movs	r2, #0
 8024578:	4629      	mov	r1, r5
 802457a:	f7eb ff75 	bl	8010468 <__aeabi_dmul>
 802457e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8024582:	f107 38ff 	add.w	r8, r7, #4294967295	@ 0xffffffff
 8024586:	3601      	adds	r6, #1
 8024588:	465c      	mov	r4, fp
 802458a:	4630      	mov	r0, r6
 802458c:	f7eb ff02 	bl	8010394 <__aeabi_i2d>
 8024590:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8024594:	f7eb ff68 	bl	8010468 <__aeabi_dmul>
 8024598:	4b65      	ldr	r3, [pc, #404]	@ (8024730 <_dtoa_r+0x590>)
 802459a:	2200      	movs	r2, #0
 802459c:	f7eb fdae 	bl	80100fc <__adddf3>
 80245a0:	4605      	mov	r5, r0
 80245a2:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 80245a6:	2c00      	cmp	r4, #0
 80245a8:	d16a      	bne.n	8024680 <_dtoa_r+0x4e0>
 80245aa:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80245ae:	4b61      	ldr	r3, [pc, #388]	@ (8024734 <_dtoa_r+0x594>)
 80245b0:	2200      	movs	r2, #0
 80245b2:	f7eb fda1 	bl	80100f8 <__aeabi_dsub>
 80245b6:	4602      	mov	r2, r0
 80245b8:	460b      	mov	r3, r1
 80245ba:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80245be:	462a      	mov	r2, r5
 80245c0:	4633      	mov	r3, r6
 80245c2:	f7ec f9e1 	bl	8010988 <__aeabi_dcmpgt>
 80245c6:	2800      	cmp	r0, #0
 80245c8:	f040 8298 	bne.w	8024afc <_dtoa_r+0x95c>
 80245cc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80245d0:	462a      	mov	r2, r5
 80245d2:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 80245d6:	f7ec f9b9 	bl	801094c <__aeabi_dcmplt>
 80245da:	bb38      	cbnz	r0, 802462c <_dtoa_r+0x48c>
 80245dc:	e9dd 340a 	ldrd	r3, r4, [sp, #40]	@ 0x28
 80245e0:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80245e4:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80245e6:	2b00      	cmp	r3, #0
 80245e8:	f2c0 8157 	blt.w	802489a <_dtoa_r+0x6fa>
 80245ec:	2f0e      	cmp	r7, #14
 80245ee:	f300 8154 	bgt.w	802489a <_dtoa_r+0x6fa>
 80245f2:	4b4b      	ldr	r3, [pc, #300]	@ (8024720 <_dtoa_r+0x580>)
 80245f4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80245f8:	ed93 7b00 	vldr	d7, [r3]
 80245fc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80245fe:	2b00      	cmp	r3, #0
 8024600:	ed8d 7b00 	vstr	d7, [sp]
 8024604:	f280 80e5 	bge.w	80247d2 <_dtoa_r+0x632>
 8024608:	9b03      	ldr	r3, [sp, #12]
 802460a:	2b00      	cmp	r3, #0
 802460c:	f300 80e1 	bgt.w	80247d2 <_dtoa_r+0x632>
 8024610:	d10c      	bne.n	802462c <_dtoa_r+0x48c>
 8024612:	4b48      	ldr	r3, [pc, #288]	@ (8024734 <_dtoa_r+0x594>)
 8024614:	2200      	movs	r2, #0
 8024616:	ec51 0b17 	vmov	r0, r1, d7
 802461a:	f7eb ff25 	bl	8010468 <__aeabi_dmul>
 802461e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8024622:	f7ec f9a7 	bl	8010974 <__aeabi_dcmpge>
 8024626:	2800      	cmp	r0, #0
 8024628:	f000 8266 	beq.w	8024af8 <_dtoa_r+0x958>
 802462c:	2400      	movs	r4, #0
 802462e:	4625      	mov	r5, r4
 8024630:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024632:	4656      	mov	r6, sl
 8024634:	ea6f 0803 	mvn.w	r8, r3
 8024638:	2700      	movs	r7, #0
 802463a:	4621      	mov	r1, r4
 802463c:	4648      	mov	r0, r9
 802463e:	f000 fcb5 	bl	8024fac <_Bfree>
 8024642:	2d00      	cmp	r5, #0
 8024644:	f000 80bd 	beq.w	80247c2 <_dtoa_r+0x622>
 8024648:	b12f      	cbz	r7, 8024656 <_dtoa_r+0x4b6>
 802464a:	42af      	cmp	r7, r5
 802464c:	d003      	beq.n	8024656 <_dtoa_r+0x4b6>
 802464e:	4639      	mov	r1, r7
 8024650:	4648      	mov	r0, r9
 8024652:	f000 fcab 	bl	8024fac <_Bfree>
 8024656:	4629      	mov	r1, r5
 8024658:	4648      	mov	r0, r9
 802465a:	f000 fca7 	bl	8024fac <_Bfree>
 802465e:	e0b0      	b.n	80247c2 <_dtoa_r+0x622>
 8024660:	07e2      	lsls	r2, r4, #31
 8024662:	d505      	bpl.n	8024670 <_dtoa_r+0x4d0>
 8024664:	e9d5 2300 	ldrd	r2, r3, [r5]
 8024668:	f7eb fefe 	bl	8010468 <__aeabi_dmul>
 802466c:	3601      	adds	r6, #1
 802466e:	2301      	movs	r3, #1
 8024670:	1064      	asrs	r4, r4, #1
 8024672:	3508      	adds	r5, #8
 8024674:	e762      	b.n	802453c <_dtoa_r+0x39c>
 8024676:	2602      	movs	r6, #2
 8024678:	e765      	b.n	8024546 <_dtoa_r+0x3a6>
 802467a:	9c03      	ldr	r4, [sp, #12]
 802467c:	46b8      	mov	r8, r7
 802467e:	e784      	b.n	802458a <_dtoa_r+0x3ea>
 8024680:	4b27      	ldr	r3, [pc, #156]	@ (8024720 <_dtoa_r+0x580>)
 8024682:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8024684:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8024688:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 802468c:	4454      	add	r4, sl
 802468e:	2900      	cmp	r1, #0
 8024690:	d054      	beq.n	802473c <_dtoa_r+0x59c>
 8024692:	4929      	ldr	r1, [pc, #164]	@ (8024738 <_dtoa_r+0x598>)
 8024694:	2000      	movs	r0, #0
 8024696:	f7ec f811 	bl	80106bc <__aeabi_ddiv>
 802469a:	4633      	mov	r3, r6
 802469c:	462a      	mov	r2, r5
 802469e:	f7eb fd2b 	bl	80100f8 <__aeabi_dsub>
 80246a2:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 80246a6:	4656      	mov	r6, sl
 80246a8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80246ac:	f7ec f98c 	bl	80109c8 <__aeabi_d2iz>
 80246b0:	4605      	mov	r5, r0
 80246b2:	f7eb fe6f 	bl	8010394 <__aeabi_i2d>
 80246b6:	4602      	mov	r2, r0
 80246b8:	460b      	mov	r3, r1
 80246ba:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80246be:	f7eb fd1b 	bl	80100f8 <__aeabi_dsub>
 80246c2:	3530      	adds	r5, #48	@ 0x30
 80246c4:	4602      	mov	r2, r0
 80246c6:	460b      	mov	r3, r1
 80246c8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80246cc:	f806 5b01 	strb.w	r5, [r6], #1
 80246d0:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 80246d4:	f7ec f93a 	bl	801094c <__aeabi_dcmplt>
 80246d8:	2800      	cmp	r0, #0
 80246da:	d172      	bne.n	80247c2 <_dtoa_r+0x622>
 80246dc:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80246e0:	4911      	ldr	r1, [pc, #68]	@ (8024728 <_dtoa_r+0x588>)
 80246e2:	2000      	movs	r0, #0
 80246e4:	f7eb fd08 	bl	80100f8 <__aeabi_dsub>
 80246e8:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 80246ec:	f7ec f92e 	bl	801094c <__aeabi_dcmplt>
 80246f0:	2800      	cmp	r0, #0
 80246f2:	f040 80b4 	bne.w	802485e <_dtoa_r+0x6be>
 80246f6:	42a6      	cmp	r6, r4
 80246f8:	f43f af70 	beq.w	80245dc <_dtoa_r+0x43c>
 80246fc:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8024700:	4b0a      	ldr	r3, [pc, #40]	@ (802472c <_dtoa_r+0x58c>)
 8024702:	2200      	movs	r2, #0
 8024704:	f7eb feb0 	bl	8010468 <__aeabi_dmul>
 8024708:	4b08      	ldr	r3, [pc, #32]	@ (802472c <_dtoa_r+0x58c>)
 802470a:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 802470e:	2200      	movs	r2, #0
 8024710:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8024714:	f7eb fea8 	bl	8010468 <__aeabi_dmul>
 8024718:	e9cd 0104 	strd	r0, r1, [sp, #16]
 802471c:	e7c4      	b.n	80246a8 <_dtoa_r+0x508>
 802471e:	bf00      	nop
 8024720:	08076a40 	.word	0x08076a40
 8024724:	08076a18 	.word	0x08076a18
 8024728:	3ff00000 	.word	0x3ff00000
 802472c:	40240000 	.word	0x40240000
 8024730:	401c0000 	.word	0x401c0000
 8024734:	40140000 	.word	0x40140000
 8024738:	3fe00000 	.word	0x3fe00000
 802473c:	4631      	mov	r1, r6
 802473e:	4628      	mov	r0, r5
 8024740:	f7eb fe92 	bl	8010468 <__aeabi_dmul>
 8024744:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8024748:	9413      	str	r4, [sp, #76]	@ 0x4c
 802474a:	4656      	mov	r6, sl
 802474c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8024750:	f7ec f93a 	bl	80109c8 <__aeabi_d2iz>
 8024754:	4605      	mov	r5, r0
 8024756:	f7eb fe1d 	bl	8010394 <__aeabi_i2d>
 802475a:	4602      	mov	r2, r0
 802475c:	460b      	mov	r3, r1
 802475e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8024762:	f7eb fcc9 	bl	80100f8 <__aeabi_dsub>
 8024766:	3530      	adds	r5, #48	@ 0x30
 8024768:	f806 5b01 	strb.w	r5, [r6], #1
 802476c:	4602      	mov	r2, r0
 802476e:	460b      	mov	r3, r1
 8024770:	42a6      	cmp	r6, r4
 8024772:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8024776:	f04f 0200 	mov.w	r2, #0
 802477a:	d124      	bne.n	80247c6 <_dtoa_r+0x626>
 802477c:	4baf      	ldr	r3, [pc, #700]	@ (8024a3c <_dtoa_r+0x89c>)
 802477e:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8024782:	f7eb fcbb 	bl	80100fc <__adddf3>
 8024786:	4602      	mov	r2, r0
 8024788:	460b      	mov	r3, r1
 802478a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 802478e:	f7ec f8fb 	bl	8010988 <__aeabi_dcmpgt>
 8024792:	2800      	cmp	r0, #0
 8024794:	d163      	bne.n	802485e <_dtoa_r+0x6be>
 8024796:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 802479a:	49a8      	ldr	r1, [pc, #672]	@ (8024a3c <_dtoa_r+0x89c>)
 802479c:	2000      	movs	r0, #0
 802479e:	f7eb fcab 	bl	80100f8 <__aeabi_dsub>
 80247a2:	4602      	mov	r2, r0
 80247a4:	460b      	mov	r3, r1
 80247a6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80247aa:	f7ec f8cf 	bl	801094c <__aeabi_dcmplt>
 80247ae:	2800      	cmp	r0, #0
 80247b0:	f43f af14 	beq.w	80245dc <_dtoa_r+0x43c>
 80247b4:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80247b6:	1e73      	subs	r3, r6, #1
 80247b8:	9313      	str	r3, [sp, #76]	@ 0x4c
 80247ba:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80247be:	2b30      	cmp	r3, #48	@ 0x30
 80247c0:	d0f8      	beq.n	80247b4 <_dtoa_r+0x614>
 80247c2:	4647      	mov	r7, r8
 80247c4:	e03b      	b.n	802483e <_dtoa_r+0x69e>
 80247c6:	4b9e      	ldr	r3, [pc, #632]	@ (8024a40 <_dtoa_r+0x8a0>)
 80247c8:	f7eb fe4e 	bl	8010468 <__aeabi_dmul>
 80247cc:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80247d0:	e7bc      	b.n	802474c <_dtoa_r+0x5ac>
 80247d2:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 80247d6:	4656      	mov	r6, sl
 80247d8:	e9dd 2300 	ldrd	r2, r3, [sp]
 80247dc:	4620      	mov	r0, r4
 80247de:	4629      	mov	r1, r5
 80247e0:	f7eb ff6c 	bl	80106bc <__aeabi_ddiv>
 80247e4:	f7ec f8f0 	bl	80109c8 <__aeabi_d2iz>
 80247e8:	4680      	mov	r8, r0
 80247ea:	f7eb fdd3 	bl	8010394 <__aeabi_i2d>
 80247ee:	e9dd 2300 	ldrd	r2, r3, [sp]
 80247f2:	f7eb fe39 	bl	8010468 <__aeabi_dmul>
 80247f6:	4602      	mov	r2, r0
 80247f8:	460b      	mov	r3, r1
 80247fa:	4620      	mov	r0, r4
 80247fc:	4629      	mov	r1, r5
 80247fe:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8024802:	f7eb fc79 	bl	80100f8 <__aeabi_dsub>
 8024806:	f806 4b01 	strb.w	r4, [r6], #1
 802480a:	9d03      	ldr	r5, [sp, #12]
 802480c:	eba6 040a 	sub.w	r4, r6, sl
 8024810:	42a5      	cmp	r5, r4
 8024812:	4602      	mov	r2, r0
 8024814:	460b      	mov	r3, r1
 8024816:	d133      	bne.n	8024880 <_dtoa_r+0x6e0>
 8024818:	f7eb fc70 	bl	80100fc <__adddf3>
 802481c:	e9dd 2300 	ldrd	r2, r3, [sp]
 8024820:	4604      	mov	r4, r0
 8024822:	460d      	mov	r5, r1
 8024824:	f7ec f8b0 	bl	8010988 <__aeabi_dcmpgt>
 8024828:	b9c0      	cbnz	r0, 802485c <_dtoa_r+0x6bc>
 802482a:	e9dd 2300 	ldrd	r2, r3, [sp]
 802482e:	4620      	mov	r0, r4
 8024830:	4629      	mov	r1, r5
 8024832:	f7ec f881 	bl	8010938 <__aeabi_dcmpeq>
 8024836:	b110      	cbz	r0, 802483e <_dtoa_r+0x69e>
 8024838:	f018 0f01 	tst.w	r8, #1
 802483c:	d10e      	bne.n	802485c <_dtoa_r+0x6bc>
 802483e:	9902      	ldr	r1, [sp, #8]
 8024840:	4648      	mov	r0, r9
 8024842:	f000 fbb3 	bl	8024fac <_Bfree>
 8024846:	2300      	movs	r3, #0
 8024848:	7033      	strb	r3, [r6, #0]
 802484a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802484c:	3701      	adds	r7, #1
 802484e:	601f      	str	r7, [r3, #0]
 8024850:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8024852:	2b00      	cmp	r3, #0
 8024854:	f000 824b 	beq.w	8024cee <_dtoa_r+0xb4e>
 8024858:	601e      	str	r6, [r3, #0]
 802485a:	e248      	b.n	8024cee <_dtoa_r+0xb4e>
 802485c:	46b8      	mov	r8, r7
 802485e:	4633      	mov	r3, r6
 8024860:	461e      	mov	r6, r3
 8024862:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8024866:	2a39      	cmp	r2, #57	@ 0x39
 8024868:	d106      	bne.n	8024878 <_dtoa_r+0x6d8>
 802486a:	459a      	cmp	sl, r3
 802486c:	d1f8      	bne.n	8024860 <_dtoa_r+0x6c0>
 802486e:	2230      	movs	r2, #48	@ 0x30
 8024870:	f108 0801 	add.w	r8, r8, #1
 8024874:	f88a 2000 	strb.w	r2, [sl]
 8024878:	781a      	ldrb	r2, [r3, #0]
 802487a:	3201      	adds	r2, #1
 802487c:	701a      	strb	r2, [r3, #0]
 802487e:	e7a0      	b.n	80247c2 <_dtoa_r+0x622>
 8024880:	4b6f      	ldr	r3, [pc, #444]	@ (8024a40 <_dtoa_r+0x8a0>)
 8024882:	2200      	movs	r2, #0
 8024884:	f7eb fdf0 	bl	8010468 <__aeabi_dmul>
 8024888:	2200      	movs	r2, #0
 802488a:	2300      	movs	r3, #0
 802488c:	4604      	mov	r4, r0
 802488e:	460d      	mov	r5, r1
 8024890:	f7ec f852 	bl	8010938 <__aeabi_dcmpeq>
 8024894:	2800      	cmp	r0, #0
 8024896:	d09f      	beq.n	80247d8 <_dtoa_r+0x638>
 8024898:	e7d1      	b.n	802483e <_dtoa_r+0x69e>
 802489a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802489c:	2a00      	cmp	r2, #0
 802489e:	f000 80ea 	beq.w	8024a76 <_dtoa_r+0x8d6>
 80248a2:	9a07      	ldr	r2, [sp, #28]
 80248a4:	2a01      	cmp	r2, #1
 80248a6:	f300 80cd 	bgt.w	8024a44 <_dtoa_r+0x8a4>
 80248aa:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80248ac:	2a00      	cmp	r2, #0
 80248ae:	f000 80c1 	beq.w	8024a34 <_dtoa_r+0x894>
 80248b2:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 80248b6:	9c08      	ldr	r4, [sp, #32]
 80248b8:	9e00      	ldr	r6, [sp, #0]
 80248ba:	9a00      	ldr	r2, [sp, #0]
 80248bc:	441a      	add	r2, r3
 80248be:	9200      	str	r2, [sp, #0]
 80248c0:	9a06      	ldr	r2, [sp, #24]
 80248c2:	2101      	movs	r1, #1
 80248c4:	441a      	add	r2, r3
 80248c6:	4648      	mov	r0, r9
 80248c8:	9206      	str	r2, [sp, #24]
 80248ca:	f000 fc23 	bl	8025114 <__i2b>
 80248ce:	4605      	mov	r5, r0
 80248d0:	b166      	cbz	r6, 80248ec <_dtoa_r+0x74c>
 80248d2:	9b06      	ldr	r3, [sp, #24]
 80248d4:	2b00      	cmp	r3, #0
 80248d6:	dd09      	ble.n	80248ec <_dtoa_r+0x74c>
 80248d8:	42b3      	cmp	r3, r6
 80248da:	9a00      	ldr	r2, [sp, #0]
 80248dc:	bfa8      	it	ge
 80248de:	4633      	movge	r3, r6
 80248e0:	1ad2      	subs	r2, r2, r3
 80248e2:	9200      	str	r2, [sp, #0]
 80248e4:	9a06      	ldr	r2, [sp, #24]
 80248e6:	1af6      	subs	r6, r6, r3
 80248e8:	1ad3      	subs	r3, r2, r3
 80248ea:	9306      	str	r3, [sp, #24]
 80248ec:	9b08      	ldr	r3, [sp, #32]
 80248ee:	b30b      	cbz	r3, 8024934 <_dtoa_r+0x794>
 80248f0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80248f2:	2b00      	cmp	r3, #0
 80248f4:	f000 80c6 	beq.w	8024a84 <_dtoa_r+0x8e4>
 80248f8:	2c00      	cmp	r4, #0
 80248fa:	f000 80c0 	beq.w	8024a7e <_dtoa_r+0x8de>
 80248fe:	4629      	mov	r1, r5
 8024900:	4622      	mov	r2, r4
 8024902:	4648      	mov	r0, r9
 8024904:	f000 fcbe 	bl	8025284 <__pow5mult>
 8024908:	9a02      	ldr	r2, [sp, #8]
 802490a:	4601      	mov	r1, r0
 802490c:	4605      	mov	r5, r0
 802490e:	4648      	mov	r0, r9
 8024910:	f000 fc16 	bl	8025140 <__multiply>
 8024914:	9902      	ldr	r1, [sp, #8]
 8024916:	4680      	mov	r8, r0
 8024918:	4648      	mov	r0, r9
 802491a:	f000 fb47 	bl	8024fac <_Bfree>
 802491e:	9b08      	ldr	r3, [sp, #32]
 8024920:	1b1b      	subs	r3, r3, r4
 8024922:	9308      	str	r3, [sp, #32]
 8024924:	f000 80b1 	beq.w	8024a8a <_dtoa_r+0x8ea>
 8024928:	9a08      	ldr	r2, [sp, #32]
 802492a:	4641      	mov	r1, r8
 802492c:	4648      	mov	r0, r9
 802492e:	f000 fca9 	bl	8025284 <__pow5mult>
 8024932:	9002      	str	r0, [sp, #8]
 8024934:	2101      	movs	r1, #1
 8024936:	4648      	mov	r0, r9
 8024938:	f000 fbec 	bl	8025114 <__i2b>
 802493c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802493e:	4604      	mov	r4, r0
 8024940:	2b00      	cmp	r3, #0
 8024942:	f000 81d8 	beq.w	8024cf6 <_dtoa_r+0xb56>
 8024946:	461a      	mov	r2, r3
 8024948:	4601      	mov	r1, r0
 802494a:	4648      	mov	r0, r9
 802494c:	f000 fc9a 	bl	8025284 <__pow5mult>
 8024950:	9b07      	ldr	r3, [sp, #28]
 8024952:	2b01      	cmp	r3, #1
 8024954:	4604      	mov	r4, r0
 8024956:	f300 809f 	bgt.w	8024a98 <_dtoa_r+0x8f8>
 802495a:	9b04      	ldr	r3, [sp, #16]
 802495c:	2b00      	cmp	r3, #0
 802495e:	f040 8097 	bne.w	8024a90 <_dtoa_r+0x8f0>
 8024962:	9b05      	ldr	r3, [sp, #20]
 8024964:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8024968:	2b00      	cmp	r3, #0
 802496a:	f040 8093 	bne.w	8024a94 <_dtoa_r+0x8f4>
 802496e:	9b05      	ldr	r3, [sp, #20]
 8024970:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8024974:	0d1b      	lsrs	r3, r3, #20
 8024976:	051b      	lsls	r3, r3, #20
 8024978:	b133      	cbz	r3, 8024988 <_dtoa_r+0x7e8>
 802497a:	9b00      	ldr	r3, [sp, #0]
 802497c:	3301      	adds	r3, #1
 802497e:	9300      	str	r3, [sp, #0]
 8024980:	9b06      	ldr	r3, [sp, #24]
 8024982:	3301      	adds	r3, #1
 8024984:	9306      	str	r3, [sp, #24]
 8024986:	2301      	movs	r3, #1
 8024988:	9308      	str	r3, [sp, #32]
 802498a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802498c:	2b00      	cmp	r3, #0
 802498e:	f000 81b8 	beq.w	8024d02 <_dtoa_r+0xb62>
 8024992:	6923      	ldr	r3, [r4, #16]
 8024994:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8024998:	6918      	ldr	r0, [r3, #16]
 802499a:	f000 fb6f 	bl	802507c <__hi0bits>
 802499e:	f1c0 0020 	rsb	r0, r0, #32
 80249a2:	9b06      	ldr	r3, [sp, #24]
 80249a4:	4418      	add	r0, r3
 80249a6:	f010 001f 	ands.w	r0, r0, #31
 80249aa:	f000 8082 	beq.w	8024ab2 <_dtoa_r+0x912>
 80249ae:	f1c0 0320 	rsb	r3, r0, #32
 80249b2:	2b04      	cmp	r3, #4
 80249b4:	dd73      	ble.n	8024a9e <_dtoa_r+0x8fe>
 80249b6:	9b00      	ldr	r3, [sp, #0]
 80249b8:	f1c0 001c 	rsb	r0, r0, #28
 80249bc:	4403      	add	r3, r0
 80249be:	9300      	str	r3, [sp, #0]
 80249c0:	9b06      	ldr	r3, [sp, #24]
 80249c2:	4403      	add	r3, r0
 80249c4:	4406      	add	r6, r0
 80249c6:	9306      	str	r3, [sp, #24]
 80249c8:	9b00      	ldr	r3, [sp, #0]
 80249ca:	2b00      	cmp	r3, #0
 80249cc:	dd05      	ble.n	80249da <_dtoa_r+0x83a>
 80249ce:	9902      	ldr	r1, [sp, #8]
 80249d0:	461a      	mov	r2, r3
 80249d2:	4648      	mov	r0, r9
 80249d4:	f000 fcb0 	bl	8025338 <__lshift>
 80249d8:	9002      	str	r0, [sp, #8]
 80249da:	9b06      	ldr	r3, [sp, #24]
 80249dc:	2b00      	cmp	r3, #0
 80249de:	dd05      	ble.n	80249ec <_dtoa_r+0x84c>
 80249e0:	4621      	mov	r1, r4
 80249e2:	461a      	mov	r2, r3
 80249e4:	4648      	mov	r0, r9
 80249e6:	f000 fca7 	bl	8025338 <__lshift>
 80249ea:	4604      	mov	r4, r0
 80249ec:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80249ee:	2b00      	cmp	r3, #0
 80249f0:	d061      	beq.n	8024ab6 <_dtoa_r+0x916>
 80249f2:	9802      	ldr	r0, [sp, #8]
 80249f4:	4621      	mov	r1, r4
 80249f6:	f000 fd0b 	bl	8025410 <__mcmp>
 80249fa:	2800      	cmp	r0, #0
 80249fc:	da5b      	bge.n	8024ab6 <_dtoa_r+0x916>
 80249fe:	2300      	movs	r3, #0
 8024a00:	9902      	ldr	r1, [sp, #8]
 8024a02:	220a      	movs	r2, #10
 8024a04:	4648      	mov	r0, r9
 8024a06:	f000 faf3 	bl	8024ff0 <__multadd>
 8024a0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024a0c:	9002      	str	r0, [sp, #8]
 8024a0e:	f107 38ff 	add.w	r8, r7, #4294967295	@ 0xffffffff
 8024a12:	2b00      	cmp	r3, #0
 8024a14:	f000 8177 	beq.w	8024d06 <_dtoa_r+0xb66>
 8024a18:	4629      	mov	r1, r5
 8024a1a:	2300      	movs	r3, #0
 8024a1c:	220a      	movs	r2, #10
 8024a1e:	4648      	mov	r0, r9
 8024a20:	f000 fae6 	bl	8024ff0 <__multadd>
 8024a24:	f1bb 0f00 	cmp.w	fp, #0
 8024a28:	4605      	mov	r5, r0
 8024a2a:	dc6f      	bgt.n	8024b0c <_dtoa_r+0x96c>
 8024a2c:	9b07      	ldr	r3, [sp, #28]
 8024a2e:	2b02      	cmp	r3, #2
 8024a30:	dc49      	bgt.n	8024ac6 <_dtoa_r+0x926>
 8024a32:	e06b      	b.n	8024b0c <_dtoa_r+0x96c>
 8024a34:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8024a36:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8024a3a:	e73c      	b.n	80248b6 <_dtoa_r+0x716>
 8024a3c:	3fe00000 	.word	0x3fe00000
 8024a40:	40240000 	.word	0x40240000
 8024a44:	9b03      	ldr	r3, [sp, #12]
 8024a46:	1e5c      	subs	r4, r3, #1
 8024a48:	9b08      	ldr	r3, [sp, #32]
 8024a4a:	42a3      	cmp	r3, r4
 8024a4c:	db09      	blt.n	8024a62 <_dtoa_r+0x8c2>
 8024a4e:	1b1c      	subs	r4, r3, r4
 8024a50:	9b03      	ldr	r3, [sp, #12]
 8024a52:	2b00      	cmp	r3, #0
 8024a54:	f6bf af30 	bge.w	80248b8 <_dtoa_r+0x718>
 8024a58:	9b00      	ldr	r3, [sp, #0]
 8024a5a:	9a03      	ldr	r2, [sp, #12]
 8024a5c:	1a9e      	subs	r6, r3, r2
 8024a5e:	2300      	movs	r3, #0
 8024a60:	e72b      	b.n	80248ba <_dtoa_r+0x71a>
 8024a62:	9b08      	ldr	r3, [sp, #32]
 8024a64:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8024a66:	9408      	str	r4, [sp, #32]
 8024a68:	1ae3      	subs	r3, r4, r3
 8024a6a:	441a      	add	r2, r3
 8024a6c:	9e00      	ldr	r6, [sp, #0]
 8024a6e:	9b03      	ldr	r3, [sp, #12]
 8024a70:	920d      	str	r2, [sp, #52]	@ 0x34
 8024a72:	2400      	movs	r4, #0
 8024a74:	e721      	b.n	80248ba <_dtoa_r+0x71a>
 8024a76:	9c08      	ldr	r4, [sp, #32]
 8024a78:	9e00      	ldr	r6, [sp, #0]
 8024a7a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8024a7c:	e728      	b.n	80248d0 <_dtoa_r+0x730>
 8024a7e:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8024a82:	e751      	b.n	8024928 <_dtoa_r+0x788>
 8024a84:	9a08      	ldr	r2, [sp, #32]
 8024a86:	9902      	ldr	r1, [sp, #8]
 8024a88:	e750      	b.n	802492c <_dtoa_r+0x78c>
 8024a8a:	f8cd 8008 	str.w	r8, [sp, #8]
 8024a8e:	e751      	b.n	8024934 <_dtoa_r+0x794>
 8024a90:	2300      	movs	r3, #0
 8024a92:	e779      	b.n	8024988 <_dtoa_r+0x7e8>
 8024a94:	9b04      	ldr	r3, [sp, #16]
 8024a96:	e777      	b.n	8024988 <_dtoa_r+0x7e8>
 8024a98:	2300      	movs	r3, #0
 8024a9a:	9308      	str	r3, [sp, #32]
 8024a9c:	e779      	b.n	8024992 <_dtoa_r+0x7f2>
 8024a9e:	d093      	beq.n	80249c8 <_dtoa_r+0x828>
 8024aa0:	9a00      	ldr	r2, [sp, #0]
 8024aa2:	331c      	adds	r3, #28
 8024aa4:	441a      	add	r2, r3
 8024aa6:	9200      	str	r2, [sp, #0]
 8024aa8:	9a06      	ldr	r2, [sp, #24]
 8024aaa:	441a      	add	r2, r3
 8024aac:	441e      	add	r6, r3
 8024aae:	9206      	str	r2, [sp, #24]
 8024ab0:	e78a      	b.n	80249c8 <_dtoa_r+0x828>
 8024ab2:	4603      	mov	r3, r0
 8024ab4:	e7f4      	b.n	8024aa0 <_dtoa_r+0x900>
 8024ab6:	9b03      	ldr	r3, [sp, #12]
 8024ab8:	2b00      	cmp	r3, #0
 8024aba:	46b8      	mov	r8, r7
 8024abc:	dc20      	bgt.n	8024b00 <_dtoa_r+0x960>
 8024abe:	469b      	mov	fp, r3
 8024ac0:	9b07      	ldr	r3, [sp, #28]
 8024ac2:	2b02      	cmp	r3, #2
 8024ac4:	dd1e      	ble.n	8024b04 <_dtoa_r+0x964>
 8024ac6:	f1bb 0f00 	cmp.w	fp, #0
 8024aca:	f47f adb1 	bne.w	8024630 <_dtoa_r+0x490>
 8024ace:	4621      	mov	r1, r4
 8024ad0:	465b      	mov	r3, fp
 8024ad2:	2205      	movs	r2, #5
 8024ad4:	4648      	mov	r0, r9
 8024ad6:	f000 fa8b 	bl	8024ff0 <__multadd>
 8024ada:	4601      	mov	r1, r0
 8024adc:	4604      	mov	r4, r0
 8024ade:	9802      	ldr	r0, [sp, #8]
 8024ae0:	f000 fc96 	bl	8025410 <__mcmp>
 8024ae4:	2800      	cmp	r0, #0
 8024ae6:	f77f ada3 	ble.w	8024630 <_dtoa_r+0x490>
 8024aea:	4656      	mov	r6, sl
 8024aec:	2331      	movs	r3, #49	@ 0x31
 8024aee:	f806 3b01 	strb.w	r3, [r6], #1
 8024af2:	f108 0801 	add.w	r8, r8, #1
 8024af6:	e59f      	b.n	8024638 <_dtoa_r+0x498>
 8024af8:	9c03      	ldr	r4, [sp, #12]
 8024afa:	46b8      	mov	r8, r7
 8024afc:	4625      	mov	r5, r4
 8024afe:	e7f4      	b.n	8024aea <_dtoa_r+0x94a>
 8024b00:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8024b04:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024b06:	2b00      	cmp	r3, #0
 8024b08:	f000 8101 	beq.w	8024d0e <_dtoa_r+0xb6e>
 8024b0c:	2e00      	cmp	r6, #0
 8024b0e:	dd05      	ble.n	8024b1c <_dtoa_r+0x97c>
 8024b10:	4629      	mov	r1, r5
 8024b12:	4632      	mov	r2, r6
 8024b14:	4648      	mov	r0, r9
 8024b16:	f000 fc0f 	bl	8025338 <__lshift>
 8024b1a:	4605      	mov	r5, r0
 8024b1c:	9b08      	ldr	r3, [sp, #32]
 8024b1e:	2b00      	cmp	r3, #0
 8024b20:	d05c      	beq.n	8024bdc <_dtoa_r+0xa3c>
 8024b22:	6869      	ldr	r1, [r5, #4]
 8024b24:	4648      	mov	r0, r9
 8024b26:	f000 fa01 	bl	8024f2c <_Balloc>
 8024b2a:	4606      	mov	r6, r0
 8024b2c:	b928      	cbnz	r0, 8024b3a <_dtoa_r+0x99a>
 8024b2e:	4b82      	ldr	r3, [pc, #520]	@ (8024d38 <_dtoa_r+0xb98>)
 8024b30:	4602      	mov	r2, r0
 8024b32:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8024b36:	f7ff bb4a 	b.w	80241ce <_dtoa_r+0x2e>
 8024b3a:	692a      	ldr	r2, [r5, #16]
 8024b3c:	3202      	adds	r2, #2
 8024b3e:	0092      	lsls	r2, r2, #2
 8024b40:	f105 010c 	add.w	r1, r5, #12
 8024b44:	300c      	adds	r0, #12
 8024b46:	f7ff fa93 	bl	8024070 <memcpy>
 8024b4a:	2201      	movs	r2, #1
 8024b4c:	4631      	mov	r1, r6
 8024b4e:	4648      	mov	r0, r9
 8024b50:	f000 fbf2 	bl	8025338 <__lshift>
 8024b54:	f10a 0301 	add.w	r3, sl, #1
 8024b58:	9300      	str	r3, [sp, #0]
 8024b5a:	eb0a 030b 	add.w	r3, sl, fp
 8024b5e:	9308      	str	r3, [sp, #32]
 8024b60:	9b04      	ldr	r3, [sp, #16]
 8024b62:	f003 0301 	and.w	r3, r3, #1
 8024b66:	462f      	mov	r7, r5
 8024b68:	9306      	str	r3, [sp, #24]
 8024b6a:	4605      	mov	r5, r0
 8024b6c:	9b00      	ldr	r3, [sp, #0]
 8024b6e:	9802      	ldr	r0, [sp, #8]
 8024b70:	4621      	mov	r1, r4
 8024b72:	f103 3bff 	add.w	fp, r3, #4294967295	@ 0xffffffff
 8024b76:	f7ff fa89 	bl	802408c <quorem>
 8024b7a:	4603      	mov	r3, r0
 8024b7c:	3330      	adds	r3, #48	@ 0x30
 8024b7e:	9003      	str	r0, [sp, #12]
 8024b80:	4639      	mov	r1, r7
 8024b82:	9802      	ldr	r0, [sp, #8]
 8024b84:	9309      	str	r3, [sp, #36]	@ 0x24
 8024b86:	f000 fc43 	bl	8025410 <__mcmp>
 8024b8a:	462a      	mov	r2, r5
 8024b8c:	9004      	str	r0, [sp, #16]
 8024b8e:	4621      	mov	r1, r4
 8024b90:	4648      	mov	r0, r9
 8024b92:	f000 fc59 	bl	8025448 <__mdiff>
 8024b96:	68c2      	ldr	r2, [r0, #12]
 8024b98:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024b9a:	4606      	mov	r6, r0
 8024b9c:	bb02      	cbnz	r2, 8024be0 <_dtoa_r+0xa40>
 8024b9e:	4601      	mov	r1, r0
 8024ba0:	9802      	ldr	r0, [sp, #8]
 8024ba2:	f000 fc35 	bl	8025410 <__mcmp>
 8024ba6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024ba8:	4602      	mov	r2, r0
 8024baa:	4631      	mov	r1, r6
 8024bac:	4648      	mov	r0, r9
 8024bae:	920c      	str	r2, [sp, #48]	@ 0x30
 8024bb0:	9309      	str	r3, [sp, #36]	@ 0x24
 8024bb2:	f000 f9fb 	bl	8024fac <_Bfree>
 8024bb6:	9b07      	ldr	r3, [sp, #28]
 8024bb8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8024bba:	9e00      	ldr	r6, [sp, #0]
 8024bbc:	ea42 0103 	orr.w	r1, r2, r3
 8024bc0:	9b06      	ldr	r3, [sp, #24]
 8024bc2:	4319      	orrs	r1, r3
 8024bc4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024bc6:	d10d      	bne.n	8024be4 <_dtoa_r+0xa44>
 8024bc8:	2b39      	cmp	r3, #57	@ 0x39
 8024bca:	d027      	beq.n	8024c1c <_dtoa_r+0xa7c>
 8024bcc:	9a04      	ldr	r2, [sp, #16]
 8024bce:	2a00      	cmp	r2, #0
 8024bd0:	dd01      	ble.n	8024bd6 <_dtoa_r+0xa36>
 8024bd2:	9b03      	ldr	r3, [sp, #12]
 8024bd4:	3331      	adds	r3, #49	@ 0x31
 8024bd6:	f88b 3000 	strb.w	r3, [fp]
 8024bda:	e52e      	b.n	802463a <_dtoa_r+0x49a>
 8024bdc:	4628      	mov	r0, r5
 8024bde:	e7b9      	b.n	8024b54 <_dtoa_r+0x9b4>
 8024be0:	2201      	movs	r2, #1
 8024be2:	e7e2      	b.n	8024baa <_dtoa_r+0xa0a>
 8024be4:	9904      	ldr	r1, [sp, #16]
 8024be6:	2900      	cmp	r1, #0
 8024be8:	db04      	blt.n	8024bf4 <_dtoa_r+0xa54>
 8024bea:	9807      	ldr	r0, [sp, #28]
 8024bec:	4301      	orrs	r1, r0
 8024bee:	9806      	ldr	r0, [sp, #24]
 8024bf0:	4301      	orrs	r1, r0
 8024bf2:	d120      	bne.n	8024c36 <_dtoa_r+0xa96>
 8024bf4:	2a00      	cmp	r2, #0
 8024bf6:	ddee      	ble.n	8024bd6 <_dtoa_r+0xa36>
 8024bf8:	9902      	ldr	r1, [sp, #8]
 8024bfa:	9300      	str	r3, [sp, #0]
 8024bfc:	2201      	movs	r2, #1
 8024bfe:	4648      	mov	r0, r9
 8024c00:	f000 fb9a 	bl	8025338 <__lshift>
 8024c04:	4621      	mov	r1, r4
 8024c06:	9002      	str	r0, [sp, #8]
 8024c08:	f000 fc02 	bl	8025410 <__mcmp>
 8024c0c:	2800      	cmp	r0, #0
 8024c0e:	9b00      	ldr	r3, [sp, #0]
 8024c10:	dc02      	bgt.n	8024c18 <_dtoa_r+0xa78>
 8024c12:	d1e0      	bne.n	8024bd6 <_dtoa_r+0xa36>
 8024c14:	07da      	lsls	r2, r3, #31
 8024c16:	d5de      	bpl.n	8024bd6 <_dtoa_r+0xa36>
 8024c18:	2b39      	cmp	r3, #57	@ 0x39
 8024c1a:	d1da      	bne.n	8024bd2 <_dtoa_r+0xa32>
 8024c1c:	2339      	movs	r3, #57	@ 0x39
 8024c1e:	f88b 3000 	strb.w	r3, [fp]
 8024c22:	4633      	mov	r3, r6
 8024c24:	461e      	mov	r6, r3
 8024c26:	3b01      	subs	r3, #1
 8024c28:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8024c2c:	2a39      	cmp	r2, #57	@ 0x39
 8024c2e:	d04e      	beq.n	8024cce <_dtoa_r+0xb2e>
 8024c30:	3201      	adds	r2, #1
 8024c32:	701a      	strb	r2, [r3, #0]
 8024c34:	e501      	b.n	802463a <_dtoa_r+0x49a>
 8024c36:	2a00      	cmp	r2, #0
 8024c38:	dd03      	ble.n	8024c42 <_dtoa_r+0xaa2>
 8024c3a:	2b39      	cmp	r3, #57	@ 0x39
 8024c3c:	d0ee      	beq.n	8024c1c <_dtoa_r+0xa7c>
 8024c3e:	3301      	adds	r3, #1
 8024c40:	e7c9      	b.n	8024bd6 <_dtoa_r+0xa36>
 8024c42:	9a00      	ldr	r2, [sp, #0]
 8024c44:	9908      	ldr	r1, [sp, #32]
 8024c46:	f802 3c01 	strb.w	r3, [r2, #-1]
 8024c4a:	428a      	cmp	r2, r1
 8024c4c:	d028      	beq.n	8024ca0 <_dtoa_r+0xb00>
 8024c4e:	9902      	ldr	r1, [sp, #8]
 8024c50:	2300      	movs	r3, #0
 8024c52:	220a      	movs	r2, #10
 8024c54:	4648      	mov	r0, r9
 8024c56:	f000 f9cb 	bl	8024ff0 <__multadd>
 8024c5a:	42af      	cmp	r7, r5
 8024c5c:	9002      	str	r0, [sp, #8]
 8024c5e:	f04f 0300 	mov.w	r3, #0
 8024c62:	f04f 020a 	mov.w	r2, #10
 8024c66:	4639      	mov	r1, r7
 8024c68:	4648      	mov	r0, r9
 8024c6a:	d107      	bne.n	8024c7c <_dtoa_r+0xadc>
 8024c6c:	f000 f9c0 	bl	8024ff0 <__multadd>
 8024c70:	4607      	mov	r7, r0
 8024c72:	4605      	mov	r5, r0
 8024c74:	9b00      	ldr	r3, [sp, #0]
 8024c76:	3301      	adds	r3, #1
 8024c78:	9300      	str	r3, [sp, #0]
 8024c7a:	e777      	b.n	8024b6c <_dtoa_r+0x9cc>
 8024c7c:	f000 f9b8 	bl	8024ff0 <__multadd>
 8024c80:	4629      	mov	r1, r5
 8024c82:	4607      	mov	r7, r0
 8024c84:	2300      	movs	r3, #0
 8024c86:	220a      	movs	r2, #10
 8024c88:	4648      	mov	r0, r9
 8024c8a:	f000 f9b1 	bl	8024ff0 <__multadd>
 8024c8e:	4605      	mov	r5, r0
 8024c90:	e7f0      	b.n	8024c74 <_dtoa_r+0xad4>
 8024c92:	f1bb 0f00 	cmp.w	fp, #0
 8024c96:	bfcc      	ite	gt
 8024c98:	465e      	movgt	r6, fp
 8024c9a:	2601      	movle	r6, #1
 8024c9c:	4456      	add	r6, sl
 8024c9e:	2700      	movs	r7, #0
 8024ca0:	9902      	ldr	r1, [sp, #8]
 8024ca2:	9300      	str	r3, [sp, #0]
 8024ca4:	2201      	movs	r2, #1
 8024ca6:	4648      	mov	r0, r9
 8024ca8:	f000 fb46 	bl	8025338 <__lshift>
 8024cac:	4621      	mov	r1, r4
 8024cae:	9002      	str	r0, [sp, #8]
 8024cb0:	f000 fbae 	bl	8025410 <__mcmp>
 8024cb4:	2800      	cmp	r0, #0
 8024cb6:	dcb4      	bgt.n	8024c22 <_dtoa_r+0xa82>
 8024cb8:	d102      	bne.n	8024cc0 <_dtoa_r+0xb20>
 8024cba:	9b00      	ldr	r3, [sp, #0]
 8024cbc:	07db      	lsls	r3, r3, #31
 8024cbe:	d4b0      	bmi.n	8024c22 <_dtoa_r+0xa82>
 8024cc0:	4633      	mov	r3, r6
 8024cc2:	461e      	mov	r6, r3
 8024cc4:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8024cc8:	2a30      	cmp	r2, #48	@ 0x30
 8024cca:	d0fa      	beq.n	8024cc2 <_dtoa_r+0xb22>
 8024ccc:	e4b5      	b.n	802463a <_dtoa_r+0x49a>
 8024cce:	459a      	cmp	sl, r3
 8024cd0:	d1a8      	bne.n	8024c24 <_dtoa_r+0xa84>
 8024cd2:	2331      	movs	r3, #49	@ 0x31
 8024cd4:	f108 0801 	add.w	r8, r8, #1
 8024cd8:	f88a 3000 	strb.w	r3, [sl]
 8024cdc:	e4ad      	b.n	802463a <_dtoa_r+0x49a>
 8024cde:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8024ce0:	f8df a058 	ldr.w	sl, [pc, #88]	@ 8024d3c <_dtoa_r+0xb9c>
 8024ce4:	b11b      	cbz	r3, 8024cee <_dtoa_r+0xb4e>
 8024ce6:	f10a 0308 	add.w	r3, sl, #8
 8024cea:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8024cec:	6013      	str	r3, [r2, #0]
 8024cee:	4650      	mov	r0, sl
 8024cf0:	b017      	add	sp, #92	@ 0x5c
 8024cf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024cf6:	9b07      	ldr	r3, [sp, #28]
 8024cf8:	2b01      	cmp	r3, #1
 8024cfa:	f77f ae2e 	ble.w	802495a <_dtoa_r+0x7ba>
 8024cfe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8024d00:	9308      	str	r3, [sp, #32]
 8024d02:	2001      	movs	r0, #1
 8024d04:	e64d      	b.n	80249a2 <_dtoa_r+0x802>
 8024d06:	f1bb 0f00 	cmp.w	fp, #0
 8024d0a:	f77f aed9 	ble.w	8024ac0 <_dtoa_r+0x920>
 8024d0e:	4656      	mov	r6, sl
 8024d10:	9802      	ldr	r0, [sp, #8]
 8024d12:	4621      	mov	r1, r4
 8024d14:	f7ff f9ba 	bl	802408c <quorem>
 8024d18:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 8024d1c:	f806 3b01 	strb.w	r3, [r6], #1
 8024d20:	eba6 020a 	sub.w	r2, r6, sl
 8024d24:	4593      	cmp	fp, r2
 8024d26:	ddb4      	ble.n	8024c92 <_dtoa_r+0xaf2>
 8024d28:	9902      	ldr	r1, [sp, #8]
 8024d2a:	2300      	movs	r3, #0
 8024d2c:	220a      	movs	r2, #10
 8024d2e:	4648      	mov	r0, r9
 8024d30:	f000 f95e 	bl	8024ff0 <__multadd>
 8024d34:	9002      	str	r0, [sp, #8]
 8024d36:	e7eb      	b.n	8024d10 <_dtoa_r+0xb70>
 8024d38:	08026342 	.word	0x08026342
 8024d3c:	080262c6 	.word	0x080262c6

08024d40 <_free_r>:
 8024d40:	b538      	push	{r3, r4, r5, lr}
 8024d42:	4605      	mov	r5, r0
 8024d44:	2900      	cmp	r1, #0
 8024d46:	d041      	beq.n	8024dcc <_free_r+0x8c>
 8024d48:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8024d4c:	1f0c      	subs	r4, r1, #4
 8024d4e:	2b00      	cmp	r3, #0
 8024d50:	bfb8      	it	lt
 8024d52:	18e4      	addlt	r4, r4, r3
 8024d54:	f7ff f816 	bl	8023d84 <__malloc_lock>
 8024d58:	4a1d      	ldr	r2, [pc, #116]	@ (8024dd0 <_free_r+0x90>)
 8024d5a:	6813      	ldr	r3, [r2, #0]
 8024d5c:	b933      	cbnz	r3, 8024d6c <_free_r+0x2c>
 8024d5e:	6063      	str	r3, [r4, #4]
 8024d60:	6014      	str	r4, [r2, #0]
 8024d62:	4628      	mov	r0, r5
 8024d64:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8024d68:	f7ff b812 	b.w	8023d90 <__malloc_unlock>
 8024d6c:	42a3      	cmp	r3, r4
 8024d6e:	d908      	bls.n	8024d82 <_free_r+0x42>
 8024d70:	6820      	ldr	r0, [r4, #0]
 8024d72:	1821      	adds	r1, r4, r0
 8024d74:	428b      	cmp	r3, r1
 8024d76:	bf01      	itttt	eq
 8024d78:	6819      	ldreq	r1, [r3, #0]
 8024d7a:	685b      	ldreq	r3, [r3, #4]
 8024d7c:	1809      	addeq	r1, r1, r0
 8024d7e:	6021      	streq	r1, [r4, #0]
 8024d80:	e7ed      	b.n	8024d5e <_free_r+0x1e>
 8024d82:	461a      	mov	r2, r3
 8024d84:	685b      	ldr	r3, [r3, #4]
 8024d86:	b10b      	cbz	r3, 8024d8c <_free_r+0x4c>
 8024d88:	42a3      	cmp	r3, r4
 8024d8a:	d9fa      	bls.n	8024d82 <_free_r+0x42>
 8024d8c:	6811      	ldr	r1, [r2, #0]
 8024d8e:	1850      	adds	r0, r2, r1
 8024d90:	42a0      	cmp	r0, r4
 8024d92:	d10b      	bne.n	8024dac <_free_r+0x6c>
 8024d94:	6820      	ldr	r0, [r4, #0]
 8024d96:	4401      	add	r1, r0
 8024d98:	1850      	adds	r0, r2, r1
 8024d9a:	4283      	cmp	r3, r0
 8024d9c:	6011      	str	r1, [r2, #0]
 8024d9e:	d1e0      	bne.n	8024d62 <_free_r+0x22>
 8024da0:	6818      	ldr	r0, [r3, #0]
 8024da2:	685b      	ldr	r3, [r3, #4]
 8024da4:	6053      	str	r3, [r2, #4]
 8024da6:	4408      	add	r0, r1
 8024da8:	6010      	str	r0, [r2, #0]
 8024daa:	e7da      	b.n	8024d62 <_free_r+0x22>
 8024dac:	d902      	bls.n	8024db4 <_free_r+0x74>
 8024dae:	230c      	movs	r3, #12
 8024db0:	602b      	str	r3, [r5, #0]
 8024db2:	e7d6      	b.n	8024d62 <_free_r+0x22>
 8024db4:	6820      	ldr	r0, [r4, #0]
 8024db6:	1821      	adds	r1, r4, r0
 8024db8:	428b      	cmp	r3, r1
 8024dba:	bf04      	itt	eq
 8024dbc:	6819      	ldreq	r1, [r3, #0]
 8024dbe:	685b      	ldreq	r3, [r3, #4]
 8024dc0:	6063      	str	r3, [r4, #4]
 8024dc2:	bf04      	itt	eq
 8024dc4:	1809      	addeq	r1, r1, r0
 8024dc6:	6021      	streq	r1, [r4, #0]
 8024dc8:	6054      	str	r4, [r2, #4]
 8024dca:	e7ca      	b.n	8024d62 <_free_r+0x22>
 8024dcc:	bd38      	pop	{r3, r4, r5, pc}
 8024dce:	bf00      	nop
 8024dd0:	2000223c 	.word	0x2000223c

08024dd4 <__sflush_r>:
 8024dd4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8024dd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8024ddc:	0716      	lsls	r6, r2, #28
 8024dde:	4605      	mov	r5, r0
 8024de0:	460c      	mov	r4, r1
 8024de2:	d454      	bmi.n	8024e8e <__sflush_r+0xba>
 8024de4:	684b      	ldr	r3, [r1, #4]
 8024de6:	2b00      	cmp	r3, #0
 8024de8:	dc02      	bgt.n	8024df0 <__sflush_r+0x1c>
 8024dea:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8024dec:	2b00      	cmp	r3, #0
 8024dee:	dd48      	ble.n	8024e82 <__sflush_r+0xae>
 8024df0:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8024df2:	2e00      	cmp	r6, #0
 8024df4:	d045      	beq.n	8024e82 <__sflush_r+0xae>
 8024df6:	2300      	movs	r3, #0
 8024df8:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8024dfc:	682f      	ldr	r7, [r5, #0]
 8024dfe:	6a21      	ldr	r1, [r4, #32]
 8024e00:	602b      	str	r3, [r5, #0]
 8024e02:	d030      	beq.n	8024e66 <__sflush_r+0x92>
 8024e04:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8024e06:	89a3      	ldrh	r3, [r4, #12]
 8024e08:	0759      	lsls	r1, r3, #29
 8024e0a:	d505      	bpl.n	8024e18 <__sflush_r+0x44>
 8024e0c:	6863      	ldr	r3, [r4, #4]
 8024e0e:	1ad2      	subs	r2, r2, r3
 8024e10:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8024e12:	b10b      	cbz	r3, 8024e18 <__sflush_r+0x44>
 8024e14:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8024e16:	1ad2      	subs	r2, r2, r3
 8024e18:	2300      	movs	r3, #0
 8024e1a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8024e1c:	6a21      	ldr	r1, [r4, #32]
 8024e1e:	4628      	mov	r0, r5
 8024e20:	47b0      	blx	r6
 8024e22:	1c43      	adds	r3, r0, #1
 8024e24:	89a3      	ldrh	r3, [r4, #12]
 8024e26:	d106      	bne.n	8024e36 <__sflush_r+0x62>
 8024e28:	6829      	ldr	r1, [r5, #0]
 8024e2a:	291d      	cmp	r1, #29
 8024e2c:	d82b      	bhi.n	8024e86 <__sflush_r+0xb2>
 8024e2e:	4a2a      	ldr	r2, [pc, #168]	@ (8024ed8 <__sflush_r+0x104>)
 8024e30:	40ca      	lsrs	r2, r1
 8024e32:	07d6      	lsls	r6, r2, #31
 8024e34:	d527      	bpl.n	8024e86 <__sflush_r+0xb2>
 8024e36:	2200      	movs	r2, #0
 8024e38:	6062      	str	r2, [r4, #4]
 8024e3a:	04d9      	lsls	r1, r3, #19
 8024e3c:	6922      	ldr	r2, [r4, #16]
 8024e3e:	6022      	str	r2, [r4, #0]
 8024e40:	d504      	bpl.n	8024e4c <__sflush_r+0x78>
 8024e42:	1c42      	adds	r2, r0, #1
 8024e44:	d101      	bne.n	8024e4a <__sflush_r+0x76>
 8024e46:	682b      	ldr	r3, [r5, #0]
 8024e48:	b903      	cbnz	r3, 8024e4c <__sflush_r+0x78>
 8024e4a:	6560      	str	r0, [r4, #84]	@ 0x54
 8024e4c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8024e4e:	602f      	str	r7, [r5, #0]
 8024e50:	b1b9      	cbz	r1, 8024e82 <__sflush_r+0xae>
 8024e52:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8024e56:	4299      	cmp	r1, r3
 8024e58:	d002      	beq.n	8024e60 <__sflush_r+0x8c>
 8024e5a:	4628      	mov	r0, r5
 8024e5c:	f7ff ff70 	bl	8024d40 <_free_r>
 8024e60:	2300      	movs	r3, #0
 8024e62:	6363      	str	r3, [r4, #52]	@ 0x34
 8024e64:	e00d      	b.n	8024e82 <__sflush_r+0xae>
 8024e66:	2301      	movs	r3, #1
 8024e68:	4628      	mov	r0, r5
 8024e6a:	47b0      	blx	r6
 8024e6c:	4602      	mov	r2, r0
 8024e6e:	1c50      	adds	r0, r2, #1
 8024e70:	d1c9      	bne.n	8024e06 <__sflush_r+0x32>
 8024e72:	682b      	ldr	r3, [r5, #0]
 8024e74:	2b00      	cmp	r3, #0
 8024e76:	d0c6      	beq.n	8024e06 <__sflush_r+0x32>
 8024e78:	2b1d      	cmp	r3, #29
 8024e7a:	d001      	beq.n	8024e80 <__sflush_r+0xac>
 8024e7c:	2b16      	cmp	r3, #22
 8024e7e:	d11e      	bne.n	8024ebe <__sflush_r+0xea>
 8024e80:	602f      	str	r7, [r5, #0]
 8024e82:	2000      	movs	r0, #0
 8024e84:	e022      	b.n	8024ecc <__sflush_r+0xf8>
 8024e86:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8024e8a:	b21b      	sxth	r3, r3
 8024e8c:	e01b      	b.n	8024ec6 <__sflush_r+0xf2>
 8024e8e:	690f      	ldr	r7, [r1, #16]
 8024e90:	2f00      	cmp	r7, #0
 8024e92:	d0f6      	beq.n	8024e82 <__sflush_r+0xae>
 8024e94:	0793      	lsls	r3, r2, #30
 8024e96:	680e      	ldr	r6, [r1, #0]
 8024e98:	bf08      	it	eq
 8024e9a:	694b      	ldreq	r3, [r1, #20]
 8024e9c:	600f      	str	r7, [r1, #0]
 8024e9e:	bf18      	it	ne
 8024ea0:	2300      	movne	r3, #0
 8024ea2:	eba6 0807 	sub.w	r8, r6, r7
 8024ea6:	608b      	str	r3, [r1, #8]
 8024ea8:	f1b8 0f00 	cmp.w	r8, #0
 8024eac:	dde9      	ble.n	8024e82 <__sflush_r+0xae>
 8024eae:	6a21      	ldr	r1, [r4, #32]
 8024eb0:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8024eb2:	4643      	mov	r3, r8
 8024eb4:	463a      	mov	r2, r7
 8024eb6:	4628      	mov	r0, r5
 8024eb8:	47b0      	blx	r6
 8024eba:	2800      	cmp	r0, #0
 8024ebc:	dc08      	bgt.n	8024ed0 <__sflush_r+0xfc>
 8024ebe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8024ec2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8024ec6:	81a3      	strh	r3, [r4, #12]
 8024ec8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8024ecc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8024ed0:	4407      	add	r7, r0
 8024ed2:	eba8 0800 	sub.w	r8, r8, r0
 8024ed6:	e7e7      	b.n	8024ea8 <__sflush_r+0xd4>
 8024ed8:	20400001 	.word	0x20400001

08024edc <_fflush_r>:
 8024edc:	b538      	push	{r3, r4, r5, lr}
 8024ede:	690b      	ldr	r3, [r1, #16]
 8024ee0:	4605      	mov	r5, r0
 8024ee2:	460c      	mov	r4, r1
 8024ee4:	b913      	cbnz	r3, 8024eec <_fflush_r+0x10>
 8024ee6:	2500      	movs	r5, #0
 8024ee8:	4628      	mov	r0, r5
 8024eea:	bd38      	pop	{r3, r4, r5, pc}
 8024eec:	b118      	cbz	r0, 8024ef6 <_fflush_r+0x1a>
 8024eee:	6a03      	ldr	r3, [r0, #32]
 8024ef0:	b90b      	cbnz	r3, 8024ef6 <_fflush_r+0x1a>
 8024ef2:	f7fe ffdf 	bl	8023eb4 <__sinit>
 8024ef6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8024efa:	2b00      	cmp	r3, #0
 8024efc:	d0f3      	beq.n	8024ee6 <_fflush_r+0xa>
 8024efe:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8024f00:	07d0      	lsls	r0, r2, #31
 8024f02:	d404      	bmi.n	8024f0e <_fflush_r+0x32>
 8024f04:	0599      	lsls	r1, r3, #22
 8024f06:	d402      	bmi.n	8024f0e <_fflush_r+0x32>
 8024f08:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8024f0a:	f7ff f8aa 	bl	8024062 <__retarget_lock_acquire_recursive>
 8024f0e:	4628      	mov	r0, r5
 8024f10:	4621      	mov	r1, r4
 8024f12:	f7ff ff5f 	bl	8024dd4 <__sflush_r>
 8024f16:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8024f18:	07da      	lsls	r2, r3, #31
 8024f1a:	4605      	mov	r5, r0
 8024f1c:	d4e4      	bmi.n	8024ee8 <_fflush_r+0xc>
 8024f1e:	89a3      	ldrh	r3, [r4, #12]
 8024f20:	059b      	lsls	r3, r3, #22
 8024f22:	d4e1      	bmi.n	8024ee8 <_fflush_r+0xc>
 8024f24:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8024f26:	f7ff f89d 	bl	8024064 <__retarget_lock_release_recursive>
 8024f2a:	e7dd      	b.n	8024ee8 <_fflush_r+0xc>

08024f2c <_Balloc>:
 8024f2c:	b570      	push	{r4, r5, r6, lr}
 8024f2e:	69c6      	ldr	r6, [r0, #28]
 8024f30:	4604      	mov	r4, r0
 8024f32:	460d      	mov	r5, r1
 8024f34:	b976      	cbnz	r6, 8024f54 <_Balloc+0x28>
 8024f36:	2010      	movs	r0, #16
 8024f38:	f7ed fcf6 	bl	8012928 <__wrap_malloc>
 8024f3c:	4602      	mov	r2, r0
 8024f3e:	61e0      	str	r0, [r4, #28]
 8024f40:	b920      	cbnz	r0, 8024f4c <_Balloc+0x20>
 8024f42:	4b18      	ldr	r3, [pc, #96]	@ (8024fa4 <_Balloc+0x78>)
 8024f44:	4818      	ldr	r0, [pc, #96]	@ (8024fa8 <_Balloc+0x7c>)
 8024f46:	216b      	movs	r1, #107	@ 0x6b
 8024f48:	f000 fd0c 	bl	8025964 <__assert_func>
 8024f4c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8024f50:	6006      	str	r6, [r0, #0]
 8024f52:	60c6      	str	r6, [r0, #12]
 8024f54:	69e6      	ldr	r6, [r4, #28]
 8024f56:	68f3      	ldr	r3, [r6, #12]
 8024f58:	b183      	cbz	r3, 8024f7c <_Balloc+0x50>
 8024f5a:	69e3      	ldr	r3, [r4, #28]
 8024f5c:	68db      	ldr	r3, [r3, #12]
 8024f5e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8024f62:	b9b8      	cbnz	r0, 8024f94 <_Balloc+0x68>
 8024f64:	2101      	movs	r1, #1
 8024f66:	fa01 f605 	lsl.w	r6, r1, r5
 8024f6a:	1d72      	adds	r2, r6, #5
 8024f6c:	0092      	lsls	r2, r2, #2
 8024f6e:	4620      	mov	r0, r4
 8024f70:	f000 fd16 	bl	80259a0 <_calloc_r>
 8024f74:	b160      	cbz	r0, 8024f90 <_Balloc+0x64>
 8024f76:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8024f7a:	e00e      	b.n	8024f9a <_Balloc+0x6e>
 8024f7c:	2221      	movs	r2, #33	@ 0x21
 8024f7e:	2104      	movs	r1, #4
 8024f80:	4620      	mov	r0, r4
 8024f82:	f000 fd0d 	bl	80259a0 <_calloc_r>
 8024f86:	69e3      	ldr	r3, [r4, #28]
 8024f88:	60f0      	str	r0, [r6, #12]
 8024f8a:	68db      	ldr	r3, [r3, #12]
 8024f8c:	2b00      	cmp	r3, #0
 8024f8e:	d1e4      	bne.n	8024f5a <_Balloc+0x2e>
 8024f90:	2000      	movs	r0, #0
 8024f92:	bd70      	pop	{r4, r5, r6, pc}
 8024f94:	6802      	ldr	r2, [r0, #0]
 8024f96:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8024f9a:	2300      	movs	r3, #0
 8024f9c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8024fa0:	e7f7      	b.n	8024f92 <_Balloc+0x66>
 8024fa2:	bf00      	nop
 8024fa4:	080262d3 	.word	0x080262d3
 8024fa8:	08026353 	.word	0x08026353

08024fac <_Bfree>:
 8024fac:	b570      	push	{r4, r5, r6, lr}
 8024fae:	69c6      	ldr	r6, [r0, #28]
 8024fb0:	4605      	mov	r5, r0
 8024fb2:	460c      	mov	r4, r1
 8024fb4:	b976      	cbnz	r6, 8024fd4 <_Bfree+0x28>
 8024fb6:	2010      	movs	r0, #16
 8024fb8:	f7ed fcb6 	bl	8012928 <__wrap_malloc>
 8024fbc:	4602      	mov	r2, r0
 8024fbe:	61e8      	str	r0, [r5, #28]
 8024fc0:	b920      	cbnz	r0, 8024fcc <_Bfree+0x20>
 8024fc2:	4b09      	ldr	r3, [pc, #36]	@ (8024fe8 <_Bfree+0x3c>)
 8024fc4:	4809      	ldr	r0, [pc, #36]	@ (8024fec <_Bfree+0x40>)
 8024fc6:	218f      	movs	r1, #143	@ 0x8f
 8024fc8:	f000 fccc 	bl	8025964 <__assert_func>
 8024fcc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8024fd0:	6006      	str	r6, [r0, #0]
 8024fd2:	60c6      	str	r6, [r0, #12]
 8024fd4:	b13c      	cbz	r4, 8024fe6 <_Bfree+0x3a>
 8024fd6:	69eb      	ldr	r3, [r5, #28]
 8024fd8:	6862      	ldr	r2, [r4, #4]
 8024fda:	68db      	ldr	r3, [r3, #12]
 8024fdc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8024fe0:	6021      	str	r1, [r4, #0]
 8024fe2:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8024fe6:	bd70      	pop	{r4, r5, r6, pc}
 8024fe8:	080262d3 	.word	0x080262d3
 8024fec:	08026353 	.word	0x08026353

08024ff0 <__multadd>:
 8024ff0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8024ff4:	690d      	ldr	r5, [r1, #16]
 8024ff6:	4607      	mov	r7, r0
 8024ff8:	460c      	mov	r4, r1
 8024ffa:	461e      	mov	r6, r3
 8024ffc:	f101 0c14 	add.w	ip, r1, #20
 8025000:	2000      	movs	r0, #0
 8025002:	f8dc 3000 	ldr.w	r3, [ip]
 8025006:	b299      	uxth	r1, r3
 8025008:	fb02 6101 	mla	r1, r2, r1, r6
 802500c:	0c1e      	lsrs	r6, r3, #16
 802500e:	0c0b      	lsrs	r3, r1, #16
 8025010:	fb02 3306 	mla	r3, r2, r6, r3
 8025014:	b289      	uxth	r1, r1
 8025016:	3001      	adds	r0, #1
 8025018:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 802501c:	4285      	cmp	r5, r0
 802501e:	f84c 1b04 	str.w	r1, [ip], #4
 8025022:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8025026:	dcec      	bgt.n	8025002 <__multadd+0x12>
 8025028:	b30e      	cbz	r6, 802506e <__multadd+0x7e>
 802502a:	68a3      	ldr	r3, [r4, #8]
 802502c:	42ab      	cmp	r3, r5
 802502e:	dc19      	bgt.n	8025064 <__multadd+0x74>
 8025030:	6861      	ldr	r1, [r4, #4]
 8025032:	4638      	mov	r0, r7
 8025034:	3101      	adds	r1, #1
 8025036:	f7ff ff79 	bl	8024f2c <_Balloc>
 802503a:	4680      	mov	r8, r0
 802503c:	b928      	cbnz	r0, 802504a <__multadd+0x5a>
 802503e:	4602      	mov	r2, r0
 8025040:	4b0c      	ldr	r3, [pc, #48]	@ (8025074 <__multadd+0x84>)
 8025042:	480d      	ldr	r0, [pc, #52]	@ (8025078 <__multadd+0x88>)
 8025044:	21ba      	movs	r1, #186	@ 0xba
 8025046:	f000 fc8d 	bl	8025964 <__assert_func>
 802504a:	6922      	ldr	r2, [r4, #16]
 802504c:	3202      	adds	r2, #2
 802504e:	f104 010c 	add.w	r1, r4, #12
 8025052:	0092      	lsls	r2, r2, #2
 8025054:	300c      	adds	r0, #12
 8025056:	f7ff f80b 	bl	8024070 <memcpy>
 802505a:	4621      	mov	r1, r4
 802505c:	4638      	mov	r0, r7
 802505e:	f7ff ffa5 	bl	8024fac <_Bfree>
 8025062:	4644      	mov	r4, r8
 8025064:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8025068:	3501      	adds	r5, #1
 802506a:	615e      	str	r6, [r3, #20]
 802506c:	6125      	str	r5, [r4, #16]
 802506e:	4620      	mov	r0, r4
 8025070:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025074:	08026342 	.word	0x08026342
 8025078:	08026353 	.word	0x08026353

0802507c <__hi0bits>:
 802507c:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8025080:	4603      	mov	r3, r0
 8025082:	bf36      	itet	cc
 8025084:	0403      	lslcc	r3, r0, #16
 8025086:	2000      	movcs	r0, #0
 8025088:	2010      	movcc	r0, #16
 802508a:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 802508e:	bf3c      	itt	cc
 8025090:	021b      	lslcc	r3, r3, #8
 8025092:	3008      	addcc	r0, #8
 8025094:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8025098:	bf3c      	itt	cc
 802509a:	011b      	lslcc	r3, r3, #4
 802509c:	3004      	addcc	r0, #4
 802509e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80250a2:	bf3c      	itt	cc
 80250a4:	009b      	lslcc	r3, r3, #2
 80250a6:	3002      	addcc	r0, #2
 80250a8:	2b00      	cmp	r3, #0
 80250aa:	db05      	blt.n	80250b8 <__hi0bits+0x3c>
 80250ac:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 80250b0:	f100 0001 	add.w	r0, r0, #1
 80250b4:	bf08      	it	eq
 80250b6:	2020      	moveq	r0, #32
 80250b8:	4770      	bx	lr

080250ba <__lo0bits>:
 80250ba:	6803      	ldr	r3, [r0, #0]
 80250bc:	4602      	mov	r2, r0
 80250be:	f013 0007 	ands.w	r0, r3, #7
 80250c2:	d00b      	beq.n	80250dc <__lo0bits+0x22>
 80250c4:	07d9      	lsls	r1, r3, #31
 80250c6:	d421      	bmi.n	802510c <__lo0bits+0x52>
 80250c8:	0798      	lsls	r0, r3, #30
 80250ca:	bf49      	itett	mi
 80250cc:	085b      	lsrmi	r3, r3, #1
 80250ce:	089b      	lsrpl	r3, r3, #2
 80250d0:	2001      	movmi	r0, #1
 80250d2:	6013      	strmi	r3, [r2, #0]
 80250d4:	bf5c      	itt	pl
 80250d6:	6013      	strpl	r3, [r2, #0]
 80250d8:	2002      	movpl	r0, #2
 80250da:	4770      	bx	lr
 80250dc:	b299      	uxth	r1, r3
 80250de:	b909      	cbnz	r1, 80250e4 <__lo0bits+0x2a>
 80250e0:	0c1b      	lsrs	r3, r3, #16
 80250e2:	2010      	movs	r0, #16
 80250e4:	b2d9      	uxtb	r1, r3
 80250e6:	b909      	cbnz	r1, 80250ec <__lo0bits+0x32>
 80250e8:	3008      	adds	r0, #8
 80250ea:	0a1b      	lsrs	r3, r3, #8
 80250ec:	0719      	lsls	r1, r3, #28
 80250ee:	bf04      	itt	eq
 80250f0:	091b      	lsreq	r3, r3, #4
 80250f2:	3004      	addeq	r0, #4
 80250f4:	0799      	lsls	r1, r3, #30
 80250f6:	bf04      	itt	eq
 80250f8:	089b      	lsreq	r3, r3, #2
 80250fa:	3002      	addeq	r0, #2
 80250fc:	07d9      	lsls	r1, r3, #31
 80250fe:	d403      	bmi.n	8025108 <__lo0bits+0x4e>
 8025100:	085b      	lsrs	r3, r3, #1
 8025102:	f100 0001 	add.w	r0, r0, #1
 8025106:	d003      	beq.n	8025110 <__lo0bits+0x56>
 8025108:	6013      	str	r3, [r2, #0]
 802510a:	4770      	bx	lr
 802510c:	2000      	movs	r0, #0
 802510e:	4770      	bx	lr
 8025110:	2020      	movs	r0, #32
 8025112:	4770      	bx	lr

08025114 <__i2b>:
 8025114:	b510      	push	{r4, lr}
 8025116:	460c      	mov	r4, r1
 8025118:	2101      	movs	r1, #1
 802511a:	f7ff ff07 	bl	8024f2c <_Balloc>
 802511e:	4602      	mov	r2, r0
 8025120:	b928      	cbnz	r0, 802512e <__i2b+0x1a>
 8025122:	4b05      	ldr	r3, [pc, #20]	@ (8025138 <__i2b+0x24>)
 8025124:	4805      	ldr	r0, [pc, #20]	@ (802513c <__i2b+0x28>)
 8025126:	f240 1145 	movw	r1, #325	@ 0x145
 802512a:	f000 fc1b 	bl	8025964 <__assert_func>
 802512e:	2301      	movs	r3, #1
 8025130:	6144      	str	r4, [r0, #20]
 8025132:	6103      	str	r3, [r0, #16]
 8025134:	bd10      	pop	{r4, pc}
 8025136:	bf00      	nop
 8025138:	08026342 	.word	0x08026342
 802513c:	08026353 	.word	0x08026353

08025140 <__multiply>:
 8025140:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025144:	4617      	mov	r7, r2
 8025146:	690a      	ldr	r2, [r1, #16]
 8025148:	693b      	ldr	r3, [r7, #16]
 802514a:	429a      	cmp	r2, r3
 802514c:	bfa8      	it	ge
 802514e:	463b      	movge	r3, r7
 8025150:	4689      	mov	r9, r1
 8025152:	bfa4      	itt	ge
 8025154:	460f      	movge	r7, r1
 8025156:	4699      	movge	r9, r3
 8025158:	693d      	ldr	r5, [r7, #16]
 802515a:	f8d9 a010 	ldr.w	sl, [r9, #16]
 802515e:	68bb      	ldr	r3, [r7, #8]
 8025160:	6879      	ldr	r1, [r7, #4]
 8025162:	eb05 060a 	add.w	r6, r5, sl
 8025166:	42b3      	cmp	r3, r6
 8025168:	b085      	sub	sp, #20
 802516a:	bfb8      	it	lt
 802516c:	3101      	addlt	r1, #1
 802516e:	f7ff fedd 	bl	8024f2c <_Balloc>
 8025172:	b930      	cbnz	r0, 8025182 <__multiply+0x42>
 8025174:	4602      	mov	r2, r0
 8025176:	4b41      	ldr	r3, [pc, #260]	@ (802527c <__multiply+0x13c>)
 8025178:	4841      	ldr	r0, [pc, #260]	@ (8025280 <__multiply+0x140>)
 802517a:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 802517e:	f000 fbf1 	bl	8025964 <__assert_func>
 8025182:	f100 0414 	add.w	r4, r0, #20
 8025186:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 802518a:	4623      	mov	r3, r4
 802518c:	2200      	movs	r2, #0
 802518e:	4573      	cmp	r3, lr
 8025190:	d320      	bcc.n	80251d4 <__multiply+0x94>
 8025192:	f107 0814 	add.w	r8, r7, #20
 8025196:	f109 0114 	add.w	r1, r9, #20
 802519a:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 802519e:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 80251a2:	9302      	str	r3, [sp, #8]
 80251a4:	1beb      	subs	r3, r5, r7
 80251a6:	3b15      	subs	r3, #21
 80251a8:	f023 0303 	bic.w	r3, r3, #3
 80251ac:	3304      	adds	r3, #4
 80251ae:	3715      	adds	r7, #21
 80251b0:	42bd      	cmp	r5, r7
 80251b2:	bf38      	it	cc
 80251b4:	2304      	movcc	r3, #4
 80251b6:	9301      	str	r3, [sp, #4]
 80251b8:	9b02      	ldr	r3, [sp, #8]
 80251ba:	9103      	str	r1, [sp, #12]
 80251bc:	428b      	cmp	r3, r1
 80251be:	d80c      	bhi.n	80251da <__multiply+0x9a>
 80251c0:	2e00      	cmp	r6, #0
 80251c2:	dd03      	ble.n	80251cc <__multiply+0x8c>
 80251c4:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 80251c8:	2b00      	cmp	r3, #0
 80251ca:	d055      	beq.n	8025278 <__multiply+0x138>
 80251cc:	6106      	str	r6, [r0, #16]
 80251ce:	b005      	add	sp, #20
 80251d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80251d4:	f843 2b04 	str.w	r2, [r3], #4
 80251d8:	e7d9      	b.n	802518e <__multiply+0x4e>
 80251da:	f8b1 a000 	ldrh.w	sl, [r1]
 80251de:	f1ba 0f00 	cmp.w	sl, #0
 80251e2:	d01f      	beq.n	8025224 <__multiply+0xe4>
 80251e4:	46c4      	mov	ip, r8
 80251e6:	46a1      	mov	r9, r4
 80251e8:	2700      	movs	r7, #0
 80251ea:	f85c 2b04 	ldr.w	r2, [ip], #4
 80251ee:	f8d9 3000 	ldr.w	r3, [r9]
 80251f2:	fa1f fb82 	uxth.w	fp, r2
 80251f6:	b29b      	uxth	r3, r3
 80251f8:	fb0a 330b 	mla	r3, sl, fp, r3
 80251fc:	443b      	add	r3, r7
 80251fe:	f8d9 7000 	ldr.w	r7, [r9]
 8025202:	0c12      	lsrs	r2, r2, #16
 8025204:	0c3f      	lsrs	r7, r7, #16
 8025206:	fb0a 7202 	mla	r2, sl, r2, r7
 802520a:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 802520e:	b29b      	uxth	r3, r3
 8025210:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8025214:	4565      	cmp	r5, ip
 8025216:	f849 3b04 	str.w	r3, [r9], #4
 802521a:	ea4f 4712 	mov.w	r7, r2, lsr #16
 802521e:	d8e4      	bhi.n	80251ea <__multiply+0xaa>
 8025220:	9b01      	ldr	r3, [sp, #4]
 8025222:	50e7      	str	r7, [r4, r3]
 8025224:	9b03      	ldr	r3, [sp, #12]
 8025226:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 802522a:	3104      	adds	r1, #4
 802522c:	f1b9 0f00 	cmp.w	r9, #0
 8025230:	d020      	beq.n	8025274 <__multiply+0x134>
 8025232:	6823      	ldr	r3, [r4, #0]
 8025234:	4647      	mov	r7, r8
 8025236:	46a4      	mov	ip, r4
 8025238:	f04f 0a00 	mov.w	sl, #0
 802523c:	f8b7 b000 	ldrh.w	fp, [r7]
 8025240:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 8025244:	fb09 220b 	mla	r2, r9, fp, r2
 8025248:	4452      	add	r2, sl
 802524a:	b29b      	uxth	r3, r3
 802524c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8025250:	f84c 3b04 	str.w	r3, [ip], #4
 8025254:	f857 3b04 	ldr.w	r3, [r7], #4
 8025258:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 802525c:	f8bc 3000 	ldrh.w	r3, [ip]
 8025260:	fb09 330a 	mla	r3, r9, sl, r3
 8025264:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 8025268:	42bd      	cmp	r5, r7
 802526a:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 802526e:	d8e5      	bhi.n	802523c <__multiply+0xfc>
 8025270:	9a01      	ldr	r2, [sp, #4]
 8025272:	50a3      	str	r3, [r4, r2]
 8025274:	3404      	adds	r4, #4
 8025276:	e79f      	b.n	80251b8 <__multiply+0x78>
 8025278:	3e01      	subs	r6, #1
 802527a:	e7a1      	b.n	80251c0 <__multiply+0x80>
 802527c:	08026342 	.word	0x08026342
 8025280:	08026353 	.word	0x08026353

08025284 <__pow5mult>:
 8025284:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025288:	4615      	mov	r5, r2
 802528a:	f012 0203 	ands.w	r2, r2, #3
 802528e:	4607      	mov	r7, r0
 8025290:	460e      	mov	r6, r1
 8025292:	d007      	beq.n	80252a4 <__pow5mult+0x20>
 8025294:	4c25      	ldr	r4, [pc, #148]	@ (802532c <__pow5mult+0xa8>)
 8025296:	3a01      	subs	r2, #1
 8025298:	2300      	movs	r3, #0
 802529a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 802529e:	f7ff fea7 	bl	8024ff0 <__multadd>
 80252a2:	4606      	mov	r6, r0
 80252a4:	10ad      	asrs	r5, r5, #2
 80252a6:	d03d      	beq.n	8025324 <__pow5mult+0xa0>
 80252a8:	69fc      	ldr	r4, [r7, #28]
 80252aa:	b97c      	cbnz	r4, 80252cc <__pow5mult+0x48>
 80252ac:	2010      	movs	r0, #16
 80252ae:	f7ed fb3b 	bl	8012928 <__wrap_malloc>
 80252b2:	4602      	mov	r2, r0
 80252b4:	61f8      	str	r0, [r7, #28]
 80252b6:	b928      	cbnz	r0, 80252c4 <__pow5mult+0x40>
 80252b8:	4b1d      	ldr	r3, [pc, #116]	@ (8025330 <__pow5mult+0xac>)
 80252ba:	481e      	ldr	r0, [pc, #120]	@ (8025334 <__pow5mult+0xb0>)
 80252bc:	f240 11b3 	movw	r1, #435	@ 0x1b3
 80252c0:	f000 fb50 	bl	8025964 <__assert_func>
 80252c4:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80252c8:	6004      	str	r4, [r0, #0]
 80252ca:	60c4      	str	r4, [r0, #12]
 80252cc:	f8d7 801c 	ldr.w	r8, [r7, #28]
 80252d0:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80252d4:	b94c      	cbnz	r4, 80252ea <__pow5mult+0x66>
 80252d6:	f240 2171 	movw	r1, #625	@ 0x271
 80252da:	4638      	mov	r0, r7
 80252dc:	f7ff ff1a 	bl	8025114 <__i2b>
 80252e0:	2300      	movs	r3, #0
 80252e2:	f8c8 0008 	str.w	r0, [r8, #8]
 80252e6:	4604      	mov	r4, r0
 80252e8:	6003      	str	r3, [r0, #0]
 80252ea:	f04f 0900 	mov.w	r9, #0
 80252ee:	07eb      	lsls	r3, r5, #31
 80252f0:	d50a      	bpl.n	8025308 <__pow5mult+0x84>
 80252f2:	4631      	mov	r1, r6
 80252f4:	4622      	mov	r2, r4
 80252f6:	4638      	mov	r0, r7
 80252f8:	f7ff ff22 	bl	8025140 <__multiply>
 80252fc:	4631      	mov	r1, r6
 80252fe:	4680      	mov	r8, r0
 8025300:	4638      	mov	r0, r7
 8025302:	f7ff fe53 	bl	8024fac <_Bfree>
 8025306:	4646      	mov	r6, r8
 8025308:	106d      	asrs	r5, r5, #1
 802530a:	d00b      	beq.n	8025324 <__pow5mult+0xa0>
 802530c:	6820      	ldr	r0, [r4, #0]
 802530e:	b938      	cbnz	r0, 8025320 <__pow5mult+0x9c>
 8025310:	4622      	mov	r2, r4
 8025312:	4621      	mov	r1, r4
 8025314:	4638      	mov	r0, r7
 8025316:	f7ff ff13 	bl	8025140 <__multiply>
 802531a:	6020      	str	r0, [r4, #0]
 802531c:	f8c0 9000 	str.w	r9, [r0]
 8025320:	4604      	mov	r4, r0
 8025322:	e7e4      	b.n	80252ee <__pow5mult+0x6a>
 8025324:	4630      	mov	r0, r6
 8025326:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802532a:	bf00      	nop
 802532c:	08076a08 	.word	0x08076a08
 8025330:	080262d3 	.word	0x080262d3
 8025334:	08026353 	.word	0x08026353

08025338 <__lshift>:
 8025338:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802533c:	460c      	mov	r4, r1
 802533e:	6849      	ldr	r1, [r1, #4]
 8025340:	6923      	ldr	r3, [r4, #16]
 8025342:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8025346:	68a3      	ldr	r3, [r4, #8]
 8025348:	4607      	mov	r7, r0
 802534a:	4691      	mov	r9, r2
 802534c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8025350:	f108 0601 	add.w	r6, r8, #1
 8025354:	42b3      	cmp	r3, r6
 8025356:	db0b      	blt.n	8025370 <__lshift+0x38>
 8025358:	4638      	mov	r0, r7
 802535a:	f7ff fde7 	bl	8024f2c <_Balloc>
 802535e:	4605      	mov	r5, r0
 8025360:	b948      	cbnz	r0, 8025376 <__lshift+0x3e>
 8025362:	4602      	mov	r2, r0
 8025364:	4b28      	ldr	r3, [pc, #160]	@ (8025408 <__lshift+0xd0>)
 8025366:	4829      	ldr	r0, [pc, #164]	@ (802540c <__lshift+0xd4>)
 8025368:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 802536c:	f000 fafa 	bl	8025964 <__assert_func>
 8025370:	3101      	adds	r1, #1
 8025372:	005b      	lsls	r3, r3, #1
 8025374:	e7ee      	b.n	8025354 <__lshift+0x1c>
 8025376:	2300      	movs	r3, #0
 8025378:	f100 0114 	add.w	r1, r0, #20
 802537c:	f100 0210 	add.w	r2, r0, #16
 8025380:	4618      	mov	r0, r3
 8025382:	4553      	cmp	r3, sl
 8025384:	db33      	blt.n	80253ee <__lshift+0xb6>
 8025386:	6920      	ldr	r0, [r4, #16]
 8025388:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 802538c:	f104 0314 	add.w	r3, r4, #20
 8025390:	f019 091f 	ands.w	r9, r9, #31
 8025394:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8025398:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 802539c:	d02b      	beq.n	80253f6 <__lshift+0xbe>
 802539e:	f1c9 0e20 	rsb	lr, r9, #32
 80253a2:	468a      	mov	sl, r1
 80253a4:	2200      	movs	r2, #0
 80253a6:	6818      	ldr	r0, [r3, #0]
 80253a8:	fa00 f009 	lsl.w	r0, r0, r9
 80253ac:	4310      	orrs	r0, r2
 80253ae:	f84a 0b04 	str.w	r0, [sl], #4
 80253b2:	f853 2b04 	ldr.w	r2, [r3], #4
 80253b6:	459c      	cmp	ip, r3
 80253b8:	fa22 f20e 	lsr.w	r2, r2, lr
 80253bc:	d8f3      	bhi.n	80253a6 <__lshift+0x6e>
 80253be:	ebac 0304 	sub.w	r3, ip, r4
 80253c2:	3b15      	subs	r3, #21
 80253c4:	f023 0303 	bic.w	r3, r3, #3
 80253c8:	3304      	adds	r3, #4
 80253ca:	f104 0015 	add.w	r0, r4, #21
 80253ce:	4560      	cmp	r0, ip
 80253d0:	bf88      	it	hi
 80253d2:	2304      	movhi	r3, #4
 80253d4:	50ca      	str	r2, [r1, r3]
 80253d6:	b10a      	cbz	r2, 80253dc <__lshift+0xa4>
 80253d8:	f108 0602 	add.w	r6, r8, #2
 80253dc:	3e01      	subs	r6, #1
 80253de:	4638      	mov	r0, r7
 80253e0:	612e      	str	r6, [r5, #16]
 80253e2:	4621      	mov	r1, r4
 80253e4:	f7ff fde2 	bl	8024fac <_Bfree>
 80253e8:	4628      	mov	r0, r5
 80253ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80253ee:	f842 0f04 	str.w	r0, [r2, #4]!
 80253f2:	3301      	adds	r3, #1
 80253f4:	e7c5      	b.n	8025382 <__lshift+0x4a>
 80253f6:	3904      	subs	r1, #4
 80253f8:	f853 2b04 	ldr.w	r2, [r3], #4
 80253fc:	f841 2f04 	str.w	r2, [r1, #4]!
 8025400:	459c      	cmp	ip, r3
 8025402:	d8f9      	bhi.n	80253f8 <__lshift+0xc0>
 8025404:	e7ea      	b.n	80253dc <__lshift+0xa4>
 8025406:	bf00      	nop
 8025408:	08026342 	.word	0x08026342
 802540c:	08026353 	.word	0x08026353

08025410 <__mcmp>:
 8025410:	690a      	ldr	r2, [r1, #16]
 8025412:	4603      	mov	r3, r0
 8025414:	6900      	ldr	r0, [r0, #16]
 8025416:	1a80      	subs	r0, r0, r2
 8025418:	b530      	push	{r4, r5, lr}
 802541a:	d10e      	bne.n	802543a <__mcmp+0x2a>
 802541c:	3314      	adds	r3, #20
 802541e:	3114      	adds	r1, #20
 8025420:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8025424:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8025428:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 802542c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8025430:	4295      	cmp	r5, r2
 8025432:	d003      	beq.n	802543c <__mcmp+0x2c>
 8025434:	d205      	bcs.n	8025442 <__mcmp+0x32>
 8025436:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 802543a:	bd30      	pop	{r4, r5, pc}
 802543c:	42a3      	cmp	r3, r4
 802543e:	d3f3      	bcc.n	8025428 <__mcmp+0x18>
 8025440:	e7fb      	b.n	802543a <__mcmp+0x2a>
 8025442:	2001      	movs	r0, #1
 8025444:	e7f9      	b.n	802543a <__mcmp+0x2a>
	...

08025448 <__mdiff>:
 8025448:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802544c:	4689      	mov	r9, r1
 802544e:	4606      	mov	r6, r0
 8025450:	4611      	mov	r1, r2
 8025452:	4648      	mov	r0, r9
 8025454:	4614      	mov	r4, r2
 8025456:	f7ff ffdb 	bl	8025410 <__mcmp>
 802545a:	1e05      	subs	r5, r0, #0
 802545c:	d112      	bne.n	8025484 <__mdiff+0x3c>
 802545e:	4629      	mov	r1, r5
 8025460:	4630      	mov	r0, r6
 8025462:	f7ff fd63 	bl	8024f2c <_Balloc>
 8025466:	4602      	mov	r2, r0
 8025468:	b928      	cbnz	r0, 8025476 <__mdiff+0x2e>
 802546a:	4b3f      	ldr	r3, [pc, #252]	@ (8025568 <__mdiff+0x120>)
 802546c:	f240 2137 	movw	r1, #567	@ 0x237
 8025470:	483e      	ldr	r0, [pc, #248]	@ (802556c <__mdiff+0x124>)
 8025472:	f000 fa77 	bl	8025964 <__assert_func>
 8025476:	2301      	movs	r3, #1
 8025478:	e9c0 3504 	strd	r3, r5, [r0, #16]
 802547c:	4610      	mov	r0, r2
 802547e:	b003      	add	sp, #12
 8025480:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025484:	bfbc      	itt	lt
 8025486:	464b      	movlt	r3, r9
 8025488:	46a1      	movlt	r9, r4
 802548a:	4630      	mov	r0, r6
 802548c:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8025490:	bfba      	itte	lt
 8025492:	461c      	movlt	r4, r3
 8025494:	2501      	movlt	r5, #1
 8025496:	2500      	movge	r5, #0
 8025498:	f7ff fd48 	bl	8024f2c <_Balloc>
 802549c:	4602      	mov	r2, r0
 802549e:	b918      	cbnz	r0, 80254a8 <__mdiff+0x60>
 80254a0:	4b31      	ldr	r3, [pc, #196]	@ (8025568 <__mdiff+0x120>)
 80254a2:	f240 2145 	movw	r1, #581	@ 0x245
 80254a6:	e7e3      	b.n	8025470 <__mdiff+0x28>
 80254a8:	f8d9 7010 	ldr.w	r7, [r9, #16]
 80254ac:	6926      	ldr	r6, [r4, #16]
 80254ae:	60c5      	str	r5, [r0, #12]
 80254b0:	f109 0310 	add.w	r3, r9, #16
 80254b4:	f109 0514 	add.w	r5, r9, #20
 80254b8:	f104 0e14 	add.w	lr, r4, #20
 80254bc:	f100 0b14 	add.w	fp, r0, #20
 80254c0:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 80254c4:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 80254c8:	9301      	str	r3, [sp, #4]
 80254ca:	46d9      	mov	r9, fp
 80254cc:	f04f 0c00 	mov.w	ip, #0
 80254d0:	9b01      	ldr	r3, [sp, #4]
 80254d2:	f85e 0b04 	ldr.w	r0, [lr], #4
 80254d6:	f853 af04 	ldr.w	sl, [r3, #4]!
 80254da:	9301      	str	r3, [sp, #4]
 80254dc:	fa1f f38a 	uxth.w	r3, sl
 80254e0:	4619      	mov	r1, r3
 80254e2:	b283      	uxth	r3, r0
 80254e4:	1acb      	subs	r3, r1, r3
 80254e6:	0c00      	lsrs	r0, r0, #16
 80254e8:	4463      	add	r3, ip
 80254ea:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 80254ee:	eb00 4023 	add.w	r0, r0, r3, asr #16
 80254f2:	b29b      	uxth	r3, r3
 80254f4:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 80254f8:	4576      	cmp	r6, lr
 80254fa:	f849 3b04 	str.w	r3, [r9], #4
 80254fe:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8025502:	d8e5      	bhi.n	80254d0 <__mdiff+0x88>
 8025504:	1b33      	subs	r3, r6, r4
 8025506:	3b15      	subs	r3, #21
 8025508:	f023 0303 	bic.w	r3, r3, #3
 802550c:	3415      	adds	r4, #21
 802550e:	3304      	adds	r3, #4
 8025510:	42a6      	cmp	r6, r4
 8025512:	bf38      	it	cc
 8025514:	2304      	movcc	r3, #4
 8025516:	441d      	add	r5, r3
 8025518:	445b      	add	r3, fp
 802551a:	461e      	mov	r6, r3
 802551c:	462c      	mov	r4, r5
 802551e:	4544      	cmp	r4, r8
 8025520:	d30e      	bcc.n	8025540 <__mdiff+0xf8>
 8025522:	f108 0103 	add.w	r1, r8, #3
 8025526:	1b49      	subs	r1, r1, r5
 8025528:	f021 0103 	bic.w	r1, r1, #3
 802552c:	3d03      	subs	r5, #3
 802552e:	45a8      	cmp	r8, r5
 8025530:	bf38      	it	cc
 8025532:	2100      	movcc	r1, #0
 8025534:	440b      	add	r3, r1
 8025536:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 802553a:	b191      	cbz	r1, 8025562 <__mdiff+0x11a>
 802553c:	6117      	str	r7, [r2, #16]
 802553e:	e79d      	b.n	802547c <__mdiff+0x34>
 8025540:	f854 1b04 	ldr.w	r1, [r4], #4
 8025544:	46e6      	mov	lr, ip
 8025546:	0c08      	lsrs	r0, r1, #16
 8025548:	fa1c fc81 	uxtah	ip, ip, r1
 802554c:	4471      	add	r1, lr
 802554e:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8025552:	b289      	uxth	r1, r1
 8025554:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8025558:	f846 1b04 	str.w	r1, [r6], #4
 802555c:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8025560:	e7dd      	b.n	802551e <__mdiff+0xd6>
 8025562:	3f01      	subs	r7, #1
 8025564:	e7e7      	b.n	8025536 <__mdiff+0xee>
 8025566:	bf00      	nop
 8025568:	08026342 	.word	0x08026342
 802556c:	08026353 	.word	0x08026353

08025570 <__d2b>:
 8025570:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8025574:	460f      	mov	r7, r1
 8025576:	2101      	movs	r1, #1
 8025578:	ec59 8b10 	vmov	r8, r9, d0
 802557c:	4616      	mov	r6, r2
 802557e:	f7ff fcd5 	bl	8024f2c <_Balloc>
 8025582:	4604      	mov	r4, r0
 8025584:	b930      	cbnz	r0, 8025594 <__d2b+0x24>
 8025586:	4602      	mov	r2, r0
 8025588:	4b23      	ldr	r3, [pc, #140]	@ (8025618 <__d2b+0xa8>)
 802558a:	4824      	ldr	r0, [pc, #144]	@ (802561c <__d2b+0xac>)
 802558c:	f240 310f 	movw	r1, #783	@ 0x30f
 8025590:	f000 f9e8 	bl	8025964 <__assert_func>
 8025594:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8025598:	f3c9 0313 	ubfx	r3, r9, #0, #20
 802559c:	b10d      	cbz	r5, 80255a2 <__d2b+0x32>
 802559e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80255a2:	9301      	str	r3, [sp, #4]
 80255a4:	f1b8 0300 	subs.w	r3, r8, #0
 80255a8:	d023      	beq.n	80255f2 <__d2b+0x82>
 80255aa:	4668      	mov	r0, sp
 80255ac:	9300      	str	r3, [sp, #0]
 80255ae:	f7ff fd84 	bl	80250ba <__lo0bits>
 80255b2:	e9dd 1200 	ldrd	r1, r2, [sp]
 80255b6:	b1d0      	cbz	r0, 80255ee <__d2b+0x7e>
 80255b8:	f1c0 0320 	rsb	r3, r0, #32
 80255bc:	fa02 f303 	lsl.w	r3, r2, r3
 80255c0:	430b      	orrs	r3, r1
 80255c2:	40c2      	lsrs	r2, r0
 80255c4:	6163      	str	r3, [r4, #20]
 80255c6:	9201      	str	r2, [sp, #4]
 80255c8:	9b01      	ldr	r3, [sp, #4]
 80255ca:	61a3      	str	r3, [r4, #24]
 80255cc:	2b00      	cmp	r3, #0
 80255ce:	bf0c      	ite	eq
 80255d0:	2201      	moveq	r2, #1
 80255d2:	2202      	movne	r2, #2
 80255d4:	6122      	str	r2, [r4, #16]
 80255d6:	b1a5      	cbz	r5, 8025602 <__d2b+0x92>
 80255d8:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 80255dc:	4405      	add	r5, r0
 80255de:	603d      	str	r5, [r7, #0]
 80255e0:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 80255e4:	6030      	str	r0, [r6, #0]
 80255e6:	4620      	mov	r0, r4
 80255e8:	b003      	add	sp, #12
 80255ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80255ee:	6161      	str	r1, [r4, #20]
 80255f0:	e7ea      	b.n	80255c8 <__d2b+0x58>
 80255f2:	a801      	add	r0, sp, #4
 80255f4:	f7ff fd61 	bl	80250ba <__lo0bits>
 80255f8:	9b01      	ldr	r3, [sp, #4]
 80255fa:	6163      	str	r3, [r4, #20]
 80255fc:	3020      	adds	r0, #32
 80255fe:	2201      	movs	r2, #1
 8025600:	e7e8      	b.n	80255d4 <__d2b+0x64>
 8025602:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8025606:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 802560a:	6038      	str	r0, [r7, #0]
 802560c:	6918      	ldr	r0, [r3, #16]
 802560e:	f7ff fd35 	bl	802507c <__hi0bits>
 8025612:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8025616:	e7e5      	b.n	80255e4 <__d2b+0x74>
 8025618:	08026342 	.word	0x08026342
 802561c:	08026353 	.word	0x08026353

08025620 <__sread>:
 8025620:	b510      	push	{r4, lr}
 8025622:	460c      	mov	r4, r1
 8025624:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025628:	f000 f956 	bl	80258d8 <_read_r>
 802562c:	2800      	cmp	r0, #0
 802562e:	bfab      	itete	ge
 8025630:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8025632:	89a3      	ldrhlt	r3, [r4, #12]
 8025634:	181b      	addge	r3, r3, r0
 8025636:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 802563a:	bfac      	ite	ge
 802563c:	6563      	strge	r3, [r4, #84]	@ 0x54
 802563e:	81a3      	strhlt	r3, [r4, #12]
 8025640:	bd10      	pop	{r4, pc}

08025642 <__swrite>:
 8025642:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025646:	461f      	mov	r7, r3
 8025648:	898b      	ldrh	r3, [r1, #12]
 802564a:	05db      	lsls	r3, r3, #23
 802564c:	4605      	mov	r5, r0
 802564e:	460c      	mov	r4, r1
 8025650:	4616      	mov	r6, r2
 8025652:	d505      	bpl.n	8025660 <__swrite+0x1e>
 8025654:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025658:	2302      	movs	r3, #2
 802565a:	2200      	movs	r2, #0
 802565c:	f000 f92a 	bl	80258b4 <_lseek_r>
 8025660:	89a3      	ldrh	r3, [r4, #12]
 8025662:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8025666:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 802566a:	81a3      	strh	r3, [r4, #12]
 802566c:	4632      	mov	r2, r6
 802566e:	463b      	mov	r3, r7
 8025670:	4628      	mov	r0, r5
 8025672:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8025676:	f000 b941 	b.w	80258fc <_write_r>

0802567a <__sseek>:
 802567a:	b510      	push	{r4, lr}
 802567c:	460c      	mov	r4, r1
 802567e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025682:	f000 f917 	bl	80258b4 <_lseek_r>
 8025686:	1c43      	adds	r3, r0, #1
 8025688:	89a3      	ldrh	r3, [r4, #12]
 802568a:	bf15      	itete	ne
 802568c:	6560      	strne	r0, [r4, #84]	@ 0x54
 802568e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8025692:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8025696:	81a3      	strheq	r3, [r4, #12]
 8025698:	bf18      	it	ne
 802569a:	81a3      	strhne	r3, [r4, #12]
 802569c:	bd10      	pop	{r4, pc}

0802569e <__sclose>:
 802569e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80256a2:	f000 b93d 	b.w	8025920 <_close_r>

080256a6 <__swbuf_r>:
 80256a6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80256a8:	460e      	mov	r6, r1
 80256aa:	4614      	mov	r4, r2
 80256ac:	4605      	mov	r5, r0
 80256ae:	b118      	cbz	r0, 80256b8 <__swbuf_r+0x12>
 80256b0:	6a03      	ldr	r3, [r0, #32]
 80256b2:	b90b      	cbnz	r3, 80256b8 <__swbuf_r+0x12>
 80256b4:	f7fe fbfe 	bl	8023eb4 <__sinit>
 80256b8:	69a3      	ldr	r3, [r4, #24]
 80256ba:	60a3      	str	r3, [r4, #8]
 80256bc:	89a3      	ldrh	r3, [r4, #12]
 80256be:	071a      	lsls	r2, r3, #28
 80256c0:	d501      	bpl.n	80256c6 <__swbuf_r+0x20>
 80256c2:	6923      	ldr	r3, [r4, #16]
 80256c4:	b943      	cbnz	r3, 80256d8 <__swbuf_r+0x32>
 80256c6:	4621      	mov	r1, r4
 80256c8:	4628      	mov	r0, r5
 80256ca:	f000 f82b 	bl	8025724 <__swsetup_r>
 80256ce:	b118      	cbz	r0, 80256d8 <__swbuf_r+0x32>
 80256d0:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 80256d4:	4638      	mov	r0, r7
 80256d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80256d8:	6823      	ldr	r3, [r4, #0]
 80256da:	6922      	ldr	r2, [r4, #16]
 80256dc:	1a98      	subs	r0, r3, r2
 80256de:	6963      	ldr	r3, [r4, #20]
 80256e0:	b2f6      	uxtb	r6, r6
 80256e2:	4283      	cmp	r3, r0
 80256e4:	4637      	mov	r7, r6
 80256e6:	dc05      	bgt.n	80256f4 <__swbuf_r+0x4e>
 80256e8:	4621      	mov	r1, r4
 80256ea:	4628      	mov	r0, r5
 80256ec:	f7ff fbf6 	bl	8024edc <_fflush_r>
 80256f0:	2800      	cmp	r0, #0
 80256f2:	d1ed      	bne.n	80256d0 <__swbuf_r+0x2a>
 80256f4:	68a3      	ldr	r3, [r4, #8]
 80256f6:	3b01      	subs	r3, #1
 80256f8:	60a3      	str	r3, [r4, #8]
 80256fa:	6823      	ldr	r3, [r4, #0]
 80256fc:	1c5a      	adds	r2, r3, #1
 80256fe:	6022      	str	r2, [r4, #0]
 8025700:	701e      	strb	r6, [r3, #0]
 8025702:	6962      	ldr	r2, [r4, #20]
 8025704:	1c43      	adds	r3, r0, #1
 8025706:	429a      	cmp	r2, r3
 8025708:	d004      	beq.n	8025714 <__swbuf_r+0x6e>
 802570a:	89a3      	ldrh	r3, [r4, #12]
 802570c:	07db      	lsls	r3, r3, #31
 802570e:	d5e1      	bpl.n	80256d4 <__swbuf_r+0x2e>
 8025710:	2e0a      	cmp	r6, #10
 8025712:	d1df      	bne.n	80256d4 <__swbuf_r+0x2e>
 8025714:	4621      	mov	r1, r4
 8025716:	4628      	mov	r0, r5
 8025718:	f7ff fbe0 	bl	8024edc <_fflush_r>
 802571c:	2800      	cmp	r0, #0
 802571e:	d0d9      	beq.n	80256d4 <__swbuf_r+0x2e>
 8025720:	e7d6      	b.n	80256d0 <__swbuf_r+0x2a>
	...

08025724 <__swsetup_r>:
 8025724:	b538      	push	{r3, r4, r5, lr}
 8025726:	4b29      	ldr	r3, [pc, #164]	@ (80257cc <__swsetup_r+0xa8>)
 8025728:	4605      	mov	r5, r0
 802572a:	6818      	ldr	r0, [r3, #0]
 802572c:	460c      	mov	r4, r1
 802572e:	b118      	cbz	r0, 8025738 <__swsetup_r+0x14>
 8025730:	6a03      	ldr	r3, [r0, #32]
 8025732:	b90b      	cbnz	r3, 8025738 <__swsetup_r+0x14>
 8025734:	f7fe fbbe 	bl	8023eb4 <__sinit>
 8025738:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802573c:	0719      	lsls	r1, r3, #28
 802573e:	d422      	bmi.n	8025786 <__swsetup_r+0x62>
 8025740:	06da      	lsls	r2, r3, #27
 8025742:	d407      	bmi.n	8025754 <__swsetup_r+0x30>
 8025744:	2209      	movs	r2, #9
 8025746:	602a      	str	r2, [r5, #0]
 8025748:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802574c:	81a3      	strh	r3, [r4, #12]
 802574e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8025752:	e033      	b.n	80257bc <__swsetup_r+0x98>
 8025754:	0758      	lsls	r0, r3, #29
 8025756:	d512      	bpl.n	802577e <__swsetup_r+0x5a>
 8025758:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802575a:	b141      	cbz	r1, 802576e <__swsetup_r+0x4a>
 802575c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8025760:	4299      	cmp	r1, r3
 8025762:	d002      	beq.n	802576a <__swsetup_r+0x46>
 8025764:	4628      	mov	r0, r5
 8025766:	f7ff faeb 	bl	8024d40 <_free_r>
 802576a:	2300      	movs	r3, #0
 802576c:	6363      	str	r3, [r4, #52]	@ 0x34
 802576e:	89a3      	ldrh	r3, [r4, #12]
 8025770:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8025774:	81a3      	strh	r3, [r4, #12]
 8025776:	2300      	movs	r3, #0
 8025778:	6063      	str	r3, [r4, #4]
 802577a:	6923      	ldr	r3, [r4, #16]
 802577c:	6023      	str	r3, [r4, #0]
 802577e:	89a3      	ldrh	r3, [r4, #12]
 8025780:	f043 0308 	orr.w	r3, r3, #8
 8025784:	81a3      	strh	r3, [r4, #12]
 8025786:	6923      	ldr	r3, [r4, #16]
 8025788:	b94b      	cbnz	r3, 802579e <__swsetup_r+0x7a>
 802578a:	89a3      	ldrh	r3, [r4, #12]
 802578c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8025790:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8025794:	d003      	beq.n	802579e <__swsetup_r+0x7a>
 8025796:	4621      	mov	r1, r4
 8025798:	4628      	mov	r0, r5
 802579a:	f000 f83f 	bl	802581c <__smakebuf_r>
 802579e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80257a2:	f013 0201 	ands.w	r2, r3, #1
 80257a6:	d00a      	beq.n	80257be <__swsetup_r+0x9a>
 80257a8:	2200      	movs	r2, #0
 80257aa:	60a2      	str	r2, [r4, #8]
 80257ac:	6962      	ldr	r2, [r4, #20]
 80257ae:	4252      	negs	r2, r2
 80257b0:	61a2      	str	r2, [r4, #24]
 80257b2:	6922      	ldr	r2, [r4, #16]
 80257b4:	b942      	cbnz	r2, 80257c8 <__swsetup_r+0xa4>
 80257b6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80257ba:	d1c5      	bne.n	8025748 <__swsetup_r+0x24>
 80257bc:	bd38      	pop	{r3, r4, r5, pc}
 80257be:	0799      	lsls	r1, r3, #30
 80257c0:	bf58      	it	pl
 80257c2:	6962      	ldrpl	r2, [r4, #20]
 80257c4:	60a2      	str	r2, [r4, #8]
 80257c6:	e7f4      	b.n	80257b2 <__swsetup_r+0x8e>
 80257c8:	2000      	movs	r0, #0
 80257ca:	e7f7      	b.n	80257bc <__swsetup_r+0x98>
 80257cc:	20001dc4 	.word	0x20001dc4

080257d0 <__swhatbuf_r>:
 80257d0:	b570      	push	{r4, r5, r6, lr}
 80257d2:	460c      	mov	r4, r1
 80257d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80257d8:	2900      	cmp	r1, #0
 80257da:	b096      	sub	sp, #88	@ 0x58
 80257dc:	4615      	mov	r5, r2
 80257de:	461e      	mov	r6, r3
 80257e0:	da0d      	bge.n	80257fe <__swhatbuf_r+0x2e>
 80257e2:	89a3      	ldrh	r3, [r4, #12]
 80257e4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80257e8:	f04f 0100 	mov.w	r1, #0
 80257ec:	bf14      	ite	ne
 80257ee:	2340      	movne	r3, #64	@ 0x40
 80257f0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80257f4:	2000      	movs	r0, #0
 80257f6:	6031      	str	r1, [r6, #0]
 80257f8:	602b      	str	r3, [r5, #0]
 80257fa:	b016      	add	sp, #88	@ 0x58
 80257fc:	bd70      	pop	{r4, r5, r6, pc}
 80257fe:	466a      	mov	r2, sp
 8025800:	f000 f89e 	bl	8025940 <_fstat_r>
 8025804:	2800      	cmp	r0, #0
 8025806:	dbec      	blt.n	80257e2 <__swhatbuf_r+0x12>
 8025808:	9901      	ldr	r1, [sp, #4]
 802580a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 802580e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8025812:	4259      	negs	r1, r3
 8025814:	4159      	adcs	r1, r3
 8025816:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 802581a:	e7eb      	b.n	80257f4 <__swhatbuf_r+0x24>

0802581c <__smakebuf_r>:
 802581c:	898b      	ldrh	r3, [r1, #12]
 802581e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8025820:	079d      	lsls	r5, r3, #30
 8025822:	4606      	mov	r6, r0
 8025824:	460c      	mov	r4, r1
 8025826:	d507      	bpl.n	8025838 <__smakebuf_r+0x1c>
 8025828:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 802582c:	6023      	str	r3, [r4, #0]
 802582e:	6123      	str	r3, [r4, #16]
 8025830:	2301      	movs	r3, #1
 8025832:	6163      	str	r3, [r4, #20]
 8025834:	b003      	add	sp, #12
 8025836:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025838:	ab01      	add	r3, sp, #4
 802583a:	466a      	mov	r2, sp
 802583c:	f7ff ffc8 	bl	80257d0 <__swhatbuf_r>
 8025840:	9f00      	ldr	r7, [sp, #0]
 8025842:	4605      	mov	r5, r0
 8025844:	4639      	mov	r1, r7
 8025846:	4630      	mov	r0, r6
 8025848:	f7fe f890 	bl	802396c <_malloc_r>
 802584c:	b948      	cbnz	r0, 8025862 <__smakebuf_r+0x46>
 802584e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8025852:	059a      	lsls	r2, r3, #22
 8025854:	d4ee      	bmi.n	8025834 <__smakebuf_r+0x18>
 8025856:	f023 0303 	bic.w	r3, r3, #3
 802585a:	f043 0302 	orr.w	r3, r3, #2
 802585e:	81a3      	strh	r3, [r4, #12]
 8025860:	e7e2      	b.n	8025828 <__smakebuf_r+0xc>
 8025862:	89a3      	ldrh	r3, [r4, #12]
 8025864:	6020      	str	r0, [r4, #0]
 8025866:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 802586a:	81a3      	strh	r3, [r4, #12]
 802586c:	9b01      	ldr	r3, [sp, #4]
 802586e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8025872:	b15b      	cbz	r3, 802588c <__smakebuf_r+0x70>
 8025874:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8025878:	4630      	mov	r0, r6
 802587a:	f000 f80b 	bl	8025894 <_isatty_r>
 802587e:	b128      	cbz	r0, 802588c <__smakebuf_r+0x70>
 8025880:	89a3      	ldrh	r3, [r4, #12]
 8025882:	f023 0303 	bic.w	r3, r3, #3
 8025886:	f043 0301 	orr.w	r3, r3, #1
 802588a:	81a3      	strh	r3, [r4, #12]
 802588c:	89a3      	ldrh	r3, [r4, #12]
 802588e:	431d      	orrs	r5, r3
 8025890:	81a5      	strh	r5, [r4, #12]
 8025892:	e7cf      	b.n	8025834 <__smakebuf_r+0x18>

08025894 <_isatty_r>:
 8025894:	b538      	push	{r3, r4, r5, lr}
 8025896:	4d06      	ldr	r5, [pc, #24]	@ (80258b0 <_isatty_r+0x1c>)
 8025898:	2300      	movs	r3, #0
 802589a:	4604      	mov	r4, r0
 802589c:	4608      	mov	r0, r1
 802589e:	602b      	str	r3, [r5, #0]
 80258a0:	f000 fa68 	bl	8025d74 <_isatty>
 80258a4:	1c43      	adds	r3, r0, #1
 80258a6:	d102      	bne.n	80258ae <_isatty_r+0x1a>
 80258a8:	682b      	ldr	r3, [r5, #0]
 80258aa:	b103      	cbz	r3, 80258ae <_isatty_r+0x1a>
 80258ac:	6023      	str	r3, [r4, #0]
 80258ae:	bd38      	pop	{r3, r4, r5, pc}
 80258b0:	20002380 	.word	0x20002380

080258b4 <_lseek_r>:
 80258b4:	b538      	push	{r3, r4, r5, lr}
 80258b6:	4d07      	ldr	r5, [pc, #28]	@ (80258d4 <_lseek_r+0x20>)
 80258b8:	4604      	mov	r4, r0
 80258ba:	4608      	mov	r0, r1
 80258bc:	4611      	mov	r1, r2
 80258be:	2200      	movs	r2, #0
 80258c0:	602a      	str	r2, [r5, #0]
 80258c2:	461a      	mov	r2, r3
 80258c4:	f000 fa66 	bl	8025d94 <_lseek>
 80258c8:	1c43      	adds	r3, r0, #1
 80258ca:	d102      	bne.n	80258d2 <_lseek_r+0x1e>
 80258cc:	682b      	ldr	r3, [r5, #0]
 80258ce:	b103      	cbz	r3, 80258d2 <_lseek_r+0x1e>
 80258d0:	6023      	str	r3, [r4, #0]
 80258d2:	bd38      	pop	{r3, r4, r5, pc}
 80258d4:	20002380 	.word	0x20002380

080258d8 <_read_r>:
 80258d8:	b538      	push	{r3, r4, r5, lr}
 80258da:	4d07      	ldr	r5, [pc, #28]	@ (80258f8 <_read_r+0x20>)
 80258dc:	4604      	mov	r4, r0
 80258de:	4608      	mov	r0, r1
 80258e0:	4611      	mov	r1, r2
 80258e2:	2200      	movs	r2, #0
 80258e4:	602a      	str	r2, [r5, #0]
 80258e6:	461a      	mov	r2, r3
 80258e8:	f000 fa5c 	bl	8025da4 <_read>
 80258ec:	1c43      	adds	r3, r0, #1
 80258ee:	d102      	bne.n	80258f6 <_read_r+0x1e>
 80258f0:	682b      	ldr	r3, [r5, #0]
 80258f2:	b103      	cbz	r3, 80258f6 <_read_r+0x1e>
 80258f4:	6023      	str	r3, [r4, #0]
 80258f6:	bd38      	pop	{r3, r4, r5, pc}
 80258f8:	20002380 	.word	0x20002380

080258fc <_write_r>:
 80258fc:	b538      	push	{r3, r4, r5, lr}
 80258fe:	4d07      	ldr	r5, [pc, #28]	@ (802591c <_write_r+0x20>)
 8025900:	4604      	mov	r4, r0
 8025902:	4608      	mov	r0, r1
 8025904:	4611      	mov	r1, r2
 8025906:	2200      	movs	r2, #0
 8025908:	602a      	str	r2, [r5, #0]
 802590a:	461a      	mov	r2, r3
 802590c:	f7ec ffe8 	bl	80128e0 <_write>
 8025910:	1c43      	adds	r3, r0, #1
 8025912:	d102      	bne.n	802591a <_write_r+0x1e>
 8025914:	682b      	ldr	r3, [r5, #0]
 8025916:	b103      	cbz	r3, 802591a <_write_r+0x1e>
 8025918:	6023      	str	r3, [r4, #0]
 802591a:	bd38      	pop	{r3, r4, r5, pc}
 802591c:	20002380 	.word	0x20002380

08025920 <_close_r>:
 8025920:	b538      	push	{r3, r4, r5, lr}
 8025922:	4d06      	ldr	r5, [pc, #24]	@ (802593c <_close_r+0x1c>)
 8025924:	2300      	movs	r3, #0
 8025926:	4604      	mov	r4, r0
 8025928:	4608      	mov	r0, r1
 802592a:	602b      	str	r3, [r5, #0]
 802592c:	f000 fa0a 	bl	8025d44 <_close>
 8025930:	1c43      	adds	r3, r0, #1
 8025932:	d102      	bne.n	802593a <_close_r+0x1a>
 8025934:	682b      	ldr	r3, [r5, #0]
 8025936:	b103      	cbz	r3, 802593a <_close_r+0x1a>
 8025938:	6023      	str	r3, [r4, #0]
 802593a:	bd38      	pop	{r3, r4, r5, pc}
 802593c:	20002380 	.word	0x20002380

08025940 <_fstat_r>:
 8025940:	b538      	push	{r3, r4, r5, lr}
 8025942:	4d07      	ldr	r5, [pc, #28]	@ (8025960 <_fstat_r+0x20>)
 8025944:	2300      	movs	r3, #0
 8025946:	4604      	mov	r4, r0
 8025948:	4608      	mov	r0, r1
 802594a:	4611      	mov	r1, r2
 802594c:	602b      	str	r3, [r5, #0]
 802594e:	f000 fa01 	bl	8025d54 <_fstat>
 8025952:	1c43      	adds	r3, r0, #1
 8025954:	d102      	bne.n	802595c <_fstat_r+0x1c>
 8025956:	682b      	ldr	r3, [r5, #0]
 8025958:	b103      	cbz	r3, 802595c <_fstat_r+0x1c>
 802595a:	6023      	str	r3, [r4, #0]
 802595c:	bd38      	pop	{r3, r4, r5, pc}
 802595e:	bf00      	nop
 8025960:	20002380 	.word	0x20002380

08025964 <__assert_func>:
 8025964:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8025966:	4614      	mov	r4, r2
 8025968:	461a      	mov	r2, r3
 802596a:	4b09      	ldr	r3, [pc, #36]	@ (8025990 <__assert_func+0x2c>)
 802596c:	681b      	ldr	r3, [r3, #0]
 802596e:	4605      	mov	r5, r0
 8025970:	68d8      	ldr	r0, [r3, #12]
 8025972:	b14c      	cbz	r4, 8025988 <__assert_func+0x24>
 8025974:	4b07      	ldr	r3, [pc, #28]	@ (8025994 <__assert_func+0x30>)
 8025976:	9100      	str	r1, [sp, #0]
 8025978:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802597c:	4906      	ldr	r1, [pc, #24]	@ (8025998 <__assert_func+0x34>)
 802597e:	462b      	mov	r3, r5
 8025980:	f000 f834 	bl	80259ec <fiprintf>
 8025984:	f000 f851 	bl	8025a2a <abort>
 8025988:	4b04      	ldr	r3, [pc, #16]	@ (802599c <__assert_func+0x38>)
 802598a:	461c      	mov	r4, r3
 802598c:	e7f3      	b.n	8025976 <__assert_func+0x12>
 802598e:	bf00      	nop
 8025990:	20001dc4 	.word	0x20001dc4
 8025994:	080263b4 	.word	0x080263b4
 8025998:	080263c1 	.word	0x080263c1
 802599c:	080263ef 	.word	0x080263ef

080259a0 <_calloc_r>:
 80259a0:	b570      	push	{r4, r5, r6, lr}
 80259a2:	fba1 5402 	umull	r5, r4, r1, r2
 80259a6:	b934      	cbnz	r4, 80259b6 <_calloc_r+0x16>
 80259a8:	4629      	mov	r1, r5
 80259aa:	f7fd ffdf 	bl	802396c <_malloc_r>
 80259ae:	4606      	mov	r6, r0
 80259b0:	b928      	cbnz	r0, 80259be <_calloc_r+0x1e>
 80259b2:	4630      	mov	r0, r6
 80259b4:	bd70      	pop	{r4, r5, r6, pc}
 80259b6:	220c      	movs	r2, #12
 80259b8:	6002      	str	r2, [r0, #0]
 80259ba:	2600      	movs	r6, #0
 80259bc:	e7f9      	b.n	80259b2 <_calloc_r+0x12>
 80259be:	462a      	mov	r2, r5
 80259c0:	4621      	mov	r1, r4
 80259c2:	f7fe fb0b 	bl	8023fdc <memset>
 80259c6:	e7f4      	b.n	80259b2 <_calloc_r+0x12>

080259c8 <__ascii_mbtowc>:
 80259c8:	b082      	sub	sp, #8
 80259ca:	b901      	cbnz	r1, 80259ce <__ascii_mbtowc+0x6>
 80259cc:	a901      	add	r1, sp, #4
 80259ce:	b142      	cbz	r2, 80259e2 <__ascii_mbtowc+0x1a>
 80259d0:	b14b      	cbz	r3, 80259e6 <__ascii_mbtowc+0x1e>
 80259d2:	7813      	ldrb	r3, [r2, #0]
 80259d4:	600b      	str	r3, [r1, #0]
 80259d6:	7812      	ldrb	r2, [r2, #0]
 80259d8:	1e10      	subs	r0, r2, #0
 80259da:	bf18      	it	ne
 80259dc:	2001      	movne	r0, #1
 80259de:	b002      	add	sp, #8
 80259e0:	4770      	bx	lr
 80259e2:	4610      	mov	r0, r2
 80259e4:	e7fb      	b.n	80259de <__ascii_mbtowc+0x16>
 80259e6:	f06f 0001 	mvn.w	r0, #1
 80259ea:	e7f8      	b.n	80259de <__ascii_mbtowc+0x16>

080259ec <fiprintf>:
 80259ec:	b40e      	push	{r1, r2, r3}
 80259ee:	b503      	push	{r0, r1, lr}
 80259f0:	4601      	mov	r1, r0
 80259f2:	ab03      	add	r3, sp, #12
 80259f4:	4805      	ldr	r0, [pc, #20]	@ (8025a0c <fiprintf+0x20>)
 80259f6:	f853 2b04 	ldr.w	r2, [r3], #4
 80259fa:	6800      	ldr	r0, [r0, #0]
 80259fc:	9301      	str	r3, [sp, #4]
 80259fe:	f000 f845 	bl	8025a8c <_vfiprintf_r>
 8025a02:	b002      	add	sp, #8
 8025a04:	f85d eb04 	ldr.w	lr, [sp], #4
 8025a08:	b003      	add	sp, #12
 8025a0a:	4770      	bx	lr
 8025a0c:	20001dc4 	.word	0x20001dc4

08025a10 <__ascii_wctomb>:
 8025a10:	4603      	mov	r3, r0
 8025a12:	4608      	mov	r0, r1
 8025a14:	b141      	cbz	r1, 8025a28 <__ascii_wctomb+0x18>
 8025a16:	2aff      	cmp	r2, #255	@ 0xff
 8025a18:	d904      	bls.n	8025a24 <__ascii_wctomb+0x14>
 8025a1a:	228a      	movs	r2, #138	@ 0x8a
 8025a1c:	601a      	str	r2, [r3, #0]
 8025a1e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8025a22:	4770      	bx	lr
 8025a24:	700a      	strb	r2, [r1, #0]
 8025a26:	2001      	movs	r0, #1
 8025a28:	4770      	bx	lr

08025a2a <abort>:
 8025a2a:	b508      	push	{r3, lr}
 8025a2c:	2006      	movs	r0, #6
 8025a2e:	f000 f96d 	bl	8025d0c <raise>
 8025a32:	2001      	movs	r0, #1
 8025a34:	f000 f9be 	bl	8025db4 <_exit>

08025a38 <__sfputc_r>:
 8025a38:	6893      	ldr	r3, [r2, #8]
 8025a3a:	3b01      	subs	r3, #1
 8025a3c:	2b00      	cmp	r3, #0
 8025a3e:	b410      	push	{r4}
 8025a40:	6093      	str	r3, [r2, #8]
 8025a42:	da08      	bge.n	8025a56 <__sfputc_r+0x1e>
 8025a44:	6994      	ldr	r4, [r2, #24]
 8025a46:	42a3      	cmp	r3, r4
 8025a48:	db01      	blt.n	8025a4e <__sfputc_r+0x16>
 8025a4a:	290a      	cmp	r1, #10
 8025a4c:	d103      	bne.n	8025a56 <__sfputc_r+0x1e>
 8025a4e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025a52:	f7ff be28 	b.w	80256a6 <__swbuf_r>
 8025a56:	6813      	ldr	r3, [r2, #0]
 8025a58:	1c58      	adds	r0, r3, #1
 8025a5a:	6010      	str	r0, [r2, #0]
 8025a5c:	7019      	strb	r1, [r3, #0]
 8025a5e:	4608      	mov	r0, r1
 8025a60:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025a64:	4770      	bx	lr

08025a66 <__sfputs_r>:
 8025a66:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025a68:	4606      	mov	r6, r0
 8025a6a:	460f      	mov	r7, r1
 8025a6c:	4614      	mov	r4, r2
 8025a6e:	18d5      	adds	r5, r2, r3
 8025a70:	42ac      	cmp	r4, r5
 8025a72:	d101      	bne.n	8025a78 <__sfputs_r+0x12>
 8025a74:	2000      	movs	r0, #0
 8025a76:	e007      	b.n	8025a88 <__sfputs_r+0x22>
 8025a78:	f814 1b01 	ldrb.w	r1, [r4], #1
 8025a7c:	463a      	mov	r2, r7
 8025a7e:	4630      	mov	r0, r6
 8025a80:	f7ff ffda 	bl	8025a38 <__sfputc_r>
 8025a84:	1c43      	adds	r3, r0, #1
 8025a86:	d1f3      	bne.n	8025a70 <__sfputs_r+0xa>
 8025a88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08025a8c <_vfiprintf_r>:
 8025a8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025a90:	460d      	mov	r5, r1
 8025a92:	b09d      	sub	sp, #116	@ 0x74
 8025a94:	4614      	mov	r4, r2
 8025a96:	4698      	mov	r8, r3
 8025a98:	4606      	mov	r6, r0
 8025a9a:	b118      	cbz	r0, 8025aa4 <_vfiprintf_r+0x18>
 8025a9c:	6a03      	ldr	r3, [r0, #32]
 8025a9e:	b90b      	cbnz	r3, 8025aa4 <_vfiprintf_r+0x18>
 8025aa0:	f7fe fa08 	bl	8023eb4 <__sinit>
 8025aa4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8025aa6:	07d9      	lsls	r1, r3, #31
 8025aa8:	d405      	bmi.n	8025ab6 <_vfiprintf_r+0x2a>
 8025aaa:	89ab      	ldrh	r3, [r5, #12]
 8025aac:	059a      	lsls	r2, r3, #22
 8025aae:	d402      	bmi.n	8025ab6 <_vfiprintf_r+0x2a>
 8025ab0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8025ab2:	f7fe fad6 	bl	8024062 <__retarget_lock_acquire_recursive>
 8025ab6:	89ab      	ldrh	r3, [r5, #12]
 8025ab8:	071b      	lsls	r3, r3, #28
 8025aba:	d501      	bpl.n	8025ac0 <_vfiprintf_r+0x34>
 8025abc:	692b      	ldr	r3, [r5, #16]
 8025abe:	b99b      	cbnz	r3, 8025ae8 <_vfiprintf_r+0x5c>
 8025ac0:	4629      	mov	r1, r5
 8025ac2:	4630      	mov	r0, r6
 8025ac4:	f7ff fe2e 	bl	8025724 <__swsetup_r>
 8025ac8:	b170      	cbz	r0, 8025ae8 <_vfiprintf_r+0x5c>
 8025aca:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8025acc:	07dc      	lsls	r4, r3, #31
 8025ace:	d504      	bpl.n	8025ada <_vfiprintf_r+0x4e>
 8025ad0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8025ad4:	b01d      	add	sp, #116	@ 0x74
 8025ad6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025ada:	89ab      	ldrh	r3, [r5, #12]
 8025adc:	0598      	lsls	r0, r3, #22
 8025ade:	d4f7      	bmi.n	8025ad0 <_vfiprintf_r+0x44>
 8025ae0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8025ae2:	f7fe fabf 	bl	8024064 <__retarget_lock_release_recursive>
 8025ae6:	e7f3      	b.n	8025ad0 <_vfiprintf_r+0x44>
 8025ae8:	2300      	movs	r3, #0
 8025aea:	9309      	str	r3, [sp, #36]	@ 0x24
 8025aec:	2320      	movs	r3, #32
 8025aee:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8025af2:	f8cd 800c 	str.w	r8, [sp, #12]
 8025af6:	2330      	movs	r3, #48	@ 0x30
 8025af8:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8025ca8 <_vfiprintf_r+0x21c>
 8025afc:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8025b00:	f04f 0901 	mov.w	r9, #1
 8025b04:	4623      	mov	r3, r4
 8025b06:	469a      	mov	sl, r3
 8025b08:	f813 2b01 	ldrb.w	r2, [r3], #1
 8025b0c:	b10a      	cbz	r2, 8025b12 <_vfiprintf_r+0x86>
 8025b0e:	2a25      	cmp	r2, #37	@ 0x25
 8025b10:	d1f9      	bne.n	8025b06 <_vfiprintf_r+0x7a>
 8025b12:	ebba 0b04 	subs.w	fp, sl, r4
 8025b16:	d00b      	beq.n	8025b30 <_vfiprintf_r+0xa4>
 8025b18:	465b      	mov	r3, fp
 8025b1a:	4622      	mov	r2, r4
 8025b1c:	4629      	mov	r1, r5
 8025b1e:	4630      	mov	r0, r6
 8025b20:	f7ff ffa1 	bl	8025a66 <__sfputs_r>
 8025b24:	3001      	adds	r0, #1
 8025b26:	f000 80a7 	beq.w	8025c78 <_vfiprintf_r+0x1ec>
 8025b2a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8025b2c:	445a      	add	r2, fp
 8025b2e:	9209      	str	r2, [sp, #36]	@ 0x24
 8025b30:	f89a 3000 	ldrb.w	r3, [sl]
 8025b34:	2b00      	cmp	r3, #0
 8025b36:	f000 809f 	beq.w	8025c78 <_vfiprintf_r+0x1ec>
 8025b3a:	2300      	movs	r3, #0
 8025b3c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8025b40:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8025b44:	f10a 0a01 	add.w	sl, sl, #1
 8025b48:	9304      	str	r3, [sp, #16]
 8025b4a:	9307      	str	r3, [sp, #28]
 8025b4c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8025b50:	931a      	str	r3, [sp, #104]	@ 0x68
 8025b52:	4654      	mov	r4, sl
 8025b54:	2205      	movs	r2, #5
 8025b56:	f814 1b01 	ldrb.w	r1, [r4], #1
 8025b5a:	4853      	ldr	r0, [pc, #332]	@ (8025ca8 <_vfiprintf_r+0x21c>)
 8025b5c:	f7ea fa70 	bl	8010040 <memchr>
 8025b60:	9a04      	ldr	r2, [sp, #16]
 8025b62:	b9d8      	cbnz	r0, 8025b9c <_vfiprintf_r+0x110>
 8025b64:	06d1      	lsls	r1, r2, #27
 8025b66:	bf44      	itt	mi
 8025b68:	2320      	movmi	r3, #32
 8025b6a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8025b6e:	0713      	lsls	r3, r2, #28
 8025b70:	bf44      	itt	mi
 8025b72:	232b      	movmi	r3, #43	@ 0x2b
 8025b74:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8025b78:	f89a 3000 	ldrb.w	r3, [sl]
 8025b7c:	2b2a      	cmp	r3, #42	@ 0x2a
 8025b7e:	d015      	beq.n	8025bac <_vfiprintf_r+0x120>
 8025b80:	9a07      	ldr	r2, [sp, #28]
 8025b82:	4654      	mov	r4, sl
 8025b84:	2000      	movs	r0, #0
 8025b86:	f04f 0c0a 	mov.w	ip, #10
 8025b8a:	4621      	mov	r1, r4
 8025b8c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8025b90:	3b30      	subs	r3, #48	@ 0x30
 8025b92:	2b09      	cmp	r3, #9
 8025b94:	d94b      	bls.n	8025c2e <_vfiprintf_r+0x1a2>
 8025b96:	b1b0      	cbz	r0, 8025bc6 <_vfiprintf_r+0x13a>
 8025b98:	9207      	str	r2, [sp, #28]
 8025b9a:	e014      	b.n	8025bc6 <_vfiprintf_r+0x13a>
 8025b9c:	eba0 0308 	sub.w	r3, r0, r8
 8025ba0:	fa09 f303 	lsl.w	r3, r9, r3
 8025ba4:	4313      	orrs	r3, r2
 8025ba6:	9304      	str	r3, [sp, #16]
 8025ba8:	46a2      	mov	sl, r4
 8025baa:	e7d2      	b.n	8025b52 <_vfiprintf_r+0xc6>
 8025bac:	9b03      	ldr	r3, [sp, #12]
 8025bae:	1d19      	adds	r1, r3, #4
 8025bb0:	681b      	ldr	r3, [r3, #0]
 8025bb2:	9103      	str	r1, [sp, #12]
 8025bb4:	2b00      	cmp	r3, #0
 8025bb6:	bfbb      	ittet	lt
 8025bb8:	425b      	neglt	r3, r3
 8025bba:	f042 0202 	orrlt.w	r2, r2, #2
 8025bbe:	9307      	strge	r3, [sp, #28]
 8025bc0:	9307      	strlt	r3, [sp, #28]
 8025bc2:	bfb8      	it	lt
 8025bc4:	9204      	strlt	r2, [sp, #16]
 8025bc6:	7823      	ldrb	r3, [r4, #0]
 8025bc8:	2b2e      	cmp	r3, #46	@ 0x2e
 8025bca:	d10a      	bne.n	8025be2 <_vfiprintf_r+0x156>
 8025bcc:	7863      	ldrb	r3, [r4, #1]
 8025bce:	2b2a      	cmp	r3, #42	@ 0x2a
 8025bd0:	d132      	bne.n	8025c38 <_vfiprintf_r+0x1ac>
 8025bd2:	9b03      	ldr	r3, [sp, #12]
 8025bd4:	1d1a      	adds	r2, r3, #4
 8025bd6:	681b      	ldr	r3, [r3, #0]
 8025bd8:	9203      	str	r2, [sp, #12]
 8025bda:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8025bde:	3402      	adds	r4, #2
 8025be0:	9305      	str	r3, [sp, #20]
 8025be2:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8025cb8 <_vfiprintf_r+0x22c>
 8025be6:	7821      	ldrb	r1, [r4, #0]
 8025be8:	2203      	movs	r2, #3
 8025bea:	4650      	mov	r0, sl
 8025bec:	f7ea fa28 	bl	8010040 <memchr>
 8025bf0:	b138      	cbz	r0, 8025c02 <_vfiprintf_r+0x176>
 8025bf2:	9b04      	ldr	r3, [sp, #16]
 8025bf4:	eba0 000a 	sub.w	r0, r0, sl
 8025bf8:	2240      	movs	r2, #64	@ 0x40
 8025bfa:	4082      	lsls	r2, r0
 8025bfc:	4313      	orrs	r3, r2
 8025bfe:	3401      	adds	r4, #1
 8025c00:	9304      	str	r3, [sp, #16]
 8025c02:	f814 1b01 	ldrb.w	r1, [r4], #1
 8025c06:	4829      	ldr	r0, [pc, #164]	@ (8025cac <_vfiprintf_r+0x220>)
 8025c08:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8025c0c:	2206      	movs	r2, #6
 8025c0e:	f7ea fa17 	bl	8010040 <memchr>
 8025c12:	2800      	cmp	r0, #0
 8025c14:	d03f      	beq.n	8025c96 <_vfiprintf_r+0x20a>
 8025c16:	4b26      	ldr	r3, [pc, #152]	@ (8025cb0 <_vfiprintf_r+0x224>)
 8025c18:	bb1b      	cbnz	r3, 8025c62 <_vfiprintf_r+0x1d6>
 8025c1a:	9b03      	ldr	r3, [sp, #12]
 8025c1c:	3307      	adds	r3, #7
 8025c1e:	f023 0307 	bic.w	r3, r3, #7
 8025c22:	3308      	adds	r3, #8
 8025c24:	9303      	str	r3, [sp, #12]
 8025c26:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025c28:	443b      	add	r3, r7
 8025c2a:	9309      	str	r3, [sp, #36]	@ 0x24
 8025c2c:	e76a      	b.n	8025b04 <_vfiprintf_r+0x78>
 8025c2e:	fb0c 3202 	mla	r2, ip, r2, r3
 8025c32:	460c      	mov	r4, r1
 8025c34:	2001      	movs	r0, #1
 8025c36:	e7a8      	b.n	8025b8a <_vfiprintf_r+0xfe>
 8025c38:	2300      	movs	r3, #0
 8025c3a:	3401      	adds	r4, #1
 8025c3c:	9305      	str	r3, [sp, #20]
 8025c3e:	4619      	mov	r1, r3
 8025c40:	f04f 0c0a 	mov.w	ip, #10
 8025c44:	4620      	mov	r0, r4
 8025c46:	f810 2b01 	ldrb.w	r2, [r0], #1
 8025c4a:	3a30      	subs	r2, #48	@ 0x30
 8025c4c:	2a09      	cmp	r2, #9
 8025c4e:	d903      	bls.n	8025c58 <_vfiprintf_r+0x1cc>
 8025c50:	2b00      	cmp	r3, #0
 8025c52:	d0c6      	beq.n	8025be2 <_vfiprintf_r+0x156>
 8025c54:	9105      	str	r1, [sp, #20]
 8025c56:	e7c4      	b.n	8025be2 <_vfiprintf_r+0x156>
 8025c58:	fb0c 2101 	mla	r1, ip, r1, r2
 8025c5c:	4604      	mov	r4, r0
 8025c5e:	2301      	movs	r3, #1
 8025c60:	e7f0      	b.n	8025c44 <_vfiprintf_r+0x1b8>
 8025c62:	ab03      	add	r3, sp, #12
 8025c64:	9300      	str	r3, [sp, #0]
 8025c66:	462a      	mov	r2, r5
 8025c68:	4b12      	ldr	r3, [pc, #72]	@ (8025cb4 <_vfiprintf_r+0x228>)
 8025c6a:	a904      	add	r1, sp, #16
 8025c6c:	4630      	mov	r0, r6
 8025c6e:	f7fd fc29 	bl	80234c4 <_printf_float>
 8025c72:	4607      	mov	r7, r0
 8025c74:	1c78      	adds	r0, r7, #1
 8025c76:	d1d6      	bne.n	8025c26 <_vfiprintf_r+0x19a>
 8025c78:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8025c7a:	07d9      	lsls	r1, r3, #31
 8025c7c:	d405      	bmi.n	8025c8a <_vfiprintf_r+0x1fe>
 8025c7e:	89ab      	ldrh	r3, [r5, #12]
 8025c80:	059a      	lsls	r2, r3, #22
 8025c82:	d402      	bmi.n	8025c8a <_vfiprintf_r+0x1fe>
 8025c84:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8025c86:	f7fe f9ed 	bl	8024064 <__retarget_lock_release_recursive>
 8025c8a:	89ab      	ldrh	r3, [r5, #12]
 8025c8c:	065b      	lsls	r3, r3, #25
 8025c8e:	f53f af1f 	bmi.w	8025ad0 <_vfiprintf_r+0x44>
 8025c92:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8025c94:	e71e      	b.n	8025ad4 <_vfiprintf_r+0x48>
 8025c96:	ab03      	add	r3, sp, #12
 8025c98:	9300      	str	r3, [sp, #0]
 8025c9a:	462a      	mov	r2, r5
 8025c9c:	4b05      	ldr	r3, [pc, #20]	@ (8025cb4 <_vfiprintf_r+0x228>)
 8025c9e:	a904      	add	r1, sp, #16
 8025ca0:	4630      	mov	r0, r6
 8025ca2:	f7fd ff51 	bl	8023b48 <_printf_i>
 8025ca6:	e7e4      	b.n	8025c72 <_vfiprintf_r+0x1e6>
 8025ca8:	080263f0 	.word	0x080263f0
 8025cac:	080263fa 	.word	0x080263fa
 8025cb0:	080234c5 	.word	0x080234c5
 8025cb4:	08025a67 	.word	0x08025a67
 8025cb8:	080263f6 	.word	0x080263f6

08025cbc <_raise_r>:
 8025cbc:	291f      	cmp	r1, #31
 8025cbe:	b538      	push	{r3, r4, r5, lr}
 8025cc0:	4605      	mov	r5, r0
 8025cc2:	460c      	mov	r4, r1
 8025cc4:	d904      	bls.n	8025cd0 <_raise_r+0x14>
 8025cc6:	2316      	movs	r3, #22
 8025cc8:	6003      	str	r3, [r0, #0]
 8025cca:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8025cce:	bd38      	pop	{r3, r4, r5, pc}
 8025cd0:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8025cd2:	b112      	cbz	r2, 8025cda <_raise_r+0x1e>
 8025cd4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8025cd8:	b94b      	cbnz	r3, 8025cee <_raise_r+0x32>
 8025cda:	4628      	mov	r0, r5
 8025cdc:	f000 f830 	bl	8025d40 <_getpid_r>
 8025ce0:	4622      	mov	r2, r4
 8025ce2:	4601      	mov	r1, r0
 8025ce4:	4628      	mov	r0, r5
 8025ce6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8025cea:	f000 b817 	b.w	8025d1c <_kill_r>
 8025cee:	2b01      	cmp	r3, #1
 8025cf0:	d00a      	beq.n	8025d08 <_raise_r+0x4c>
 8025cf2:	1c59      	adds	r1, r3, #1
 8025cf4:	d103      	bne.n	8025cfe <_raise_r+0x42>
 8025cf6:	2316      	movs	r3, #22
 8025cf8:	6003      	str	r3, [r0, #0]
 8025cfa:	2001      	movs	r0, #1
 8025cfc:	e7e7      	b.n	8025cce <_raise_r+0x12>
 8025cfe:	2100      	movs	r1, #0
 8025d00:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8025d04:	4620      	mov	r0, r4
 8025d06:	4798      	blx	r3
 8025d08:	2000      	movs	r0, #0
 8025d0a:	e7e0      	b.n	8025cce <_raise_r+0x12>

08025d0c <raise>:
 8025d0c:	4b02      	ldr	r3, [pc, #8]	@ (8025d18 <raise+0xc>)
 8025d0e:	4601      	mov	r1, r0
 8025d10:	6818      	ldr	r0, [r3, #0]
 8025d12:	f7ff bfd3 	b.w	8025cbc <_raise_r>
 8025d16:	bf00      	nop
 8025d18:	20001dc4 	.word	0x20001dc4

08025d1c <_kill_r>:
 8025d1c:	b538      	push	{r3, r4, r5, lr}
 8025d1e:	4d07      	ldr	r5, [pc, #28]	@ (8025d3c <_kill_r+0x20>)
 8025d20:	2300      	movs	r3, #0
 8025d22:	4604      	mov	r4, r0
 8025d24:	4608      	mov	r0, r1
 8025d26:	4611      	mov	r1, r2
 8025d28:	602b      	str	r3, [r5, #0]
 8025d2a:	f000 f82b 	bl	8025d84 <_kill>
 8025d2e:	1c43      	adds	r3, r0, #1
 8025d30:	d102      	bne.n	8025d38 <_kill_r+0x1c>
 8025d32:	682b      	ldr	r3, [r5, #0]
 8025d34:	b103      	cbz	r3, 8025d38 <_kill_r+0x1c>
 8025d36:	6023      	str	r3, [r4, #0]
 8025d38:	bd38      	pop	{r3, r4, r5, pc}
 8025d3a:	bf00      	nop
 8025d3c:	20002380 	.word	0x20002380

08025d40 <_getpid_r>:
 8025d40:	f000 b810 	b.w	8025d64 <_getpid>

08025d44 <_close>:
 8025d44:	4b02      	ldr	r3, [pc, #8]	@ (8025d50 <_close+0xc>)
 8025d46:	2258      	movs	r2, #88	@ 0x58
 8025d48:	601a      	str	r2, [r3, #0]
 8025d4a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8025d4e:	4770      	bx	lr
 8025d50:	20002380 	.word	0x20002380

08025d54 <_fstat>:
 8025d54:	4b02      	ldr	r3, [pc, #8]	@ (8025d60 <_fstat+0xc>)
 8025d56:	2258      	movs	r2, #88	@ 0x58
 8025d58:	601a      	str	r2, [r3, #0]
 8025d5a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8025d5e:	4770      	bx	lr
 8025d60:	20002380 	.word	0x20002380

08025d64 <_getpid>:
 8025d64:	4b02      	ldr	r3, [pc, #8]	@ (8025d70 <_getpid+0xc>)
 8025d66:	2258      	movs	r2, #88	@ 0x58
 8025d68:	601a      	str	r2, [r3, #0]
 8025d6a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8025d6e:	4770      	bx	lr
 8025d70:	20002380 	.word	0x20002380

08025d74 <_isatty>:
 8025d74:	4b02      	ldr	r3, [pc, #8]	@ (8025d80 <_isatty+0xc>)
 8025d76:	2258      	movs	r2, #88	@ 0x58
 8025d78:	601a      	str	r2, [r3, #0]
 8025d7a:	2000      	movs	r0, #0
 8025d7c:	4770      	bx	lr
 8025d7e:	bf00      	nop
 8025d80:	20002380 	.word	0x20002380

08025d84 <_kill>:
 8025d84:	4b02      	ldr	r3, [pc, #8]	@ (8025d90 <_kill+0xc>)
 8025d86:	2258      	movs	r2, #88	@ 0x58
 8025d88:	601a      	str	r2, [r3, #0]
 8025d8a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8025d8e:	4770      	bx	lr
 8025d90:	20002380 	.word	0x20002380

08025d94 <_lseek>:
 8025d94:	4b02      	ldr	r3, [pc, #8]	@ (8025da0 <_lseek+0xc>)
 8025d96:	2258      	movs	r2, #88	@ 0x58
 8025d98:	601a      	str	r2, [r3, #0]
 8025d9a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8025d9e:	4770      	bx	lr
 8025da0:	20002380 	.word	0x20002380

08025da4 <_read>:
 8025da4:	4b02      	ldr	r3, [pc, #8]	@ (8025db0 <_read+0xc>)
 8025da6:	2258      	movs	r2, #88	@ 0x58
 8025da8:	601a      	str	r2, [r3, #0]
 8025daa:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8025dae:	4770      	bx	lr
 8025db0:	20002380 	.word	0x20002380

08025db4 <_exit>:
 8025db4:	e7fe      	b.n	8025db4 <_exit>
	...

08025db8 <_init>:
 8025db8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025dba:	bf00      	nop
 8025dbc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8025dbe:	bc08      	pop	{r3}
 8025dc0:	469e      	mov	lr, r3
 8025dc2:	4770      	bx	lr

08025dc4 <_fini>:
 8025dc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025dc6:	bf00      	nop
 8025dc8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8025dca:	bc08      	pop	{r3}
 8025dcc:	469e      	mov	lr, r3
 8025dce:	4770      	bx	lr
